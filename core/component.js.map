{"version":3,"file":"component.js","sourceRoot":"","sources":["component.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 19.1.6\n * Build date: Thu Sep 19 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\nimport {\r\n    ElementRef,\r\n    NgZone,\r\n    QueryList,\r\n    SimpleChanges,\r\n    PLATFORM_ID,\r\n    Inject,\r\n    EventEmitter,\r\n\r\n    OnChanges,\r\n    OnInit,\r\n    DoCheck,\r\n    AfterContentChecked,\r\n    AfterViewInit\r\n} from '@angular/core';\r\n\r\nimport { isPlatformServer } from '@angular/common';\r\nimport { TransferState, makeStateKey } from '@angular/platform-browser';\r\n\r\nimport { DxTemplateDirective } from './template';\r\nimport { IDxTemplateHost, DxTemplateHost } from './template-host';\r\nimport { EmitterHelper, NgEventsStrategy } from './events-strategy';\r\nimport { WatcherHelper } from './watcher-helper';\r\nimport * as domAdapter from 'devextreme/core/dom_adapter';\r\nimport * as events from 'devextreme/events';\r\n\r\nimport {\r\n    INestedOptionContainer,\r\n    ICollectionNestedOption,\r\n    ICollectionNestedOptionContainer,\r\n    CollectionNestedOptionContainerImpl\r\n} from './nested-option';\r\n\r\nexport const IS_PLATFORM_SERVER = makeStateKey<any>('DX_isPlatformServer');\r\n\r\nexport abstract class DxComponent implements OnChanges, OnInit, DoCheck, AfterContentChecked, AfterViewInit,\r\n    INestedOptionContainer, ICollectionNestedOptionContainer, IDxTemplateHost {\r\n    private _initialOptions: any = {};\r\n    protected _optionsToUpdate: any = {};\r\n    private _collectionContainerImpl: ICollectionNestedOptionContainer;\r\n    eventHelper: EmitterHelper;\r\n    optionChangedHandlers: EventEmitter<any> = new EventEmitter();\r\n    templates: DxTemplateDirective[];\r\n    instance: any;\r\n    isLinked = true;\r\n    changedOptions = {};\r\n    createInstanceOnInit = true;\r\n    widgetUpdateLocked = false;\r\n\r\n    private _initTemplates() {\r\n        if (this.templates.length) {\r\n            let initialTemplates = {};\r\n            this.templates.forEach(template => {\r\n                initialTemplates[template.name] = template;\r\n            });\r\n            this.instance.option('integrationOptions.templates', initialTemplates);\r\n        }\r\n    }\r\n\r\n    private _initEvents() {\r\n        this.instance.on('optionChanged', (e) => {\r\n            this.changedOptions[e.name] = e.value;\r\n\r\n            const value = e.name === e.fullName ? e.value : e.component.option(e.name);\r\n            this.eventHelper.fireNgEvent(e.name + 'Change', [value]);\r\n            this.optionChangedHandlers.emit(e);\r\n        });\r\n    }\r\n\r\n    private _initOptions() {\r\n        this._initialOptions.integrationOptions.watchMethod = this.watcherHelper.getWatchMethod();\r\n    }\r\n\r\n    private _initPlatform() {\r\n        if (this.transferState.hasKey(IS_PLATFORM_SERVER)) {\r\n            this._initialOptions.integrationOptions.renderedOnServer = this.transferState.get(IS_PLATFORM_SERVER, null);\r\n        } else if (isPlatformServer(this.platformId)) {\r\n            this.transferState.set(IS_PLATFORM_SERVER, true);\r\n        }\r\n    }\r\n\r\n    protected _createEventEmitters(events) {\r\n        this.eventHelper.createEmitters(events);\r\n\r\n        this._initialOptions.eventsStrategy = (instance) => {\r\n            let strategy = new NgEventsStrategy(instance);\r\n\r\n            events.filter(event => event.subscribe).forEach(event => {\r\n                strategy.addEmitter(event.subscribe, this[event.emit]);\r\n            });\r\n\r\n            return strategy;\r\n        };\r\n\r\n        this._initialOptions.nestedComponentOptions = function(component) {\r\n            return {\r\n                eventsStrategy: (instance) => { return new NgEventsStrategy(instance); },\r\n                nestedComponentOptions: component.option('nestedComponentOptions')\r\n            };\r\n        };\r\n    }\r\n\r\n    _shouldOptionChange(name: string, value: any) {\r\n        if (this.changedOptions.hasOwnProperty(name)) {\r\n            const prevValue = this.changedOptions[name];\r\n            delete this.changedOptions[name];\r\n\r\n            return value !== prevValue;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    clearChangedOptions() {\r\n        this.changedOptions = {};\r\n    }\r\n\r\n    protected _getOption(name: string) {\r\n        return this.instance ?\r\n            this.instance.option(name) :\r\n            this._initialOptions[name];\r\n    }\r\n\r\n    lockWidgetUpdate() {\r\n        if (!this.widgetUpdateLocked && this.instance) {\r\n            this.instance.beginUpdate();\r\n            this.widgetUpdateLocked = true;\r\n        }\r\n    }\r\n\r\n    unlockWidgetUpdate() {\r\n        if (this.widgetUpdateLocked) {\r\n            this.widgetUpdateLocked = false;\r\n            this.instance.endUpdate();\r\n        }\r\n    }\r\n\r\n    protected _setOption(name: string, value: any) {\r\n        this.lockWidgetUpdate();\r\n\r\n        if (!this._shouldOptionChange(name, value)) {\r\n            return;\r\n        }\r\n\r\n        if (this.instance) {\r\n            this.instance.option(name, value);\r\n        } else {\r\n            this._initialOptions[name] = value;\r\n        }\r\n    }\r\n\r\n    protected abstract _createInstance(element, options)\r\n\r\n    protected _createWidget(element: any) {\r\n        this._initialOptions.integrationOptions = {};\r\n        this._initPlatform();\r\n        this._initOptions();\r\n\r\n        let createInstanceOnInit = this.createInstanceOnInit;\r\n\r\n        this._initialOptions.onInitializing = function () {\r\n            if (createInstanceOnInit) {\r\n                this.beginUpdate();\r\n            }\r\n        };\r\n        this.instance = this._createInstance(element, this._initialOptions);\r\n        this._initEvents();\r\n        this._initialOptions = {};\r\n    }\r\n\r\n    protected _destroyWidget() {\r\n        if (this.instance) {\r\n            let element = this.instance.element();\r\n            events.triggerHandler(element, 'dxremove', { _angularIntegration: true });\r\n            this.instance.dispose();\r\n            domAdapter.removeElement(element);\r\n        }\r\n    }\r\n\r\n    constructor(protected element: ElementRef,\r\n        ngZone: NgZone,\r\n        templateHost: DxTemplateHost,\r\n        private watcherHelper: WatcherHelper,\r\n        private transferState: TransferState,\r\n        @Inject(PLATFORM_ID) private platformId: any) {\r\n        this.templates = [];\r\n        templateHost.setHost(this);\r\n        this._collectionContainerImpl = new CollectionNestedOptionContainerImpl(this._setOption.bind(this));\r\n        this.eventHelper = new EmitterHelper(ngZone, this);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        for (let key in changes) {\r\n            let change = changes[key];\r\n            if (change.currentValue !== this[key]) {\r\n                this._optionsToUpdate[key] = changes[key].currentValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.createInstanceOnInit) {\r\n            this._createWidget(this.element.nativeElement);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this.applyOptions();\r\n    }\r\n\r\n    ngAfterContentChecked() {\r\n        this.applyOptions();\r\n        this.unlockWidgetUpdate();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this._initTemplates();\r\n        if (this.createInstanceOnInit) {\r\n            this.instance.endUpdate();\r\n        }\r\n    }\r\n\r\n    applyOptions() {\r\n        if (Object.keys(this._optionsToUpdate).length) {\r\n            if (this.instance) {\r\n                this.instance.option(this._optionsToUpdate);\r\n            }\r\n            this._optionsToUpdate = {};\r\n        }\r\n    }\r\n\r\n    setTemplate(template: DxTemplateDirective) {\r\n        this.templates.push(template);\r\n    }\r\n\r\n    setChildren<T extends ICollectionNestedOption>(propertyName: string, items: QueryList<T>) {\r\n        return this._collectionContainerImpl.setChildren(propertyName, items);\r\n    }\r\n}\r\n\r\nexport abstract class DxComponentExtension extends DxComponent {\r\n    createInstance(element: any) {\r\n        this._createWidget(element);\r\n    }\r\n}\r\n"]}