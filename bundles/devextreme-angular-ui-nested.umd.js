(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('devextreme-angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('devextreme-angular/ui/nested', ['exports', '@angular/core', 'devextreme-angular/core', '@angular/common'], factory) :
    (global = global || self, factory((global['devextreme-angular'] = global['devextreme-angular'] || {}, global['devextreme-angular'].ui = global['devextreme-angular'].ui || {}, global['devextreme-angular'].ui.nested = {}), global.ng.core, global['devextreme-angular'].core, global.ng.common));
}(this, function (exports, core, core$1, common) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __exportStar(m, exports) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }

    function __values(o) {
        var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
        if (m) return m.call(o);
        return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result.default = mod;
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoAdapterComponent = /** @class */ (function (_super) {
        __extends(DxoAdapterComponent, _super);
        function DxoAdapterComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoAdapterComponent.prototype, "applyValidationResults", {
            get: function () {
                return this._getOption('applyValidationResults');
            },
            set: function (value) {
                this._setOption('applyValidationResults', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAdapterComponent.prototype, "bypass", {
            get: function () {
                return this._getOption('bypass');
            },
            set: function (value) {
                this._setOption('bypass', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAdapterComponent.prototype, "focus", {
            get: function () {
                return this._getOption('focus');
            },
            set: function (value) {
                this._setOption('focus', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAdapterComponent.prototype, "getValue", {
            get: function () {
                return this._getOption('getValue');
            },
            set: function (value) {
                this._setOption('getValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAdapterComponent.prototype, "reset", {
            get: function () {
                return this._getOption('reset');
            },
            set: function (value) {
                this._setOption('reset', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAdapterComponent.prototype, "validationRequestsCallbacks", {
            get: function () {
                return this._getOption('validationRequestsCallbacks');
            },
            set: function (value) {
                this._setOption('validationRequestsCallbacks', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAdapterComponent.prototype, "_optionPath", {
            get: function () {
                return 'adapter';
            },
            enumerable: true,
            configurable: true
        });
        DxoAdapterComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoAdapterComponent.prototype, "applyValidationResults", null);
        __decorate([
            core.Input()
        ], DxoAdapterComponent.prototype, "bypass", null);
        __decorate([
            core.Input()
        ], DxoAdapterComponent.prototype, "focus", null);
        __decorate([
            core.Input()
        ], DxoAdapterComponent.prototype, "getValue", null);
        __decorate([
            core.Input()
        ], DxoAdapterComponent.prototype, "reset", null);
        __decorate([
            core.Input()
        ], DxoAdapterComponent.prototype, "validationRequestsCallbacks", null);
        DxoAdapterComponent = __decorate([
            core.Component({
                selector: 'dxo-adapter',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoAdapterComponent);
        return DxoAdapterComponent;
    }(core$1.NestedOption));
    var DxoAdapterModule = /** @class */ (function () {
        function DxoAdapterModule() {
        }
        DxoAdapterModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoAdapterComponent
                ],
                exports: [
                    DxoAdapterComponent
                ],
            })
        ], DxoAdapterModule);
        return DxoAdapterModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoAdaptiveLayoutComponent = /** @class */ (function (_super) {
        __extends(DxoAdaptiveLayoutComponent, _super);
        function DxoAdaptiveLayoutComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoAdaptiveLayoutComponent.prototype, "height", {
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAdaptiveLayoutComponent.prototype, "keepLabels", {
            get: function () {
                return this._getOption('keepLabels');
            },
            set: function (value) {
                this._setOption('keepLabels', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAdaptiveLayoutComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAdaptiveLayoutComponent.prototype, "_optionPath", {
            get: function () {
                return 'adaptiveLayout';
            },
            enumerable: true,
            configurable: true
        });
        DxoAdaptiveLayoutComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoAdaptiveLayoutComponent.prototype, "height", null);
        __decorate([
            core.Input()
        ], DxoAdaptiveLayoutComponent.prototype, "keepLabels", null);
        __decorate([
            core.Input()
        ], DxoAdaptiveLayoutComponent.prototype, "width", null);
        DxoAdaptiveLayoutComponent = __decorate([
            core.Component({
                selector: 'dxo-adaptive-layout',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoAdaptiveLayoutComponent);
        return DxoAdaptiveLayoutComponent;
    }(core$1.NestedOption));
    var DxoAdaptiveLayoutModule = /** @class */ (function () {
        function DxoAdaptiveLayoutModule() {
        }
        DxoAdaptiveLayoutModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoAdaptiveLayoutComponent
                ],
                exports: [
                    DxoAdaptiveLayoutComponent
                ],
            })
        ], DxoAdaptiveLayoutModule);
        return DxoAdaptiveLayoutModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoAggregationIntervalComponent = /** @class */ (function (_super) {
        __extends(DxoAggregationIntervalComponent, _super);
        function DxoAggregationIntervalComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoAggregationIntervalComponent.prototype, "days", {
            get: function () {
                return this._getOption('days');
            },
            set: function (value) {
                this._setOption('days', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAggregationIntervalComponent.prototype, "hours", {
            get: function () {
                return this._getOption('hours');
            },
            set: function (value) {
                this._setOption('hours', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAggregationIntervalComponent.prototype, "milliseconds", {
            get: function () {
                return this._getOption('milliseconds');
            },
            set: function (value) {
                this._setOption('milliseconds', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAggregationIntervalComponent.prototype, "minutes", {
            get: function () {
                return this._getOption('minutes');
            },
            set: function (value) {
                this._setOption('minutes', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAggregationIntervalComponent.prototype, "months", {
            get: function () {
                return this._getOption('months');
            },
            set: function (value) {
                this._setOption('months', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAggregationIntervalComponent.prototype, "quarters", {
            get: function () {
                return this._getOption('quarters');
            },
            set: function (value) {
                this._setOption('quarters', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAggregationIntervalComponent.prototype, "seconds", {
            get: function () {
                return this._getOption('seconds');
            },
            set: function (value) {
                this._setOption('seconds', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAggregationIntervalComponent.prototype, "weeks", {
            get: function () {
                return this._getOption('weeks');
            },
            set: function (value) {
                this._setOption('weeks', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAggregationIntervalComponent.prototype, "years", {
            get: function () {
                return this._getOption('years');
            },
            set: function (value) {
                this._setOption('years', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAggregationIntervalComponent.prototype, "_optionPath", {
            get: function () {
                return 'aggregationInterval';
            },
            enumerable: true,
            configurable: true
        });
        DxoAggregationIntervalComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoAggregationIntervalComponent.prototype, "days", null);
        __decorate([
            core.Input()
        ], DxoAggregationIntervalComponent.prototype, "hours", null);
        __decorate([
            core.Input()
        ], DxoAggregationIntervalComponent.prototype, "milliseconds", null);
        __decorate([
            core.Input()
        ], DxoAggregationIntervalComponent.prototype, "minutes", null);
        __decorate([
            core.Input()
        ], DxoAggregationIntervalComponent.prototype, "months", null);
        __decorate([
            core.Input()
        ], DxoAggregationIntervalComponent.prototype, "quarters", null);
        __decorate([
            core.Input()
        ], DxoAggregationIntervalComponent.prototype, "seconds", null);
        __decorate([
            core.Input()
        ], DxoAggregationIntervalComponent.prototype, "weeks", null);
        __decorate([
            core.Input()
        ], DxoAggregationIntervalComponent.prototype, "years", null);
        DxoAggregationIntervalComponent = __decorate([
            core.Component({
                selector: 'dxo-aggregation-interval',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoAggregationIntervalComponent);
        return DxoAggregationIntervalComponent;
    }(core$1.NestedOption));
    var DxoAggregationIntervalModule = /** @class */ (function () {
        function DxoAggregationIntervalModule() {
        }
        DxoAggregationIntervalModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoAggregationIntervalComponent
                ],
                exports: [
                    DxoAggregationIntervalComponent
                ],
            })
        ], DxoAggregationIntervalModule);
        return DxoAggregationIntervalModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoAggregationComponent = /** @class */ (function (_super) {
        __extends(DxoAggregationComponent, _super);
        function DxoAggregationComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoAggregationComponent.prototype, "calculate", {
            get: function () {
                return this._getOption('calculate');
            },
            set: function (value) {
                this._setOption('calculate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAggregationComponent.prototype, "enabled", {
            get: function () {
                return this._getOption('enabled');
            },
            set: function (value) {
                this._setOption('enabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAggregationComponent.prototype, "method", {
            get: function () {
                return this._getOption('method');
            },
            set: function (value) {
                this._setOption('method', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAggregationComponent.prototype, "_optionPath", {
            get: function () {
                return 'aggregation';
            },
            enumerable: true,
            configurable: true
        });
        DxoAggregationComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoAggregationComponent.prototype, "calculate", null);
        __decorate([
            core.Input()
        ], DxoAggregationComponent.prototype, "enabled", null);
        __decorate([
            core.Input()
        ], DxoAggregationComponent.prototype, "method", null);
        DxoAggregationComponent = __decorate([
            core.Component({
                selector: 'dxo-aggregation',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoAggregationComponent);
        return DxoAggregationComponent;
    }(core$1.NestedOption));
    var DxoAggregationModule = /** @class */ (function () {
        function DxoAggregationModule() {
        }
        DxoAggregationModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoAggregationComponent
                ],
                exports: [
                    DxoAggregationComponent
                ],
            })
        ], DxoAggregationModule);
        return DxoAggregationModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoAnimationConfig = /** @class */ (function (_super) {
        __extends(DxoAnimationConfig, _super);
        function DxoAnimationConfig() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoAnimationConfig.prototype, "duration", {
            get: function () {
                return this._getOption('duration');
            },
            set: function (value) {
                this._setOption('duration', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAnimationConfig.prototype, "easing", {
            get: function () {
                return this._getOption('easing');
            },
            set: function (value) {
                this._setOption('easing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAnimationConfig.prototype, "enabled", {
            get: function () {
                return this._getOption('enabled');
            },
            set: function (value) {
                this._setOption('enabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAnimationConfig.prototype, "maxPointCountSupported", {
            get: function () {
                return this._getOption('maxPointCountSupported');
            },
            set: function (value) {
                this._setOption('maxPointCountSupported', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAnimationConfig.prototype, "hide", {
            get: function () {
                return this._getOption('hide');
            },
            set: function (value) {
                this._setOption('hide', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAnimationConfig.prototype, "show", {
            get: function () {
                return this._getOption('show');
            },
            set: function (value) {
                this._setOption('show', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAnimationConfig.prototype, "complete", {
            get: function () {
                return this._getOption('complete');
            },
            set: function (value) {
                this._setOption('complete', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAnimationConfig.prototype, "delay", {
            get: function () {
                return this._getOption('delay');
            },
            set: function (value) {
                this._setOption('delay', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAnimationConfig.prototype, "direction", {
            get: function () {
                return this._getOption('direction');
            },
            set: function (value) {
                this._setOption('direction', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAnimationConfig.prototype, "from", {
            get: function () {
                return this._getOption('from');
            },
            set: function (value) {
                this._setOption('from', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAnimationConfig.prototype, "staggerDelay", {
            get: function () {
                return this._getOption('staggerDelay');
            },
            set: function (value) {
                this._setOption('staggerDelay', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAnimationConfig.prototype, "start", {
            get: function () {
                return this._getOption('start');
            },
            set: function (value) {
                this._setOption('start', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAnimationConfig.prototype, "to", {
            get: function () {
                return this._getOption('to');
            },
            set: function (value) {
                this._setOption('to', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAnimationConfig.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoAnimationConfig;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoAnimationComponent = /** @class */ (function (_super) {
        __extends(DxoAnimationComponent, _super);
        function DxoAnimationComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoAnimationComponent.prototype, "_optionPath", {
            get: function () {
                return 'animation';
            },
            enumerable: true,
            configurable: true
        });
        DxoAnimationComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoAnimationComponent = __decorate([
            core.Component({
                selector: 'dxo-animation',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'duration',
                    'easing',
                    'enabled',
                    'maxPointCountSupported',
                    'hide',
                    'show',
                    'complete',
                    'delay',
                    'direction',
                    'from',
                    'staggerDelay',
                    'start',
                    'to',
                    'type'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoAnimationComponent);
        return DxoAnimationComponent;
    }(DxoAnimationConfig));
    var DxoAnimationModule = /** @class */ (function () {
        function DxoAnimationModule() {
        }
        DxoAnimationModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoAnimationComponent
                ],
                exports: [
                    DxoAnimationComponent
                ],
            })
        ], DxoAnimationModule);
        return DxoAnimationModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiChartAnnotationConfig = /** @class */ (function (_super) {
        __extends(DxiChartAnnotationConfig, _super);
        function DxiChartAnnotationConfig() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "allowDragging", {
            get: function () {
                return this._getOption('allowDragging');
            },
            set: function (value) {
                this._setOption('allowDragging', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "argument", {
            get: function () {
                return this._getOption('argument');
            },
            set: function (value) {
                this._setOption('argument', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "arrowLength", {
            get: function () {
                return this._getOption('arrowLength');
            },
            set: function (value) {
                this._setOption('arrowLength', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "arrowWidth", {
            get: function () {
                return this._getOption('arrowWidth');
            },
            set: function (value) {
                this._setOption('arrowWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "axis", {
            get: function () {
                return this._getOption('axis');
            },
            set: function (value) {
                this._setOption('axis', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "border", {
            get: function () {
                return this._getOption('border');
            },
            set: function (value) {
                this._setOption('border', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "customizeTooltip", {
            get: function () {
                return this._getOption('customizeTooltip');
            },
            set: function (value) {
                this._setOption('customizeTooltip', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "description", {
            get: function () {
                return this._getOption('description');
            },
            set: function (value) {
                this._setOption('description', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "font", {
            get: function () {
                return this._getOption('font');
            },
            set: function (value) {
                this._setOption('font', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "height", {
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "image", {
            get: function () {
                return this._getOption('image');
            },
            set: function (value) {
                this._setOption('image', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "offsetX", {
            get: function () {
                return this._getOption('offsetX');
            },
            set: function (value) {
                this._setOption('offsetX', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "offsetY", {
            get: function () {
                return this._getOption('offsetY');
            },
            set: function (value) {
                this._setOption('offsetY', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "paddingLeftRight", {
            get: function () {
                return this._getOption('paddingLeftRight');
            },
            set: function (value) {
                this._setOption('paddingLeftRight', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "paddingTopBottom", {
            get: function () {
                return this._getOption('paddingTopBottom');
            },
            set: function (value) {
                this._setOption('paddingTopBottom', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "series", {
            get: function () {
                return this._getOption('series');
            },
            set: function (value) {
                this._setOption('series', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "shadow", {
            get: function () {
                return this._getOption('shadow');
            },
            set: function (value) {
                this._setOption('shadow', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "text", {
            get: function () {
                return this._getOption('text');
            },
            set: function (value) {
                this._setOption('text', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "textOverflow", {
            get: function () {
                return this._getOption('textOverflow');
            },
            set: function (value) {
                this._setOption('textOverflow', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "tooltipEnabled", {
            get: function () {
                return this._getOption('tooltipEnabled');
            },
            set: function (value) {
                this._setOption('tooltipEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "value", {
            get: function () {
                return this._getOption('value');
            },
            set: function (value) {
                this._setOption('value', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "wordWrap", {
            get: function () {
                return this._getOption('wordWrap');
            },
            set: function (value) {
                this._setOption('wordWrap', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "x", {
            get: function () {
                return this._getOption('x');
            },
            set: function (value) {
                this._setOption('x', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartAnnotationConfig.prototype, "y", {
            get: function () {
                return this._getOption('y');
            },
            set: function (value) {
                this._setOption('y', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxiChartAnnotationConfig;
    }(core$1.CollectionNestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiAnnotationComponent = /** @class */ (function (_super) {
        __extends(DxiAnnotationComponent, _super);
        function DxiAnnotationComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiAnnotationComponent.prototype, "_optionPath", {
            get: function () {
                return 'annotations';
            },
            enumerable: true,
            configurable: true
        });
        DxiAnnotationComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxiAnnotationComponent = __decorate([
            core.Component({
                selector: 'dxi-annotation',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'allowDragging',
                    'argument',
                    'arrowLength',
                    'arrowWidth',
                    'axis',
                    'border',
                    'color',
                    'customizeTooltip',
                    'description',
                    'font',
                    'height',
                    'image',
                    'name',
                    'offsetX',
                    'offsetY',
                    'opacity',
                    'paddingLeftRight',
                    'paddingTopBottom',
                    'series',
                    'shadow',
                    'text',
                    'textOverflow',
                    'tooltipEnabled',
                    'type',
                    'value',
                    'width',
                    'wordWrap',
                    'x',
                    'y'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiAnnotationComponent);
        return DxiAnnotationComponent;
    }(DxiChartAnnotationConfig));
    var DxiAnnotationModule = /** @class */ (function () {
        function DxiAnnotationModule() {
        }
        DxiAnnotationModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiAnnotationComponent
                ],
                exports: [
                    DxiAnnotationComponent
                ],
            })
        ], DxiAnnotationModule);
        return DxiAnnotationModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoChartCommonSeriesSettings = /** @class */ (function (_super) {
        __extends(DxoChartCommonSeriesSettings, _super);
        function DxoChartCommonSeriesSettings() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "aggregation", {
            get: function () {
                return this._getOption('aggregation');
            },
            set: function (value) {
                this._setOption('aggregation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "area", {
            get: function () {
                return this._getOption('area');
            },
            set: function (value) {
                this._setOption('area', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "argumentField", {
            get: function () {
                return this._getOption('argumentField');
            },
            set: function (value) {
                this._setOption('argumentField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "axis", {
            get: function () {
                return this._getOption('axis');
            },
            set: function (value) {
                this._setOption('axis', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "bar", {
            get: function () {
                return this._getOption('bar');
            },
            set: function (value) {
                this._setOption('bar', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "barOverlapGroup", {
            get: function () {
                return this._getOption('barOverlapGroup');
            },
            set: function (value) {
                this._setOption('barOverlapGroup', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "barPadding", {
            get: function () {
                return this._getOption('barPadding');
            },
            set: function (value) {
                this._setOption('barPadding', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "barWidth", {
            get: function () {
                return this._getOption('barWidth');
            },
            set: function (value) {
                this._setOption('barWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "border", {
            get: function () {
                return this._getOption('border');
            },
            set: function (value) {
                this._setOption('border', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "bubble", {
            get: function () {
                return this._getOption('bubble');
            },
            set: function (value) {
                this._setOption('bubble', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "candlestick", {
            get: function () {
                return this._getOption('candlestick');
            },
            set: function (value) {
                this._setOption('candlestick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "closeValueField", {
            get: function () {
                return this._getOption('closeValueField');
            },
            set: function (value) {
                this._setOption('closeValueField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "cornerRadius", {
            get: function () {
                return this._getOption('cornerRadius');
            },
            set: function (value) {
                this._setOption('cornerRadius', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "dashStyle", {
            get: function () {
                return this._getOption('dashStyle');
            },
            set: function (value) {
                this._setOption('dashStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "fullstackedarea", {
            get: function () {
                return this._getOption('fullstackedarea');
            },
            set: function (value) {
                this._setOption('fullstackedarea', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "fullstackedbar", {
            get: function () {
                return this._getOption('fullstackedbar');
            },
            set: function (value) {
                this._setOption('fullstackedbar', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "fullstackedline", {
            get: function () {
                return this._getOption('fullstackedline');
            },
            set: function (value) {
                this._setOption('fullstackedline', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "fullstackedspline", {
            get: function () {
                return this._getOption('fullstackedspline');
            },
            set: function (value) {
                this._setOption('fullstackedspline', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "fullstackedsplinearea", {
            get: function () {
                return this._getOption('fullstackedsplinearea');
            },
            set: function (value) {
                this._setOption('fullstackedsplinearea', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "highValueField", {
            get: function () {
                return this._getOption('highValueField');
            },
            set: function (value) {
                this._setOption('highValueField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "hoverMode", {
            get: function () {
                return this._getOption('hoverMode');
            },
            set: function (value) {
                this._setOption('hoverMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "hoverStyle", {
            get: function () {
                return this._getOption('hoverStyle');
            },
            set: function (value) {
                this._setOption('hoverStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "ignoreEmptyPoints", {
            get: function () {
                return this._getOption('ignoreEmptyPoints');
            },
            set: function (value) {
                this._setOption('ignoreEmptyPoints', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "innerColor", {
            get: function () {
                return this._getOption('innerColor');
            },
            set: function (value) {
                this._setOption('innerColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "line", {
            get: function () {
                return this._getOption('line');
            },
            set: function (value) {
                this._setOption('line', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "lowValueField", {
            get: function () {
                return this._getOption('lowValueField');
            },
            set: function (value) {
                this._setOption('lowValueField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "maxLabelCount", {
            get: function () {
                return this._getOption('maxLabelCount');
            },
            set: function (value) {
                this._setOption('maxLabelCount', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "minBarSize", {
            get: function () {
                return this._getOption('minBarSize');
            },
            set: function (value) {
                this._setOption('minBarSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "openValueField", {
            get: function () {
                return this._getOption('openValueField');
            },
            set: function (value) {
                this._setOption('openValueField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "pane", {
            get: function () {
                return this._getOption('pane');
            },
            set: function (value) {
                this._setOption('pane', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "point", {
            get: function () {
                return this._getOption('point');
            },
            set: function (value) {
                this._setOption('point', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "rangearea", {
            get: function () {
                return this._getOption('rangearea');
            },
            set: function (value) {
                this._setOption('rangearea', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "rangebar", {
            get: function () {
                return this._getOption('rangebar');
            },
            set: function (value) {
                this._setOption('rangebar', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "rangeValue1Field", {
            get: function () {
                return this._getOption('rangeValue1Field');
            },
            set: function (value) {
                this._setOption('rangeValue1Field', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "rangeValue2Field", {
            get: function () {
                return this._getOption('rangeValue2Field');
            },
            set: function (value) {
                this._setOption('rangeValue2Field', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "reduction", {
            get: function () {
                return this._getOption('reduction');
            },
            set: function (value) {
                this._setOption('reduction', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "scatter", {
            get: function () {
                return this._getOption('scatter');
            },
            set: function (value) {
                this._setOption('scatter', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "selectionMode", {
            get: function () {
                return this._getOption('selectionMode');
            },
            set: function (value) {
                this._setOption('selectionMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "selectionStyle", {
            get: function () {
                return this._getOption('selectionStyle');
            },
            set: function (value) {
                this._setOption('selectionStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "showInLegend", {
            get: function () {
                return this._getOption('showInLegend');
            },
            set: function (value) {
                this._setOption('showInLegend', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "sizeField", {
            get: function () {
                return this._getOption('sizeField');
            },
            set: function (value) {
                this._setOption('sizeField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "spline", {
            get: function () {
                return this._getOption('spline');
            },
            set: function (value) {
                this._setOption('spline', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "splinearea", {
            get: function () {
                return this._getOption('splinearea');
            },
            set: function (value) {
                this._setOption('splinearea', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stack", {
            get: function () {
                return this._getOption('stack');
            },
            set: function (value) {
                this._setOption('stack', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stackedarea", {
            get: function () {
                return this._getOption('stackedarea');
            },
            set: function (value) {
                this._setOption('stackedarea', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stackedbar", {
            get: function () {
                return this._getOption('stackedbar');
            },
            set: function (value) {
                this._setOption('stackedbar', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stackedline", {
            get: function () {
                return this._getOption('stackedline');
            },
            set: function (value) {
                this._setOption('stackedline', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stackedspline", {
            get: function () {
                return this._getOption('stackedspline');
            },
            set: function (value) {
                this._setOption('stackedspline', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stackedsplinearea", {
            get: function () {
                return this._getOption('stackedsplinearea');
            },
            set: function (value) {
                this._setOption('stackedsplinearea', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "steparea", {
            get: function () {
                return this._getOption('steparea');
            },
            set: function (value) {
                this._setOption('steparea', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stepline", {
            get: function () {
                return this._getOption('stepline');
            },
            set: function (value) {
                this._setOption('stepline', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "stock", {
            get: function () {
                return this._getOption('stock');
            },
            set: function (value) {
                this._setOption('stock', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "tagField", {
            get: function () {
                return this._getOption('tagField');
            },
            set: function (value) {
                this._setOption('tagField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "valueErrorBar", {
            get: function () {
                return this._getOption('valueErrorBar');
            },
            set: function (value) {
                this._setOption('valueErrorBar', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "valueField", {
            get: function () {
                return this._getOption('valueField');
            },
            set: function (value) {
                this._setOption('valueField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "argumentType", {
            get: function () {
                return this._getOption('argumentType');
            },
            set: function (value) {
                this._setOption('argumentType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "minSegmentSize", {
            get: function () {
                return this._getOption('minSegmentSize');
            },
            set: function (value) {
                this._setOption('minSegmentSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "smallValuesGrouping", {
            get: function () {
                return this._getOption('smallValuesGrouping');
            },
            set: function (value) {
                this._setOption('smallValuesGrouping', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonSeriesSettings.prototype, "closed", {
            get: function () {
                return this._getOption('closed');
            },
            set: function (value) {
                this._setOption('closed', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoChartCommonSeriesSettings;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoAreaComponent = /** @class */ (function (_super) {
        __extends(DxoAreaComponent, _super);
        function DxoAreaComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoAreaComponent.prototype, "_optionPath", {
            get: function () {
                return 'area';
            },
            enumerable: true,
            configurable: true
        });
        DxoAreaComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoAreaComponent = __decorate([
            core.Component({
                selector: 'dxo-area',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width',
                    'closed'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoAreaComponent);
        return DxoAreaComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoAreaModule = /** @class */ (function () {
        function DxoAreaModule() {
        }
        DxoAreaModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoAreaComponent
                ],
                exports: [
                    DxoAreaComponent
                ],
            })
        ], DxoAreaModule);
        return DxoAreaModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiVizScaleBreak = /** @class */ (function (_super) {
        __extends(DxiVizScaleBreak, _super);
        function DxiVizScaleBreak() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxiVizScaleBreak.prototype, "endValue", {
            get: function () {
                return this._getOption('endValue');
            },
            set: function (value) {
                this._setOption('endValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiVizScaleBreak.prototype, "startValue", {
            get: function () {
                return this._getOption('startValue');
            },
            set: function (value) {
                this._setOption('startValue', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxiVizScaleBreak;
    }(core$1.CollectionNestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiBreakComponent = /** @class */ (function (_super) {
        __extends(DxiBreakComponent, _super);
        function DxiBreakComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiBreakComponent.prototype, "_optionPath", {
            get: function () {
                return 'breaks';
            },
            enumerable: true,
            configurable: true
        });
        DxiBreakComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxiBreakComponent = __decorate([
            core.Component({
                selector: 'dxi-break',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'endValue',
                    'startValue'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiBreakComponent);
        return DxiBreakComponent;
    }(DxiVizScaleBreak));
    var DxiBreakModule = /** @class */ (function () {
        function DxiBreakModule() {
        }
        DxiBreakModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiBreakComponent
                ],
                exports: [
                    DxiBreakComponent
                ],
            })
        ], DxiBreakModule);
        return DxiBreakModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiConstantLineComponent = /** @class */ (function (_super) {
        __extends(DxiConstantLineComponent, _super);
        function DxiConstantLineComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiConstantLineComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiConstantLineComponent.prototype, "dashStyle", {
            get: function () {
                return this._getOption('dashStyle');
            },
            set: function (value) {
                this._setOption('dashStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiConstantLineComponent.prototype, "displayBehindSeries", {
            get: function () {
                return this._getOption('displayBehindSeries');
            },
            set: function (value) {
                this._setOption('displayBehindSeries', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiConstantLineComponent.prototype, "extendAxis", {
            get: function () {
                return this._getOption('extendAxis');
            },
            set: function (value) {
                this._setOption('extendAxis', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiConstantLineComponent.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiConstantLineComponent.prototype, "paddingLeftRight", {
            get: function () {
                return this._getOption('paddingLeftRight');
            },
            set: function (value) {
                this._setOption('paddingLeftRight', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiConstantLineComponent.prototype, "paddingTopBottom", {
            get: function () {
                return this._getOption('paddingTopBottom');
            },
            set: function (value) {
                this._setOption('paddingTopBottom', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiConstantLineComponent.prototype, "value", {
            get: function () {
                return this._getOption('value');
            },
            set: function (value) {
                this._setOption('value', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiConstantLineComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiConstantLineComponent.prototype, "_optionPath", {
            get: function () {
                return 'constantLines';
            },
            enumerable: true,
            configurable: true
        });
        DxiConstantLineComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiConstantLineComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxiConstantLineComponent.prototype, "dashStyle", null);
        __decorate([
            core.Input()
        ], DxiConstantLineComponent.prototype, "displayBehindSeries", null);
        __decorate([
            core.Input()
        ], DxiConstantLineComponent.prototype, "extendAxis", null);
        __decorate([
            core.Input()
        ], DxiConstantLineComponent.prototype, "label", null);
        __decorate([
            core.Input()
        ], DxiConstantLineComponent.prototype, "paddingLeftRight", null);
        __decorate([
            core.Input()
        ], DxiConstantLineComponent.prototype, "paddingTopBottom", null);
        __decorate([
            core.Input()
        ], DxiConstantLineComponent.prototype, "value", null);
        __decorate([
            core.Input()
        ], DxiConstantLineComponent.prototype, "width", null);
        DxiConstantLineComponent = __decorate([
            core.Component({
                selector: 'dxi-constant-line',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiConstantLineComponent);
        return DxiConstantLineComponent;
    }(core$1.CollectionNestedOption));
    var DxiConstantLineModule = /** @class */ (function () {
        function DxiConstantLineModule() {
        }
        DxiConstantLineModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiConstantLineComponent
                ],
                exports: [
                    DxiConstantLineComponent
                ],
            })
        ], DxiConstantLineModule);
        return DxiConstantLineModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiStripComponent = /** @class */ (function (_super) {
        __extends(DxiStripComponent, _super);
        function DxiStripComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiStripComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiStripComponent.prototype, "endValue", {
            get: function () {
                return this._getOption('endValue');
            },
            set: function (value) {
                this._setOption('endValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiStripComponent.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiStripComponent.prototype, "paddingLeftRight", {
            get: function () {
                return this._getOption('paddingLeftRight');
            },
            set: function (value) {
                this._setOption('paddingLeftRight', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiStripComponent.prototype, "paddingTopBottom", {
            get: function () {
                return this._getOption('paddingTopBottom');
            },
            set: function (value) {
                this._setOption('paddingTopBottom', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiStripComponent.prototype, "startValue", {
            get: function () {
                return this._getOption('startValue');
            },
            set: function (value) {
                this._setOption('startValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiStripComponent.prototype, "_optionPath", {
            get: function () {
                return 'strips';
            },
            enumerable: true,
            configurable: true
        });
        DxiStripComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiStripComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxiStripComponent.prototype, "endValue", null);
        __decorate([
            core.Input()
        ], DxiStripComponent.prototype, "label", null);
        __decorate([
            core.Input()
        ], DxiStripComponent.prototype, "paddingLeftRight", null);
        __decorate([
            core.Input()
        ], DxiStripComponent.prototype, "paddingTopBottom", null);
        __decorate([
            core.Input()
        ], DxiStripComponent.prototype, "startValue", null);
        DxiStripComponent = __decorate([
            core.Component({
                selector: 'dxi-strip',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiStripComponent);
        return DxiStripComponent;
    }(core$1.CollectionNestedOption));
    var DxiStripModule = /** @class */ (function () {
        function DxiStripModule() {
        }
        DxiStripModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiStripComponent
                ],
                exports: [
                    DxiStripComponent
                ],
            })
        ], DxiStripModule);
        return DxiStripModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoArgumentAxisComponent = /** @class */ (function (_super) {
        __extends(DxoArgumentAxisComponent, _super);
        function DxoArgumentAxisComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            _this._createEventEmitters([
                { emit: 'visualRangeChange' }
            ]);
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "aggregationGroupWidth", {
            get: function () {
                return this._getOption('aggregationGroupWidth');
            },
            set: function (value) {
                this._setOption('aggregationGroupWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "aggregationInterval", {
            get: function () {
                return this._getOption('aggregationInterval');
            },
            set: function (value) {
                this._setOption('aggregationInterval', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "allowDecimals", {
            get: function () {
                return this._getOption('allowDecimals');
            },
            set: function (value) {
                this._setOption('allowDecimals', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "argumentType", {
            get: function () {
                return this._getOption('argumentType');
            },
            set: function (value) {
                this._setOption('argumentType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "axisDivisionFactor", {
            get: function () {
                return this._getOption('axisDivisionFactor');
            },
            set: function (value) {
                this._setOption('axisDivisionFactor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "breaks", {
            get: function () {
                return this._getOption('breaks');
            },
            set: function (value) {
                this._setOption('breaks', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "breakStyle", {
            get: function () {
                return this._getOption('breakStyle');
            },
            set: function (value) {
                this._setOption('breakStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "categories", {
            get: function () {
                return this._getOption('categories');
            },
            set: function (value) {
                this._setOption('categories', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "constantLines", {
            get: function () {
                return this._getOption('constantLines');
            },
            set: function (value) {
                this._setOption('constantLines', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "constantLineStyle", {
            get: function () {
                return this._getOption('constantLineStyle');
            },
            set: function (value) {
                this._setOption('constantLineStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "discreteAxisDivisionMode", {
            get: function () {
                return this._getOption('discreteAxisDivisionMode');
            },
            set: function (value) {
                this._setOption('discreteAxisDivisionMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "endOnTick", {
            get: function () {
                return this._getOption('endOnTick');
            },
            set: function (value) {
                this._setOption('endOnTick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "grid", {
            get: function () {
                return this._getOption('grid');
            },
            set: function (value) {
                this._setOption('grid', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "holidays", {
            get: function () {
                return this._getOption('holidays');
            },
            set: function (value) {
                this._setOption('holidays', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "hoverMode", {
            get: function () {
                return this._getOption('hoverMode');
            },
            set: function (value) {
                this._setOption('hoverMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "inverted", {
            get: function () {
                return this._getOption('inverted');
            },
            set: function (value) {
                this._setOption('inverted', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "logarithmBase", {
            get: function () {
                return this._getOption('logarithmBase');
            },
            set: function (value) {
                this._setOption('logarithmBase', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "max", {
            get: function () {
                return this._getOption('max');
            },
            set: function (value) {
                this._setOption('max', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "maxValueMargin", {
            get: function () {
                return this._getOption('maxValueMargin');
            },
            set: function (value) {
                this._setOption('maxValueMargin', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "min", {
            get: function () {
                return this._getOption('min');
            },
            set: function (value) {
                this._setOption('min', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "minorGrid", {
            get: function () {
                return this._getOption('minorGrid');
            },
            set: function (value) {
                this._setOption('minorGrid', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "minorTick", {
            get: function () {
                return this._getOption('minorTick');
            },
            set: function (value) {
                this._setOption('minorTick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "minorTickCount", {
            get: function () {
                return this._getOption('minorTickCount');
            },
            set: function (value) {
                this._setOption('minorTickCount', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "minorTickInterval", {
            get: function () {
                return this._getOption('minorTickInterval');
            },
            set: function (value) {
                this._setOption('minorTickInterval', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "minValueMargin", {
            get: function () {
                return this._getOption('minValueMargin');
            },
            set: function (value) {
                this._setOption('minValueMargin', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "minVisualRangeLength", {
            get: function () {
                return this._getOption('minVisualRangeLength');
            },
            set: function (value) {
                this._setOption('minVisualRangeLength', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "placeholderSize", {
            get: function () {
                return this._getOption('placeholderSize');
            },
            set: function (value) {
                this._setOption('placeholderSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "position", {
            get: function () {
                return this._getOption('position');
            },
            set: function (value) {
                this._setOption('position', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "singleWorkdays", {
            get: function () {
                return this._getOption('singleWorkdays');
            },
            set: function (value) {
                this._setOption('singleWorkdays', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "strips", {
            get: function () {
                return this._getOption('strips');
            },
            set: function (value) {
                this._setOption('strips', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "stripStyle", {
            get: function () {
                return this._getOption('stripStyle');
            },
            set: function (value) {
                this._setOption('stripStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "tick", {
            get: function () {
                return this._getOption('tick');
            },
            set: function (value) {
                this._setOption('tick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "tickInterval", {
            get: function () {
                return this._getOption('tickInterval');
            },
            set: function (value) {
                this._setOption('tickInterval', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "title", {
            get: function () {
                return this._getOption('title');
            },
            set: function (value) {
                this._setOption('title', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "valueMarginsEnabled", {
            get: function () {
                return this._getOption('valueMarginsEnabled');
            },
            set: function (value) {
                this._setOption('valueMarginsEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "visualRange", {
            get: function () {
                return this._getOption('visualRange');
            },
            set: function (value) {
                this._setOption('visualRange', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "visualRangeUpdateMode", {
            get: function () {
                return this._getOption('visualRangeUpdateMode');
            },
            set: function (value) {
                this._setOption('visualRangeUpdateMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "wholeRange", {
            get: function () {
                return this._getOption('wholeRange');
            },
            set: function (value) {
                this._setOption('wholeRange', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "workdaysOnly", {
            get: function () {
                return this._getOption('workdaysOnly');
            },
            set: function (value) {
                this._setOption('workdaysOnly', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "workWeek", {
            get: function () {
                return this._getOption('workWeek');
            },
            set: function (value) {
                this._setOption('workWeek', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "firstPointOnStartAngle", {
            get: function () {
                return this._getOption('firstPointOnStartAngle');
            },
            set: function (value) {
                this._setOption('firstPointOnStartAngle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "originValue", {
            get: function () {
                return this._getOption('originValue');
            },
            set: function (value) {
                this._setOption('originValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "period", {
            get: function () {
                return this._getOption('period');
            },
            set: function (value) {
                this._setOption('period', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "startAngle", {
            get: function () {
                return this._getOption('startAngle');
            },
            set: function (value) {
                this._setOption('startAngle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "_optionPath", {
            get: function () {
                return 'argumentAxis';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "breaksChildren", {
            get: function () {
                return this._getOption('breaks');
            },
            set: function (value) {
                this.setChildren('breaks', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "constantLinesChildren", {
            get: function () {
                return this._getOption('constantLines');
            },
            set: function (value) {
                this.setChildren('constantLines', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoArgumentAxisComponent.prototype, "stripsChildren", {
            get: function () {
                return this._getOption('strips');
            },
            set: function (value) {
                this.setChildren('strips', value);
            },
            enumerable: true,
            configurable: true
        });
        DxoArgumentAxisComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "aggregationGroupWidth", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "aggregationInterval", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "allowDecimals", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "argumentType", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "axisDivisionFactor", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "breaks", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "breakStyle", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "categories", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "constantLines", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "constantLineStyle", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "discreteAxisDivisionMode", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "endOnTick", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "grid", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "holidays", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "hoverMode", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "inverted", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "label", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "logarithmBase", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "max", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "maxValueMargin", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "min", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "minorGrid", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "minorTick", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "minorTickCount", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "minorTickInterval", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "minValueMargin", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "minVisualRangeLength", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "placeholderSize", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "position", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "singleWorkdays", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "strips", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "stripStyle", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "tick", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "tickInterval", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "title", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "type", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "valueMarginsEnabled", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "visualRange", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "visualRangeUpdateMode", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "wholeRange", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "width", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "workdaysOnly", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "workWeek", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "firstPointOnStartAngle", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "originValue", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "period", null);
        __decorate([
            core.Input()
        ], DxoArgumentAxisComponent.prototype, "startAngle", null);
        __decorate([
            core.Output()
        ], DxoArgumentAxisComponent.prototype, "visualRangeChange", void 0);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiBreakComponent; }))
        ], DxoArgumentAxisComponent.prototype, "breaksChildren", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiConstantLineComponent; }))
        ], DxoArgumentAxisComponent.prototype, "constantLinesChildren", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiStripComponent; }))
        ], DxoArgumentAxisComponent.prototype, "stripsChildren", null);
        DxoArgumentAxisComponent = __decorate([
            core.Component({
                selector: 'dxo-argument-axis',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoArgumentAxisComponent);
        return DxoArgumentAxisComponent;
    }(core$1.NestedOption));
    var DxoArgumentAxisModule = /** @class */ (function () {
        function DxoArgumentAxisModule() {
        }
        DxoArgumentAxisModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoArgumentAxisComponent
                ],
                exports: [
                    DxoArgumentAxisComponent
                ],
            })
        ], DxoArgumentAxisModule);
        return DxoArgumentAxisModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFormat = /** @class */ (function (_super) {
        __extends(DxoFormat, _super);
        function DxoFormat() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoFormat.prototype, "currency", {
            get: function () {
                return this._getOption('currency');
            },
            set: function (value) {
                this._setOption('currency', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormat.prototype, "formatter", {
            get: function () {
                return this._getOption('formatter');
            },
            set: function (value) {
                this._setOption('formatter', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormat.prototype, "parser", {
            get: function () {
                return this._getOption('parser');
            },
            set: function (value) {
                this._setOption('parser', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormat.prototype, "precision", {
            get: function () {
                return this._getOption('precision');
            },
            set: function (value) {
                this._setOption('precision', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormat.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoFormat;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoArgumentFormatComponent = /** @class */ (function (_super) {
        __extends(DxoArgumentFormatComponent, _super);
        function DxoArgumentFormatComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoArgumentFormatComponent.prototype, "_optionPath", {
            get: function () {
                return 'argumentFormat';
            },
            enumerable: true,
            configurable: true
        });
        DxoArgumentFormatComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoArgumentFormatComponent = __decorate([
            core.Component({
                selector: 'dxo-argument-format',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'currency',
                    'formatter',
                    'parser',
                    'precision',
                    'type'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoArgumentFormatComponent);
        return DxoArgumentFormatComponent;
    }(DxoFormat));
    var DxoArgumentFormatModule = /** @class */ (function () {
        function DxoArgumentFormatModule() {
        }
        DxoArgumentFormatModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoArgumentFormatComponent
                ],
                exports: [
                    DxoArgumentFormatComponent
                ],
            })
        ], DxoArgumentFormatModule);
        return DxoArgumentFormatModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoAtComponent = /** @class */ (function (_super) {
        __extends(DxoAtComponent, _super);
        function DxoAtComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoAtComponent.prototype, "x", {
            get: function () {
                return this._getOption('x');
            },
            set: function (value) {
                this._setOption('x', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAtComponent.prototype, "y", {
            get: function () {
                return this._getOption('y');
            },
            set: function (value) {
                this._setOption('y', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoAtComponent.prototype, "_optionPath", {
            get: function () {
                return 'at';
            },
            enumerable: true,
            configurable: true
        });
        DxoAtComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoAtComponent.prototype, "x", null);
        __decorate([
            core.Input()
        ], DxoAtComponent.prototype, "y", null);
        DxoAtComponent = __decorate([
            core.Component({
                selector: 'dxo-at',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoAtComponent);
        return DxoAtComponent;
    }(core$1.NestedOption));
    var DxoAtModule = /** @class */ (function () {
        function DxoAtModule() {
        }
        DxoAtModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoAtComponent
                ],
                exports: [
                    DxoAtComponent
                ],
            })
        ], DxoAtModule);
        return DxoAtModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoBackgroundComponent = /** @class */ (function (_super) {
        __extends(DxoBackgroundComponent, _super);
        function DxoBackgroundComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoBackgroundComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBackgroundComponent.prototype, "image", {
            get: function () {
                return this._getOption('image');
            },
            set: function (value) {
                this._setOption('image', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBackgroundComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBackgroundComponent.prototype, "borderColor", {
            get: function () {
                return this._getOption('borderColor');
            },
            set: function (value) {
                this._setOption('borderColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBackgroundComponent.prototype, "_optionPath", {
            get: function () {
                return 'background';
            },
            enumerable: true,
            configurable: true
        });
        DxoBackgroundComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoBackgroundComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoBackgroundComponent.prototype, "image", null);
        __decorate([
            core.Input()
        ], DxoBackgroundComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxoBackgroundComponent.prototype, "borderColor", null);
        DxoBackgroundComponent = __decorate([
            core.Component({
                selector: 'dxo-background',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoBackgroundComponent);
        return DxoBackgroundComponent;
    }(core$1.NestedOption));
    var DxoBackgroundModule = /** @class */ (function () {
        function DxoBackgroundModule() {
        }
        DxoBackgroundModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoBackgroundComponent
                ],
                exports: [
                    DxoBackgroundComponent
                ],
            })
        ], DxoBackgroundModule);
        return DxoBackgroundModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoBarComponent = /** @class */ (function (_super) {
        __extends(DxoBarComponent, _super);
        function DxoBarComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoBarComponent.prototype, "_optionPath", {
            get: function () {
                return 'bar';
            },
            enumerable: true,
            configurable: true
        });
        DxoBarComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoBarComponent = __decorate([
            core.Component({
                selector: 'dxo-bar',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width',
                    'closed'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoBarComponent);
        return DxoBarComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoBarModule = /** @class */ (function () {
        function DxoBarModule() {
        }
        DxoBarModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoBarComponent
                ],
                exports: [
                    DxoBarComponent
                ],
            })
        ], DxoBarModule);
        return DxoBarModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoBehaviorComponent = /** @class */ (function (_super) {
        __extends(DxoBehaviorComponent, _super);
        function DxoBehaviorComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoBehaviorComponent.prototype, "allowSlidersSwap", {
            get: function () {
                return this._getOption('allowSlidersSwap');
            },
            set: function (value) {
                this._setOption('allowSlidersSwap', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBehaviorComponent.prototype, "animationEnabled", {
            get: function () {
                return this._getOption('animationEnabled');
            },
            set: function (value) {
                this._setOption('animationEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBehaviorComponent.prototype, "callValueChanged", {
            get: function () {
                return this._getOption('callValueChanged');
            },
            set: function (value) {
                this._setOption('callValueChanged', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBehaviorComponent.prototype, "manualRangeSelectionEnabled", {
            get: function () {
                return this._getOption('manualRangeSelectionEnabled');
            },
            set: function (value) {
                this._setOption('manualRangeSelectionEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBehaviorComponent.prototype, "moveSelectedRangeByClick", {
            get: function () {
                return this._getOption('moveSelectedRangeByClick');
            },
            set: function (value) {
                this._setOption('moveSelectedRangeByClick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBehaviorComponent.prototype, "snapToTicks", {
            get: function () {
                return this._getOption('snapToTicks');
            },
            set: function (value) {
                this._setOption('snapToTicks', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBehaviorComponent.prototype, "_optionPath", {
            get: function () {
                return 'behavior';
            },
            enumerable: true,
            configurable: true
        });
        DxoBehaviorComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoBehaviorComponent.prototype, "allowSlidersSwap", null);
        __decorate([
            core.Input()
        ], DxoBehaviorComponent.prototype, "animationEnabled", null);
        __decorate([
            core.Input()
        ], DxoBehaviorComponent.prototype, "callValueChanged", null);
        __decorate([
            core.Input()
        ], DxoBehaviorComponent.prototype, "manualRangeSelectionEnabled", null);
        __decorate([
            core.Input()
        ], DxoBehaviorComponent.prototype, "moveSelectedRangeByClick", null);
        __decorate([
            core.Input()
        ], DxoBehaviorComponent.prototype, "snapToTicks", null);
        DxoBehaviorComponent = __decorate([
            core.Component({
                selector: 'dxo-behavior',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoBehaviorComponent);
        return DxoBehaviorComponent;
    }(core$1.NestedOption));
    var DxoBehaviorModule = /** @class */ (function () {
        function DxoBehaviorModule() {
        }
        DxoBehaviorModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoBehaviorComponent
                ],
                exports: [
                    DxoBehaviorComponent
                ],
            })
        ], DxoBehaviorModule);
        return DxoBehaviorModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoBorderComponent = /** @class */ (function (_super) {
        __extends(DxoBorderComponent, _super);
        function DxoBorderComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoBorderComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBorderComponent.prototype, "cornerRadius", {
            get: function () {
                return this._getOption('cornerRadius');
            },
            set: function (value) {
                this._setOption('cornerRadius', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBorderComponent.prototype, "dashStyle", {
            get: function () {
                return this._getOption('dashStyle');
            },
            set: function (value) {
                this._setOption('dashStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBorderComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBorderComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBorderComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBorderComponent.prototype, "bottom", {
            get: function () {
                return this._getOption('bottom');
            },
            set: function (value) {
                this._setOption('bottom', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBorderComponent.prototype, "left", {
            get: function () {
                return this._getOption('left');
            },
            set: function (value) {
                this._setOption('left', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBorderComponent.prototype, "right", {
            get: function () {
                return this._getOption('right');
            },
            set: function (value) {
                this._setOption('right', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBorderComponent.prototype, "top", {
            get: function () {
                return this._getOption('top');
            },
            set: function (value) {
                this._setOption('top', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBorderComponent.prototype, "_optionPath", {
            get: function () {
                return 'border';
            },
            enumerable: true,
            configurable: true
        });
        DxoBorderComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoBorderComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoBorderComponent.prototype, "cornerRadius", null);
        __decorate([
            core.Input()
        ], DxoBorderComponent.prototype, "dashStyle", null);
        __decorate([
            core.Input()
        ], DxoBorderComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxoBorderComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxoBorderComponent.prototype, "width", null);
        __decorate([
            core.Input()
        ], DxoBorderComponent.prototype, "bottom", null);
        __decorate([
            core.Input()
        ], DxoBorderComponent.prototype, "left", null);
        __decorate([
            core.Input()
        ], DxoBorderComponent.prototype, "right", null);
        __decorate([
            core.Input()
        ], DxoBorderComponent.prototype, "top", null);
        DxoBorderComponent = __decorate([
            core.Component({
                selector: 'dxo-border',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoBorderComponent);
        return DxoBorderComponent;
    }(core$1.NestedOption));
    var DxoBorderModule = /** @class */ (function () {
        function DxoBorderModule() {
        }
        DxoBorderModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoBorderComponent
                ],
                exports: [
                    DxoBorderComponent
                ],
            })
        ], DxoBorderModule);
        return DxoBorderModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoBoundaryOffsetComponent = /** @class */ (function (_super) {
        __extends(DxoBoundaryOffsetComponent, _super);
        function DxoBoundaryOffsetComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoBoundaryOffsetComponent.prototype, "x", {
            get: function () {
                return this._getOption('x');
            },
            set: function (value) {
                this._setOption('x', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoundaryOffsetComponent.prototype, "y", {
            get: function () {
                return this._getOption('y');
            },
            set: function (value) {
                this._setOption('y', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoundaryOffsetComponent.prototype, "_optionPath", {
            get: function () {
                return 'boundaryOffset';
            },
            enumerable: true,
            configurable: true
        });
        DxoBoundaryOffsetComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoBoundaryOffsetComponent.prototype, "x", null);
        __decorate([
            core.Input()
        ], DxoBoundaryOffsetComponent.prototype, "y", null);
        DxoBoundaryOffsetComponent = __decorate([
            core.Component({
                selector: 'dxo-boundary-offset',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoBoundaryOffsetComponent);
        return DxoBoundaryOffsetComponent;
    }(core$1.NestedOption));
    var DxoBoundaryOffsetModule = /** @class */ (function () {
        function DxoBoundaryOffsetModule() {
        }
        DxoBoundaryOffsetModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoBoundaryOffsetComponent
                ],
                exports: [
                    DxoBoundaryOffsetComponent
                ],
            })
        ], DxoBoundaryOffsetModule);
        return DxoBoundaryOffsetModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoBoxOptions = /** @class */ (function (_super) {
        __extends(DxoBoxOptions, _super);
        function DxoBoxOptions() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoBoxOptions.prototype, "align", {
            get: function () {
                return this._getOption('align');
            },
            set: function (value) {
                this._setOption('align', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "crossAlign", {
            get: function () {
                return this._getOption('crossAlign');
            },
            set: function (value) {
                this._setOption('crossAlign', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "dataSource", {
            get: function () {
                return this._getOption('dataSource');
            },
            set: function (value) {
                this._setOption('dataSource', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "direction", {
            get: function () {
                return this._getOption('direction');
            },
            set: function (value) {
                this._setOption('direction', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "disabled", {
            get: function () {
                return this._getOption('disabled');
            },
            set: function (value) {
                this._setOption('disabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "elementAttr", {
            get: function () {
                return this._getOption('elementAttr');
            },
            set: function (value) {
                this._setOption('elementAttr', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "height", {
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "hoverStateEnabled", {
            get: function () {
                return this._getOption('hoverStateEnabled');
            },
            set: function (value) {
                this._setOption('hoverStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "itemHoldTimeout", {
            get: function () {
                return this._getOption('itemHoldTimeout');
            },
            set: function (value) {
                this._setOption('itemHoldTimeout', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "items", {
            get: function () {
                return this._getOption('items');
            },
            set: function (value) {
                this._setOption('items', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "itemTemplate", {
            get: function () {
                return this._getOption('itemTemplate');
            },
            set: function (value) {
                this._setOption('itemTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "onContentReady", {
            get: function () {
                return this._getOption('onContentReady');
            },
            set: function (value) {
                this._setOption('onContentReady', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "onDisposing", {
            get: function () {
                return this._getOption('onDisposing');
            },
            set: function (value) {
                this._setOption('onDisposing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "onInitialized", {
            get: function () {
                return this._getOption('onInitialized');
            },
            set: function (value) {
                this._setOption('onInitialized', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "onItemClick", {
            get: function () {
                return this._getOption('onItemClick');
            },
            set: function (value) {
                this._setOption('onItemClick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "onItemContextMenu", {
            get: function () {
                return this._getOption('onItemContextMenu');
            },
            set: function (value) {
                this._setOption('onItemContextMenu', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "onItemHold", {
            get: function () {
                return this._getOption('onItemHold');
            },
            set: function (value) {
                this._setOption('onItemHold', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "onItemRendered", {
            get: function () {
                return this._getOption('onItemRendered');
            },
            set: function (value) {
                this._setOption('onItemRendered', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "onOptionChanged", {
            get: function () {
                return this._getOption('onOptionChanged');
            },
            set: function (value) {
                this._setOption('onOptionChanged', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "rtlEnabled", {
            get: function () {
                return this._getOption('rtlEnabled');
            },
            set: function (value) {
                this._setOption('rtlEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxOptions.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoBoxOptions;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiButtonGroupItem = /** @class */ (function (_super) {
        __extends(DxiButtonGroupItem, _super);
        function DxiButtonGroupItem() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxiButtonGroupItem.prototype, "disabled", {
            get: function () {
                return this._getOption('disabled');
            },
            set: function (value) {
                this._setOption('disabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "html", {
            get: function () {
                return this._getOption('html');
            },
            set: function (value) {
                this._setOption('html', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "icon", {
            get: function () {
                return this._getOption('icon');
            },
            set: function (value) {
                this._setOption('icon', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "template", {
            get: function () {
                return this._getOption('template');
            },
            set: function (value) {
                this._setOption('template', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "text", {
            get: function () {
                return this._getOption('text');
            },
            set: function (value) {
                this._setOption('text', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "title", {
            get: function () {
                return this._getOption('title');
            },
            set: function (value) {
                this._setOption('title', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "onClick", {
            get: function () {
                return this._getOption('onClick');
            },
            set: function (value) {
                this._setOption('onClick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "baseSize", {
            get: function () {
                return this._getOption('baseSize');
            },
            set: function (value) {
                this._setOption('baseSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "box", {
            get: function () {
                return this._getOption('box');
            },
            set: function (value) {
                this._setOption('box', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "ratio", {
            get: function () {
                return this._getOption('ratio');
            },
            set: function (value) {
                this._setOption('ratio', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "shrink", {
            get: function () {
                return this._getOption('shrink');
            },
            set: function (value) {
                this._setOption('shrink', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "hint", {
            get: function () {
                return this._getOption('hint');
            },
            set: function (value) {
                this._setOption('hint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "beginGroup", {
            get: function () {
                return this._getOption('beginGroup');
            },
            set: function (value) {
                this._setOption('beginGroup', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "closeMenuOnClick", {
            get: function () {
                return this._getOption('closeMenuOnClick');
            },
            set: function (value) {
                this._setOption('closeMenuOnClick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "items", {
            get: function () {
                return this._getOption('items');
            },
            set: function (value) {
                this._setOption('items', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "selectable", {
            get: function () {
                return this._getOption('selectable');
            },
            set: function (value) {
                this._setOption('selectable', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "selected", {
            get: function () {
                return this._getOption('selected');
            },
            set: function (value) {
                this._setOption('selected', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "colSpan", {
            get: function () {
                return this._getOption('colSpan');
            },
            set: function (value) {
                this._setOption('colSpan', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "cssClass", {
            get: function () {
                return this._getOption('cssClass');
            },
            set: function (value) {
                this._setOption('cssClass', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "dataField", {
            get: function () {
                return this._getOption('dataField');
            },
            set: function (value) {
                this._setOption('dataField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "editorOptions", {
            get: function () {
                return this._getOption('editorOptions');
            },
            set: function (value) {
                this._setOption('editorOptions', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "editorType", {
            get: function () {
                return this._getOption('editorType');
            },
            set: function (value) {
                this._setOption('editorType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "helpText", {
            get: function () {
                return this._getOption('helpText');
            },
            set: function (value) {
                this._setOption('helpText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "isRequired", {
            get: function () {
                return this._getOption('isRequired');
            },
            set: function (value) {
                this._setOption('isRequired', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "itemType", {
            get: function () {
                return this._getOption('itemType');
            },
            set: function (value) {
                this._setOption('itemType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "validationRules", {
            get: function () {
                return this._getOption('validationRules');
            },
            set: function (value) {
                this._setOption('validationRules', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "visibleIndex", {
            get: function () {
                return this._getOption('visibleIndex');
            },
            set: function (value) {
                this._setOption('visibleIndex', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "alignItemLabels", {
            get: function () {
                return this._getOption('alignItemLabels');
            },
            set: function (value) {
                this._setOption('alignItemLabels', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "caption", {
            get: function () {
                return this._getOption('caption');
            },
            set: function (value) {
                this._setOption('caption', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "colCount", {
            get: function () {
                return this._getOption('colCount');
            },
            set: function (value) {
                this._setOption('colCount', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "colCountByScreen", {
            get: function () {
                return this._getOption('colCountByScreen');
            },
            set: function (value) {
                this._setOption('colCountByScreen', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "tabPanelOptions", {
            get: function () {
                return this._getOption('tabPanelOptions');
            },
            set: function (value) {
                this._setOption('tabPanelOptions', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "tabs", {
            get: function () {
                return this._getOption('tabs');
            },
            set: function (value) {
                this._setOption('tabs', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "badge", {
            get: function () {
                return this._getOption('badge');
            },
            set: function (value) {
                this._setOption('badge', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "tabTemplate", {
            get: function () {
                return this._getOption('tabTemplate');
            },
            set: function (value) {
                this._setOption('tabTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "alignment", {
            get: function () {
                return this._getOption('alignment');
            },
            set: function (value) {
                this._setOption('alignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "buttonOptions", {
            get: function () {
                return this._getOption('buttonOptions');
            },
            set: function (value) {
                this._setOption('buttonOptions', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "horizontalAlignment", {
            get: function () {
                return this._getOption('horizontalAlignment');
            },
            set: function (value) {
                this._setOption('horizontalAlignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "verticalAlignment", {
            get: function () {
                return this._getOption('verticalAlignment');
            },
            set: function (value) {
                this._setOption('verticalAlignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "imageAlt", {
            get: function () {
                return this._getOption('imageAlt');
            },
            set: function (value) {
                this._setOption('imageAlt', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "imageSrc", {
            get: function () {
                return this._getOption('imageSrc');
            },
            set: function (value) {
                this._setOption('imageSrc', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "formatName", {
            get: function () {
                return this._getOption('formatName');
            },
            set: function (value) {
                this._setOption('formatName', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "formatValues", {
            get: function () {
                return this._getOption('formatValues');
            },
            set: function (value) {
                this._setOption('formatValues', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "locateInMenu", {
            get: function () {
                return this._getOption('locateInMenu');
            },
            set: function (value) {
                this._setOption('locateInMenu', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "location", {
            get: function () {
                return this._getOption('location');
            },
            set: function (value) {
                this._setOption('location', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "menuItemTemplate", {
            get: function () {
                return this._getOption('menuItemTemplate');
            },
            set: function (value) {
                this._setOption('menuItemTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "options", {
            get: function () {
                return this._getOption('options');
            },
            set: function (value) {
                this._setOption('options', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "showText", {
            get: function () {
                return this._getOption('showText');
            },
            set: function (value) {
                this._setOption('showText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "widget", {
            get: function () {
                return this._getOption('widget');
            },
            set: function (value) {
                this._setOption('widget', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "key", {
            get: function () {
                return this._getOption('key');
            },
            set: function (value) {
                this._setOption('key', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "showChevron", {
            get: function () {
                return this._getOption('showChevron');
            },
            set: function (value) {
                this._setOption('showChevron', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "menuTemplate", {
            get: function () {
                return this._getOption('menuTemplate');
            },
            set: function (value) {
                this._setOption('menuTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "heightRatio", {
            get: function () {
                return this._getOption('heightRatio');
            },
            set: function (value) {
                this._setOption('heightRatio', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "widthRatio", {
            get: function () {
                return this._getOption('widthRatio');
            },
            set: function (value) {
                this._setOption('widthRatio', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "expanded", {
            get: function () {
                return this._getOption('expanded');
            },
            set: function (value) {
                this._setOption('expanded', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "hasItems", {
            get: function () {
                return this._getOption('hasItems');
            },
            set: function (value) {
                this._setOption('hasItems', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiButtonGroupItem.prototype, "parentId", {
            get: function () {
                return this._getOption('parentId');
            },
            set: function (value) {
                this._setOption('parentId', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxiButtonGroupItem;
    }(core$1.CollectionNestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiValidationRuleComponent = /** @class */ (function (_super) {
        __extends(DxiValidationRuleComponent, _super);
        function DxiValidationRuleComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiValidationRuleComponent.prototype, "message", {
            get: function () {
                return this._getOption('message');
            },
            set: function (value) {
                this._setOption('message', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValidationRuleComponent.prototype, "trim", {
            get: function () {
                return this._getOption('trim');
            },
            set: function (value) {
                this._setOption('trim', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValidationRuleComponent.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValidationRuleComponent.prototype, "ignoreEmptyValue", {
            get: function () {
                return this._getOption('ignoreEmptyValue');
            },
            set: function (value) {
                this._setOption('ignoreEmptyValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValidationRuleComponent.prototype, "max", {
            get: function () {
                return this._getOption('max');
            },
            set: function (value) {
                this._setOption('max', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValidationRuleComponent.prototype, "min", {
            get: function () {
                return this._getOption('min');
            },
            set: function (value) {
                this._setOption('min', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValidationRuleComponent.prototype, "reevaluate", {
            get: function () {
                return this._getOption('reevaluate');
            },
            set: function (value) {
                this._setOption('reevaluate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValidationRuleComponent.prototype, "validationCallback", {
            get: function () {
                return this._getOption('validationCallback');
            },
            set: function (value) {
                this._setOption('validationCallback', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValidationRuleComponent.prototype, "comparisonTarget", {
            get: function () {
                return this._getOption('comparisonTarget');
            },
            set: function (value) {
                this._setOption('comparisonTarget', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValidationRuleComponent.prototype, "comparisonType", {
            get: function () {
                return this._getOption('comparisonType');
            },
            set: function (value) {
                this._setOption('comparisonType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValidationRuleComponent.prototype, "pattern", {
            get: function () {
                return this._getOption('pattern');
            },
            set: function (value) {
                this._setOption('pattern', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValidationRuleComponent.prototype, "_optionPath", {
            get: function () {
                return 'validationRules';
            },
            enumerable: true,
            configurable: true
        });
        DxiValidationRuleComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiValidationRuleComponent.prototype, "message", null);
        __decorate([
            core.Input()
        ], DxiValidationRuleComponent.prototype, "trim", null);
        __decorate([
            core.Input()
        ], DxiValidationRuleComponent.prototype, "type", null);
        __decorate([
            core.Input()
        ], DxiValidationRuleComponent.prototype, "ignoreEmptyValue", null);
        __decorate([
            core.Input()
        ], DxiValidationRuleComponent.prototype, "max", null);
        __decorate([
            core.Input()
        ], DxiValidationRuleComponent.prototype, "min", null);
        __decorate([
            core.Input()
        ], DxiValidationRuleComponent.prototype, "reevaluate", null);
        __decorate([
            core.Input()
        ], DxiValidationRuleComponent.prototype, "validationCallback", null);
        __decorate([
            core.Input()
        ], DxiValidationRuleComponent.prototype, "comparisonTarget", null);
        __decorate([
            core.Input()
        ], DxiValidationRuleComponent.prototype, "comparisonType", null);
        __decorate([
            core.Input()
        ], DxiValidationRuleComponent.prototype, "pattern", null);
        DxiValidationRuleComponent = __decorate([
            core.Component({
                selector: 'dxi-validation-rule',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiValidationRuleComponent);
        return DxiValidationRuleComponent;
    }(core$1.CollectionNestedOption));
    var DxiValidationRuleModule = /** @class */ (function () {
        function DxiValidationRuleModule() {
        }
        DxiValidationRuleModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiValidationRuleComponent
                ],
                exports: [
                    DxiValidationRuleComponent
                ],
            })
        ], DxiValidationRuleModule);
        return DxiValidationRuleModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiTabComponent = /** @class */ (function (_super) {
        __extends(DxiTabComponent, _super);
        function DxiTabComponent(parentOptionHost, optionHost, renderer, document, templateHost, element) {
            var _this = _super.call(this) || this;
            _this.renderer = renderer;
            _this.document = document;
            _this.element = element;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            templateHost.setHost(_this);
            return _this;
        }
        Object.defineProperty(DxiTabComponent.prototype, "alignItemLabels", {
            get: function () {
                return this._getOption('alignItemLabels');
            },
            set: function (value) {
                this._setOption('alignItemLabels', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTabComponent.prototype, "badge", {
            get: function () {
                return this._getOption('badge');
            },
            set: function (value) {
                this._setOption('badge', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTabComponent.prototype, "colCount", {
            get: function () {
                return this._getOption('colCount');
            },
            set: function (value) {
                this._setOption('colCount', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTabComponent.prototype, "colCountByScreen", {
            get: function () {
                return this._getOption('colCountByScreen');
            },
            set: function (value) {
                this._setOption('colCountByScreen', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTabComponent.prototype, "disabled", {
            get: function () {
                return this._getOption('disabled');
            },
            set: function (value) {
                this._setOption('disabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTabComponent.prototype, "icon", {
            get: function () {
                return this._getOption('icon');
            },
            set: function (value) {
                this._setOption('icon', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTabComponent.prototype, "items", {
            get: function () {
                return this._getOption('items');
            },
            set: function (value) {
                this._setOption('items', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTabComponent.prototype, "tabTemplate", {
            get: function () {
                return this._getOption('tabTemplate');
            },
            set: function (value) {
                this._setOption('tabTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTabComponent.prototype, "template", {
            get: function () {
                return this._getOption('template');
            },
            set: function (value) {
                this._setOption('template', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTabComponent.prototype, "title", {
            get: function () {
                return this._getOption('title');
            },
            set: function (value) {
                this._setOption('title', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTabComponent.prototype, "_optionPath", {
            get: function () {
                return 'tabs';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTabComponent.prototype, "itemsChildren", {
            get: function () {
                return this._getOption('items');
            },
            set: function (value) {
                this.setChildren('items', value);
            },
            enumerable: true,
            configurable: true
        });
        DxiTabComponent.prototype.setTemplate = function (template) {
            this.template = template;
        };
        DxiTabComponent.prototype.ngAfterViewInit = function () {
            core$1.extractTemplate(this, this.element, this.renderer, this.document);
        };
        DxiTabComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] },
            { type: core.Renderer2 },
            { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] },
            { type: core$1.DxTemplateHost, decorators: [{ type: core.Host }] },
            { type: core.ElementRef }
        ]; };
        __decorate([
            core.Input()
        ], DxiTabComponent.prototype, "alignItemLabels", null);
        __decorate([
            core.Input()
        ], DxiTabComponent.prototype, "badge", null);
        __decorate([
            core.Input()
        ], DxiTabComponent.prototype, "colCount", null);
        __decorate([
            core.Input()
        ], DxiTabComponent.prototype, "colCountByScreen", null);
        __decorate([
            core.Input()
        ], DxiTabComponent.prototype, "disabled", null);
        __decorate([
            core.Input()
        ], DxiTabComponent.prototype, "icon", null);
        __decorate([
            core.Input()
        ], DxiTabComponent.prototype, "items", null);
        __decorate([
            core.Input()
        ], DxiTabComponent.prototype, "tabTemplate", null);
        __decorate([
            core.Input()
        ], DxiTabComponent.prototype, "template", null);
        __decorate([
            core.Input()
        ], DxiTabComponent.prototype, "title", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiItemComponent; }))
        ], DxiTabComponent.prototype, "itemsChildren", null);
        DxiTabComponent = __decorate([
            core.Component({
                selector: 'dxi-tab',
                template: '<ng-content></ng-content>',
                providers: [core$1.NestedOptionHost, core$1.DxTemplateHost],
                styles: [':host { display: block; }']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host()),
            __param(3, core.Inject(common.DOCUMENT)),
            __param(4, core.Host())
        ], DxiTabComponent);
        return DxiTabComponent;
    }(core$1.CollectionNestedOption));
    var DxiTabModule = /** @class */ (function () {
        function DxiTabModule() {
        }
        DxiTabModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiTabComponent
                ],
                exports: [
                    DxiTabComponent
                ],
            })
        ], DxiTabModule);
        return DxiTabModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiLocationComponent = /** @class */ (function (_super) {
        __extends(DxiLocationComponent, _super);
        function DxiLocationComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiLocationComponent.prototype, "lat", {
            get: function () {
                return this._getOption('lat');
            },
            set: function (value) {
                this._setOption('lat', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLocationComponent.prototype, "lng", {
            get: function () {
                return this._getOption('lng');
            },
            set: function (value) {
                this._setOption('lng', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLocationComponent.prototype, "col", {
            get: function () {
                return this._getOption('col');
            },
            set: function (value) {
                this._setOption('col', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLocationComponent.prototype, "colspan", {
            get: function () {
                return this._getOption('colspan');
            },
            set: function (value) {
                this._setOption('colspan', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLocationComponent.prototype, "row", {
            get: function () {
                return this._getOption('row');
            },
            set: function (value) {
                this._setOption('row', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLocationComponent.prototype, "rowspan", {
            get: function () {
                return this._getOption('rowspan');
            },
            set: function (value) {
                this._setOption('rowspan', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLocationComponent.prototype, "screen", {
            get: function () {
                return this._getOption('screen');
            },
            set: function (value) {
                this._setOption('screen', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLocationComponent.prototype, "_optionPath", {
            get: function () {
                return 'location';
            },
            enumerable: true,
            configurable: true
        });
        DxiLocationComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiLocationComponent.prototype, "lat", null);
        __decorate([
            core.Input()
        ], DxiLocationComponent.prototype, "lng", null);
        __decorate([
            core.Input()
        ], DxiLocationComponent.prototype, "col", null);
        __decorate([
            core.Input()
        ], DxiLocationComponent.prototype, "colspan", null);
        __decorate([
            core.Input()
        ], DxiLocationComponent.prototype, "row", null);
        __decorate([
            core.Input()
        ], DxiLocationComponent.prototype, "rowspan", null);
        __decorate([
            core.Input()
        ], DxiLocationComponent.prototype, "screen", null);
        DxiLocationComponent = __decorate([
            core.Component({
                selector: 'dxi-location',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiLocationComponent);
        return DxiLocationComponent;
    }(core$1.CollectionNestedOption));
    var DxiLocationModule = /** @class */ (function () {
        function DxiLocationModule() {
        }
        DxiLocationModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiLocationComponent
                ],
                exports: [
                    DxiLocationComponent
                ],
            })
        ], DxiLocationModule);
        return DxiLocationModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiItemComponent = /** @class */ (function (_super) {
        __extends(DxiItemComponent, _super);
        function DxiItemComponent(parentOptionHost, optionHost, renderer, document, templateHost, element) {
            var _this = _super.call(this) || this;
            _this.renderer = renderer;
            _this.document = document;
            _this.element = element;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            templateHost.setHost(_this);
            return _this;
        }
        DxiItemComponent_1 = DxiItemComponent;
        Object.defineProperty(DxiItemComponent.prototype, "_optionPath", {
            get: function () {
                return 'items';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiItemComponent.prototype, "itemsChildren", {
            get: function () {
                return this._getOption('items');
            },
            set: function (value) {
                this.setChildren('items', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiItemComponent.prototype, "validationRulesChildren", {
            get: function () {
                return this._getOption('validationRules');
            },
            set: function (value) {
                this.setChildren('validationRules', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiItemComponent.prototype, "tabsChildren", {
            get: function () {
                return this._getOption('tabs');
            },
            set: function (value) {
                this.setChildren('tabs', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiItemComponent.prototype, "locationChildren", {
            get: function () {
                return this._getOption('location');
            },
            set: function (value) {
                this.setChildren('location', value);
            },
            enumerable: true,
            configurable: true
        });
        DxiItemComponent.prototype.setTemplate = function (template) {
            this.template = template;
        };
        DxiItemComponent.prototype.ngAfterViewInit = function () {
            core$1.extractTemplate(this, this.element, this.renderer, this.document);
        };
        DxiItemComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] },
            { type: core.Renderer2 },
            { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] },
            { type: core$1.DxTemplateHost, decorators: [{ type: core.Host }] },
            { type: core.ElementRef }
        ]; };
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiItemComponent_1; }))
        ], DxiItemComponent.prototype, "itemsChildren", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiValidationRuleComponent; }))
        ], DxiItemComponent.prototype, "validationRulesChildren", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiTabComponent; }))
        ], DxiItemComponent.prototype, "tabsChildren", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiLocationComponent; }))
        ], DxiItemComponent.prototype, "locationChildren", null);
        DxiItemComponent = DxiItemComponent_1 = __decorate([
            core.Component({
                selector: 'dxi-item',
                template: '<ng-content></ng-content>',
                providers: [core$1.NestedOptionHost, core$1.DxTemplateHost],
                inputs: [
                    'disabled',
                    'html',
                    'icon',
                    'template',
                    'text',
                    'title',
                    'visible',
                    'onClick',
                    'type',
                    'baseSize',
                    'box',
                    'ratio',
                    'shrink',
                    'hint',
                    'beginGroup',
                    'closeMenuOnClick',
                    'items',
                    'selectable',
                    'selected',
                    'colSpan',
                    'cssClass',
                    'dataField',
                    'editorOptions',
                    'editorType',
                    'helpText',
                    'isRequired',
                    'itemType',
                    'label',
                    'name',
                    'validationRules',
                    'visibleIndex',
                    'alignItemLabels',
                    'caption',
                    'colCount',
                    'colCountByScreen',
                    'tabPanelOptions',
                    'tabs',
                    'badge',
                    'tabTemplate',
                    'alignment',
                    'buttonOptions',
                    'horizontalAlignment',
                    'verticalAlignment',
                    'imageAlt',
                    'imageSrc',
                    'formatName',
                    'formatValues',
                    'locateInMenu',
                    'location',
                    'menuItemTemplate',
                    'options',
                    'showText',
                    'widget',
                    'key',
                    'showChevron',
                    'menuTemplate',
                    'heightRatio',
                    'widthRatio',
                    'expanded',
                    'hasItems',
                    'parentId'
                ],
                styles: [':host { display: block; }']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host()),
            __param(3, core.Inject(common.DOCUMENT)),
            __param(4, core.Host())
        ], DxiItemComponent);
        return DxiItemComponent;
        var DxiItemComponent_1;
    }(DxiButtonGroupItem));
    var DxiItemModule = /** @class */ (function () {
        function DxiItemModule() {
        }
        DxiItemModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiItemComponent
                ],
                exports: [
                    DxiItemComponent
                ],
            })
        ], DxiItemModule);
        return DxiItemModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoBoxComponent = /** @class */ (function (_super) {
        __extends(DxoBoxComponent, _super);
        function DxoBoxComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            _this._createEventEmitters([
                { emit: 'itemsChange' }
            ]);
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoBoxComponent.prototype, "_optionPath", {
            get: function () {
                return 'box';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBoxComponent.prototype, "itemsChildren", {
            get: function () {
                return this._getOption('items');
            },
            set: function (value) {
                this.setChildren('items', value);
            },
            enumerable: true,
            configurable: true
        });
        DxoBoxComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Output()
        ], DxoBoxComponent.prototype, "itemsChange", void 0);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiItemComponent; }))
        ], DxoBoxComponent.prototype, "itemsChildren", null);
        DxoBoxComponent = __decorate([
            core.Component({
                selector: 'dxo-box',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'align',
                    'crossAlign',
                    'dataSource',
                    'direction',
                    'disabled',
                    'elementAttr',
                    'height',
                    'hoverStateEnabled',
                    'itemHoldTimeout',
                    'items',
                    'itemTemplate',
                    'onContentReady',
                    'onDisposing',
                    'onInitialized',
                    'onItemClick',
                    'onItemContextMenu',
                    'onItemHold',
                    'onItemRendered',
                    'onOptionChanged',
                    'rtlEnabled',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoBoxComponent);
        return DxoBoxComponent;
    }(DxoBoxOptions));
    var DxoBoxModule = /** @class */ (function () {
        function DxoBoxModule() {
        }
        DxoBoxModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoBoxComponent
                ],
                exports: [
                    DxoBoxComponent
                ],
            })
        ], DxoBoxModule);
        return DxoBoxModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoBreakStyleComponent = /** @class */ (function (_super) {
        __extends(DxoBreakStyleComponent, _super);
        function DxoBreakStyleComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoBreakStyleComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBreakStyleComponent.prototype, "line", {
            get: function () {
                return this._getOption('line');
            },
            set: function (value) {
                this._setOption('line', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBreakStyleComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoBreakStyleComponent.prototype, "_optionPath", {
            get: function () {
                return 'breakStyle';
            },
            enumerable: true,
            configurable: true
        });
        DxoBreakStyleComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoBreakStyleComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoBreakStyleComponent.prototype, "line", null);
        __decorate([
            core.Input()
        ], DxoBreakStyleComponent.prototype, "width", null);
        DxoBreakStyleComponent = __decorate([
            core.Component({
                selector: 'dxo-break-style',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoBreakStyleComponent);
        return DxoBreakStyleComponent;
    }(core$1.NestedOption));
    var DxoBreakStyleModule = /** @class */ (function () {
        function DxoBreakStyleModule() {
        }
        DxoBreakStyleModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoBreakStyleComponent
                ],
                exports: [
                    DxoBreakStyleComponent
                ],
            })
        ], DxoBreakStyleModule);
        return DxoBreakStyleModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoBubbleComponent = /** @class */ (function (_super) {
        __extends(DxoBubbleComponent, _super);
        function DxoBubbleComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoBubbleComponent.prototype, "_optionPath", {
            get: function () {
                return 'bubble';
            },
            enumerable: true,
            configurable: true
        });
        DxoBubbleComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoBubbleComponent = __decorate([
            core.Component({
                selector: 'dxo-bubble',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoBubbleComponent);
        return DxoBubbleComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoBubbleModule = /** @class */ (function () {
        function DxoBubbleModule() {
        }
        DxoBubbleModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoBubbleComponent
                ],
                exports: [
                    DxoBubbleComponent
                ],
            })
        ], DxoBubbleModule);
        return DxoBubbleModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiTextEditorButton = /** @class */ (function (_super) {
        __extends(DxiTextEditorButton, _super);
        function DxiTextEditorButton() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxiTextEditorButton.prototype, "location", {
            get: function () {
                return this._getOption('location');
            },
            set: function (value) {
                this._setOption('location', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTextEditorButton.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTextEditorButton.prototype, "options", {
            get: function () {
                return this._getOption('options');
            },
            set: function (value) {
                this._setOption('options', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTextEditorButton.prototype, "cssClass", {
            get: function () {
                return this._getOption('cssClass');
            },
            set: function (value) {
                this._setOption('cssClass', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTextEditorButton.prototype, "hint", {
            get: function () {
                return this._getOption('hint');
            },
            set: function (value) {
                this._setOption('hint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTextEditorButton.prototype, "icon", {
            get: function () {
                return this._getOption('icon');
            },
            set: function (value) {
                this._setOption('icon', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTextEditorButton.prototype, "onClick", {
            get: function () {
                return this._getOption('onClick');
            },
            set: function (value) {
                this._setOption('onClick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTextEditorButton.prototype, "template", {
            get: function () {
                return this._getOption('template');
            },
            set: function (value) {
                this._setOption('template', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTextEditorButton.prototype, "text", {
            get: function () {
                return this._getOption('text');
            },
            set: function (value) {
                this._setOption('text', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTextEditorButton.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxiTextEditorButton;
    }(core$1.CollectionNestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiButtonComponent = /** @class */ (function (_super) {
        __extends(DxiButtonComponent, _super);
        function DxiButtonComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiButtonComponent.prototype, "_optionPath", {
            get: function () {
                return 'buttons';
            },
            enumerable: true,
            configurable: true
        });
        DxiButtonComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxiButtonComponent = __decorate([
            core.Component({
                selector: 'dxi-button',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'location',
                    'name',
                    'options',
                    'cssClass',
                    'hint',
                    'icon',
                    'onClick',
                    'template',
                    'text',
                    'visible'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiButtonComponent);
        return DxiButtonComponent;
    }(DxiTextEditorButton));
    var DxiButtonModule = /** @class */ (function () {
        function DxiButtonModule() {
        }
        DxiButtonModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiButtonComponent
                ],
                exports: [
                    DxiButtonComponent
                ],
            })
        ], DxiButtonModule);
        return DxiButtonModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoButtonOptions = /** @class */ (function (_super) {
        __extends(DxoButtonOptions, _super);
        function DxoButtonOptions() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoButtonOptions.prototype, "accessKey", {
            get: function () {
                return this._getOption('accessKey');
            },
            set: function (value) {
                this._setOption('accessKey', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "activeStateEnabled", {
            get: function () {
                return this._getOption('activeStateEnabled');
            },
            set: function (value) {
                this._setOption('activeStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "disabled", {
            get: function () {
                return this._getOption('disabled');
            },
            set: function (value) {
                this._setOption('disabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "elementAttr", {
            get: function () {
                return this._getOption('elementAttr');
            },
            set: function (value) {
                this._setOption('elementAttr', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "focusStateEnabled", {
            get: function () {
                return this._getOption('focusStateEnabled');
            },
            set: function (value) {
                this._setOption('focusStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "height", {
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "hint", {
            get: function () {
                return this._getOption('hint');
            },
            set: function (value) {
                this._setOption('hint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "hoverStateEnabled", {
            get: function () {
                return this._getOption('hoverStateEnabled');
            },
            set: function (value) {
                this._setOption('hoverStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "icon", {
            get: function () {
                return this._getOption('icon');
            },
            set: function (value) {
                this._setOption('icon', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "onClick", {
            get: function () {
                return this._getOption('onClick');
            },
            set: function (value) {
                this._setOption('onClick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "onContentReady", {
            get: function () {
                return this._getOption('onContentReady');
            },
            set: function (value) {
                this._setOption('onContentReady', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "onDisposing", {
            get: function () {
                return this._getOption('onDisposing');
            },
            set: function (value) {
                this._setOption('onDisposing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "onInitialized", {
            get: function () {
                return this._getOption('onInitialized');
            },
            set: function (value) {
                this._setOption('onInitialized', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "onOptionChanged", {
            get: function () {
                return this._getOption('onOptionChanged');
            },
            set: function (value) {
                this._setOption('onOptionChanged', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "rtlEnabled", {
            get: function () {
                return this._getOption('rtlEnabled');
            },
            set: function (value) {
                this._setOption('rtlEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "stylingMode", {
            get: function () {
                return this._getOption('stylingMode');
            },
            set: function (value) {
                this._setOption('stylingMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "tabIndex", {
            get: function () {
                return this._getOption('tabIndex');
            },
            set: function (value) {
                this._setOption('tabIndex', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "template", {
            get: function () {
                return this._getOption('template');
            },
            set: function (value) {
                this._setOption('template', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "text", {
            get: function () {
                return this._getOption('text');
            },
            set: function (value) {
                this._setOption('text', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "useSubmitBehavior", {
            get: function () {
                return this._getOption('useSubmitBehavior');
            },
            set: function (value) {
                this._setOption('useSubmitBehavior', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "validationGroup", {
            get: function () {
                return this._getOption('validationGroup');
            },
            set: function (value) {
                this._setOption('validationGroup', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoButtonOptions.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoButtonOptions;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoButtonOptionsComponent = /** @class */ (function (_super) {
        __extends(DxoButtonOptionsComponent, _super);
        function DxoButtonOptionsComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoButtonOptionsComponent.prototype, "_optionPath", {
            get: function () {
                return 'buttonOptions';
            },
            enumerable: true,
            configurable: true
        });
        DxoButtonOptionsComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoButtonOptionsComponent = __decorate([
            core.Component({
                selector: 'dxo-button-options',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'accessKey',
                    'activeStateEnabled',
                    'disabled',
                    'elementAttr',
                    'focusStateEnabled',
                    'height',
                    'hint',
                    'hoverStateEnabled',
                    'icon',
                    'onClick',
                    'onContentReady',
                    'onDisposing',
                    'onInitialized',
                    'onOptionChanged',
                    'rtlEnabled',
                    'stylingMode',
                    'tabIndex',
                    'template',
                    'text',
                    'type',
                    'useSubmitBehavior',
                    'validationGroup',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoButtonOptionsComponent);
        return DxoButtonOptionsComponent;
    }(DxoButtonOptions));
    var DxoButtonOptionsModule = /** @class */ (function () {
        function DxoButtonOptionsModule() {
        }
        DxoButtonOptionsModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoButtonOptionsComponent
                ],
                exports: [
                    DxoButtonOptionsComponent
                ],
            })
        ], DxoButtonOptionsModule);
        return DxoButtonOptionsModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoCalendarOptions = /** @class */ (function (_super) {
        __extends(DxoCalendarOptions, _super);
        function DxoCalendarOptions() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoCalendarOptions.prototype, "accessKey", {
            get: function () {
                return this._getOption('accessKey');
            },
            set: function (value) {
                this._setOption('accessKey', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "activeStateEnabled", {
            get: function () {
                return this._getOption('activeStateEnabled');
            },
            set: function (value) {
                this._setOption('activeStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "cellTemplate", {
            get: function () {
                return this._getOption('cellTemplate');
            },
            set: function (value) {
                this._setOption('cellTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "dateSerializationFormat", {
            get: function () {
                return this._getOption('dateSerializationFormat');
            },
            set: function (value) {
                this._setOption('dateSerializationFormat', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "disabled", {
            get: function () {
                return this._getOption('disabled');
            },
            set: function (value) {
                this._setOption('disabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "disabledDates", {
            get: function () {
                return this._getOption('disabledDates');
            },
            set: function (value) {
                this._setOption('disabledDates', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "elementAttr", {
            get: function () {
                return this._getOption('elementAttr');
            },
            set: function (value) {
                this._setOption('elementAttr', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "firstDayOfWeek", {
            get: function () {
                return this._getOption('firstDayOfWeek');
            },
            set: function (value) {
                this._setOption('firstDayOfWeek', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "focusStateEnabled", {
            get: function () {
                return this._getOption('focusStateEnabled');
            },
            set: function (value) {
                this._setOption('focusStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "height", {
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "hint", {
            get: function () {
                return this._getOption('hint');
            },
            set: function (value) {
                this._setOption('hint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "hoverStateEnabled", {
            get: function () {
                return this._getOption('hoverStateEnabled');
            },
            set: function (value) {
                this._setOption('hoverStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "isValid", {
            get: function () {
                return this._getOption('isValid');
            },
            set: function (value) {
                this._setOption('isValid', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "max", {
            get: function () {
                return this._getOption('max');
            },
            set: function (value) {
                this._setOption('max', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "maxZoomLevel", {
            get: function () {
                return this._getOption('maxZoomLevel');
            },
            set: function (value) {
                this._setOption('maxZoomLevel', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "min", {
            get: function () {
                return this._getOption('min');
            },
            set: function (value) {
                this._setOption('min', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "minZoomLevel", {
            get: function () {
                return this._getOption('minZoomLevel');
            },
            set: function (value) {
                this._setOption('minZoomLevel', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "onDisposing", {
            get: function () {
                return this._getOption('onDisposing');
            },
            set: function (value) {
                this._setOption('onDisposing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "onInitialized", {
            get: function () {
                return this._getOption('onInitialized');
            },
            set: function (value) {
                this._setOption('onInitialized', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "onOptionChanged", {
            get: function () {
                return this._getOption('onOptionChanged');
            },
            set: function (value) {
                this._setOption('onOptionChanged', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "onValueChanged", {
            get: function () {
                return this._getOption('onValueChanged');
            },
            set: function (value) {
                this._setOption('onValueChanged', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "readOnly", {
            get: function () {
                return this._getOption('readOnly');
            },
            set: function (value) {
                this._setOption('readOnly', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "rtlEnabled", {
            get: function () {
                return this._getOption('rtlEnabled');
            },
            set: function (value) {
                this._setOption('rtlEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "showTodayButton", {
            get: function () {
                return this._getOption('showTodayButton');
            },
            set: function (value) {
                this._setOption('showTodayButton', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "tabIndex", {
            get: function () {
                return this._getOption('tabIndex');
            },
            set: function (value) {
                this._setOption('tabIndex', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "validationError", {
            get: function () {
                return this._getOption('validationError');
            },
            set: function (value) {
                this._setOption('validationError', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "validationMessageMode", {
            get: function () {
                return this._getOption('validationMessageMode');
            },
            set: function (value) {
                this._setOption('validationMessageMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "value", {
            get: function () {
                return this._getOption('value');
            },
            set: function (value) {
                this._setOption('value', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCalendarOptions.prototype, "zoomLevel", {
            get: function () {
                return this._getOption('zoomLevel');
            },
            set: function (value) {
                this._setOption('zoomLevel', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoCalendarOptions;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoCalendarOptionsComponent = /** @class */ (function (_super) {
        __extends(DxoCalendarOptionsComponent, _super);
        function DxoCalendarOptionsComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            _this._createEventEmitters([
                { emit: 'valueChange' },
                { emit: 'zoomLevelChange' }
            ]);
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoCalendarOptionsComponent.prototype, "_optionPath", {
            get: function () {
                return 'calendarOptions';
            },
            enumerable: true,
            configurable: true
        });
        DxoCalendarOptionsComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Output()
        ], DxoCalendarOptionsComponent.prototype, "valueChange", void 0);
        __decorate([
            core.Output()
        ], DxoCalendarOptionsComponent.prototype, "zoomLevelChange", void 0);
        DxoCalendarOptionsComponent = __decorate([
            core.Component({
                selector: 'dxo-calendar-options',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'accessKey',
                    'activeStateEnabled',
                    'cellTemplate',
                    'dateSerializationFormat',
                    'disabled',
                    'disabledDates',
                    'elementAttr',
                    'firstDayOfWeek',
                    'focusStateEnabled',
                    'height',
                    'hint',
                    'hoverStateEnabled',
                    'isValid',
                    'max',
                    'maxZoomLevel',
                    'min',
                    'minZoomLevel',
                    'name',
                    'onDisposing',
                    'onInitialized',
                    'onOptionChanged',
                    'onValueChanged',
                    'readOnly',
                    'rtlEnabled',
                    'showTodayButton',
                    'tabIndex',
                    'validationError',
                    'validationMessageMode',
                    'value',
                    'visible',
                    'width',
                    'zoomLevel'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoCalendarOptionsComponent);
        return DxoCalendarOptionsComponent;
    }(DxoCalendarOptions));
    var DxoCalendarOptionsModule = /** @class */ (function () {
        function DxoCalendarOptionsModule() {
        }
        DxoCalendarOptionsModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoCalendarOptionsComponent
                ],
                exports: [
                    DxoCalendarOptionsComponent
                ],
            })
        ], DxoCalendarOptionsModule);
        return DxoCalendarOptionsModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoCandlestickComponent = /** @class */ (function (_super) {
        __extends(DxoCandlestickComponent, _super);
        function DxoCandlestickComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoCandlestickComponent.prototype, "_optionPath", {
            get: function () {
                return 'candlestick';
            },
            enumerable: true,
            configurable: true
        });
        DxoCandlestickComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoCandlestickComponent = __decorate([
            core.Component({
                selector: 'dxo-candlestick',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoCandlestickComponent);
        return DxoCandlestickComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoCandlestickModule = /** @class */ (function () {
        function DxoCandlestickModule() {
        }
        DxoCandlestickModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoCandlestickComponent
                ],
                exports: [
                    DxoCandlestickComponent
                ],
            })
        ], DxoCandlestickModule);
        return DxoCandlestickModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiCenterComponent = /** @class */ (function (_super) {
        __extends(DxiCenterComponent, _super);
        function DxiCenterComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiCenterComponent.prototype, "lat", {
            get: function () {
                return this._getOption('lat');
            },
            set: function (value) {
                this._setOption('lat', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiCenterComponent.prototype, "lng", {
            get: function () {
                return this._getOption('lng');
            },
            set: function (value) {
                this._setOption('lng', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiCenterComponent.prototype, "_optionPath", {
            get: function () {
                return 'center';
            },
            enumerable: true,
            configurable: true
        });
        DxiCenterComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiCenterComponent.prototype, "lat", null);
        __decorate([
            core.Input()
        ], DxiCenterComponent.prototype, "lng", null);
        DxiCenterComponent = __decorate([
            core.Component({
                selector: 'dxi-center',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiCenterComponent);
        return DxiCenterComponent;
    }(core$1.CollectionNestedOption));
    var DxiCenterModule = /** @class */ (function () {
        function DxiCenterModule() {
        }
        DxiCenterModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiCenterComponent
                ],
                exports: [
                    DxiCenterComponent
                ],
            })
        ], DxiCenterModule);
        return DxiCenterModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiChartSeries = /** @class */ (function (_super) {
        __extends(DxiChartSeries, _super);
        function DxiChartSeries() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxiChartSeries.prototype, "aggregation", {
            get: function () {
                return this._getOption('aggregation');
            },
            set: function (value) {
                this._setOption('aggregation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "argumentField", {
            get: function () {
                return this._getOption('argumentField');
            },
            set: function (value) {
                this._setOption('argumentField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "axis", {
            get: function () {
                return this._getOption('axis');
            },
            set: function (value) {
                this._setOption('axis', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "barOverlapGroup", {
            get: function () {
                return this._getOption('barOverlapGroup');
            },
            set: function (value) {
                this._setOption('barOverlapGroup', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "barPadding", {
            get: function () {
                return this._getOption('barPadding');
            },
            set: function (value) {
                this._setOption('barPadding', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "barWidth", {
            get: function () {
                return this._getOption('barWidth');
            },
            set: function (value) {
                this._setOption('barWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "border", {
            get: function () {
                return this._getOption('border');
            },
            set: function (value) {
                this._setOption('border', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "closeValueField", {
            get: function () {
                return this._getOption('closeValueField');
            },
            set: function (value) {
                this._setOption('closeValueField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "cornerRadius", {
            get: function () {
                return this._getOption('cornerRadius');
            },
            set: function (value) {
                this._setOption('cornerRadius', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "dashStyle", {
            get: function () {
                return this._getOption('dashStyle');
            },
            set: function (value) {
                this._setOption('dashStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "highValueField", {
            get: function () {
                return this._getOption('highValueField');
            },
            set: function (value) {
                this._setOption('highValueField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "hoverMode", {
            get: function () {
                return this._getOption('hoverMode');
            },
            set: function (value) {
                this._setOption('hoverMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "hoverStyle", {
            get: function () {
                return this._getOption('hoverStyle');
            },
            set: function (value) {
                this._setOption('hoverStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "ignoreEmptyPoints", {
            get: function () {
                return this._getOption('ignoreEmptyPoints');
            },
            set: function (value) {
                this._setOption('ignoreEmptyPoints', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "innerColor", {
            get: function () {
                return this._getOption('innerColor');
            },
            set: function (value) {
                this._setOption('innerColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "lowValueField", {
            get: function () {
                return this._getOption('lowValueField');
            },
            set: function (value) {
                this._setOption('lowValueField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "maxLabelCount", {
            get: function () {
                return this._getOption('maxLabelCount');
            },
            set: function (value) {
                this._setOption('maxLabelCount', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "minBarSize", {
            get: function () {
                return this._getOption('minBarSize');
            },
            set: function (value) {
                this._setOption('minBarSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "openValueField", {
            get: function () {
                return this._getOption('openValueField');
            },
            set: function (value) {
                this._setOption('openValueField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "pane", {
            get: function () {
                return this._getOption('pane');
            },
            set: function (value) {
                this._setOption('pane', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "point", {
            get: function () {
                return this._getOption('point');
            },
            set: function (value) {
                this._setOption('point', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "rangeValue1Field", {
            get: function () {
                return this._getOption('rangeValue1Field');
            },
            set: function (value) {
                this._setOption('rangeValue1Field', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "rangeValue2Field", {
            get: function () {
                return this._getOption('rangeValue2Field');
            },
            set: function (value) {
                this._setOption('rangeValue2Field', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "reduction", {
            get: function () {
                return this._getOption('reduction');
            },
            set: function (value) {
                this._setOption('reduction', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "selectionMode", {
            get: function () {
                return this._getOption('selectionMode');
            },
            set: function (value) {
                this._setOption('selectionMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "selectionStyle", {
            get: function () {
                return this._getOption('selectionStyle');
            },
            set: function (value) {
                this._setOption('selectionStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "showInLegend", {
            get: function () {
                return this._getOption('showInLegend');
            },
            set: function (value) {
                this._setOption('showInLegend', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "sizeField", {
            get: function () {
                return this._getOption('sizeField');
            },
            set: function (value) {
                this._setOption('sizeField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "stack", {
            get: function () {
                return this._getOption('stack');
            },
            set: function (value) {
                this._setOption('stack', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "tag", {
            get: function () {
                return this._getOption('tag');
            },
            set: function (value) {
                this._setOption('tag', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "tagField", {
            get: function () {
                return this._getOption('tagField');
            },
            set: function (value) {
                this._setOption('tagField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "valueErrorBar", {
            get: function () {
                return this._getOption('valueErrorBar');
            },
            set: function (value) {
                this._setOption('valueErrorBar', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "valueField", {
            get: function () {
                return this._getOption('valueField');
            },
            set: function (value) {
                this._setOption('valueField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "argumentType", {
            get: function () {
                return this._getOption('argumentType');
            },
            set: function (value) {
                this._setOption('argumentType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "minSegmentSize", {
            get: function () {
                return this._getOption('minSegmentSize');
            },
            set: function (value) {
                this._setOption('minSegmentSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "smallValuesGrouping", {
            get: function () {
                return this._getOption('smallValuesGrouping');
            },
            set: function (value) {
                this._setOption('smallValuesGrouping', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiChartSeries.prototype, "closed", {
            get: function () {
                return this._getOption('closed');
            },
            set: function (value) {
                this._setOption('closed', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxiChartSeries;
    }(core$1.CollectionNestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiSeriesComponent = /** @class */ (function (_super) {
        __extends(DxiSeriesComponent, _super);
        function DxiSeriesComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiSeriesComponent.prototype, "_optionPath", {
            get: function () {
                return 'series';
            },
            enumerable: true,
            configurable: true
        });
        DxiSeriesComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxiSeriesComponent = __decorate([
            core.Component({
                selector: 'dxi-series',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'argumentField',
                    'axis',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'name',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'stack',
                    'tag',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width',
                    'argumentType',
                    'minSegmentSize',
                    'smallValuesGrouping',
                    'closed'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiSeriesComponent);
        return DxiSeriesComponent;
    }(DxiChartSeries));
    var DxiSeriesModule = /** @class */ (function () {
        function DxiSeriesModule() {
        }
        DxiSeriesModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiSeriesComponent
                ],
                exports: [
                    DxiSeriesComponent
                ],
            })
        ], DxiSeriesModule);
        return DxiSeriesModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoChartComponent = /** @class */ (function (_super) {
        __extends(DxoChartComponent, _super);
        function DxoChartComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoChartComponent.prototype, "barGroupPadding", {
            get: function () {
                return this._getOption('barGroupPadding');
            },
            set: function (value) {
                this._setOption('barGroupPadding', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartComponent.prototype, "barGroupWidth", {
            get: function () {
                return this._getOption('barGroupWidth');
            },
            set: function (value) {
                this._setOption('barGroupWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartComponent.prototype, "barWidth", {
            get: function () {
                return this._getOption('barWidth');
            },
            set: function (value) {
                this._setOption('barWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartComponent.prototype, "bottomIndent", {
            get: function () {
                return this._getOption('bottomIndent');
            },
            set: function (value) {
                this._setOption('bottomIndent', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartComponent.prototype, "commonSeriesSettings", {
            get: function () {
                return this._getOption('commonSeriesSettings');
            },
            set: function (value) {
                this._setOption('commonSeriesSettings', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartComponent.prototype, "dataPrepareSettings", {
            get: function () {
                return this._getOption('dataPrepareSettings');
            },
            set: function (value) {
                this._setOption('dataPrepareSettings', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartComponent.prototype, "equalBarWidth", {
            get: function () {
                return this._getOption('equalBarWidth');
            },
            set: function (value) {
                this._setOption('equalBarWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartComponent.prototype, "maxBubbleSize", {
            get: function () {
                return this._getOption('maxBubbleSize');
            },
            set: function (value) {
                this._setOption('maxBubbleSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartComponent.prototype, "minBubbleSize", {
            get: function () {
                return this._getOption('minBubbleSize');
            },
            set: function (value) {
                this._setOption('minBubbleSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartComponent.prototype, "negativesAsZeroes", {
            get: function () {
                return this._getOption('negativesAsZeroes');
            },
            set: function (value) {
                this._setOption('negativesAsZeroes', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartComponent.prototype, "palette", {
            get: function () {
                return this._getOption('palette');
            },
            set: function (value) {
                this._setOption('palette', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartComponent.prototype, "paletteExtensionMode", {
            get: function () {
                return this._getOption('paletteExtensionMode');
            },
            set: function (value) {
                this._setOption('paletteExtensionMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartComponent.prototype, "series", {
            get: function () {
                return this._getOption('series');
            },
            set: function (value) {
                this._setOption('series', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartComponent.prototype, "seriesTemplate", {
            get: function () {
                return this._getOption('seriesTemplate');
            },
            set: function (value) {
                this._setOption('seriesTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartComponent.prototype, "topIndent", {
            get: function () {
                return this._getOption('topIndent');
            },
            set: function (value) {
                this._setOption('topIndent', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartComponent.prototype, "useAggregation", {
            get: function () {
                return this._getOption('useAggregation');
            },
            set: function (value) {
                this._setOption('useAggregation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartComponent.prototype, "valueAxis", {
            get: function () {
                return this._getOption('valueAxis');
            },
            set: function (value) {
                this._setOption('valueAxis', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartComponent.prototype, "_optionPath", {
            get: function () {
                return 'chart';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartComponent.prototype, "seriesChildren", {
            get: function () {
                return this._getOption('series');
            },
            set: function (value) {
                this.setChildren('series', value);
            },
            enumerable: true,
            configurable: true
        });
        DxoChartComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoChartComponent.prototype, "barGroupPadding", null);
        __decorate([
            core.Input()
        ], DxoChartComponent.prototype, "barGroupWidth", null);
        __decorate([
            core.Input()
        ], DxoChartComponent.prototype, "barWidth", null);
        __decorate([
            core.Input()
        ], DxoChartComponent.prototype, "bottomIndent", null);
        __decorate([
            core.Input()
        ], DxoChartComponent.prototype, "commonSeriesSettings", null);
        __decorate([
            core.Input()
        ], DxoChartComponent.prototype, "dataPrepareSettings", null);
        __decorate([
            core.Input()
        ], DxoChartComponent.prototype, "equalBarWidth", null);
        __decorate([
            core.Input()
        ], DxoChartComponent.prototype, "maxBubbleSize", null);
        __decorate([
            core.Input()
        ], DxoChartComponent.prototype, "minBubbleSize", null);
        __decorate([
            core.Input()
        ], DxoChartComponent.prototype, "negativesAsZeroes", null);
        __decorate([
            core.Input()
        ], DxoChartComponent.prototype, "palette", null);
        __decorate([
            core.Input()
        ], DxoChartComponent.prototype, "paletteExtensionMode", null);
        __decorate([
            core.Input()
        ], DxoChartComponent.prototype, "series", null);
        __decorate([
            core.Input()
        ], DxoChartComponent.prototype, "seriesTemplate", null);
        __decorate([
            core.Input()
        ], DxoChartComponent.prototype, "topIndent", null);
        __decorate([
            core.Input()
        ], DxoChartComponent.prototype, "useAggregation", null);
        __decorate([
            core.Input()
        ], DxoChartComponent.prototype, "valueAxis", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiSeriesComponent; }))
        ], DxoChartComponent.prototype, "seriesChildren", null);
        DxoChartComponent = __decorate([
            core.Component({
                selector: 'dxo-chart',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoChartComponent);
        return DxoChartComponent;
    }(core$1.NestedOption));
    var DxoChartModule = /** @class */ (function () {
        function DxoChartModule() {
        }
        DxoChartModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoChartComponent
                ],
                exports: [
                    DxoChartComponent
                ],
            })
        ], DxoChartModule);
        return DxoChartModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoColCountByScreenComponent = /** @class */ (function (_super) {
        __extends(DxoColCountByScreenComponent, _super);
        function DxoColCountByScreenComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoColCountByScreenComponent.prototype, "lg", {
            get: function () {
                return this._getOption('lg');
            },
            set: function (value) {
                this._setOption('lg', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColCountByScreenComponent.prototype, "md", {
            get: function () {
                return this._getOption('md');
            },
            set: function (value) {
                this._setOption('md', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColCountByScreenComponent.prototype, "sm", {
            get: function () {
                return this._getOption('sm');
            },
            set: function (value) {
                this._setOption('sm', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColCountByScreenComponent.prototype, "xs", {
            get: function () {
                return this._getOption('xs');
            },
            set: function (value) {
                this._setOption('xs', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColCountByScreenComponent.prototype, "_optionPath", {
            get: function () {
                return 'colCountByScreen';
            },
            enumerable: true,
            configurable: true
        });
        DxoColCountByScreenComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoColCountByScreenComponent.prototype, "lg", null);
        __decorate([
            core.Input()
        ], DxoColCountByScreenComponent.prototype, "md", null);
        __decorate([
            core.Input()
        ], DxoColCountByScreenComponent.prototype, "sm", null);
        __decorate([
            core.Input()
        ], DxoColCountByScreenComponent.prototype, "xs", null);
        DxoColCountByScreenComponent = __decorate([
            core.Component({
                selector: 'dxo-col-count-by-screen',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoColCountByScreenComponent);
        return DxoColCountByScreenComponent;
    }(core$1.NestedOption));
    var DxoColCountByScreenModule = /** @class */ (function () {
        function DxoColCountByScreenModule() {
        }
        DxoColCountByScreenModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoColCountByScreenComponent
                ],
                exports: [
                    DxoColCountByScreenComponent
                ],
            })
        ], DxoColCountByScreenModule);
        return DxoColCountByScreenModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiColComponent = /** @class */ (function (_super) {
        __extends(DxiColComponent, _super);
        function DxiColComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiColComponent.prototype, "baseSize", {
            get: function () {
                return this._getOption('baseSize');
            },
            set: function (value) {
                this._setOption('baseSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiColComponent.prototype, "ratio", {
            get: function () {
                return this._getOption('ratio');
            },
            set: function (value) {
                this._setOption('ratio', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiColComponent.prototype, "screen", {
            get: function () {
                return this._getOption('screen');
            },
            set: function (value) {
                this._setOption('screen', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiColComponent.prototype, "shrink", {
            get: function () {
                return this._getOption('shrink');
            },
            set: function (value) {
                this._setOption('shrink', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiColComponent.prototype, "_optionPath", {
            get: function () {
                return 'cols';
            },
            enumerable: true,
            configurable: true
        });
        DxiColComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiColComponent.prototype, "baseSize", null);
        __decorate([
            core.Input()
        ], DxiColComponent.prototype, "ratio", null);
        __decorate([
            core.Input()
        ], DxiColComponent.prototype, "screen", null);
        __decorate([
            core.Input()
        ], DxiColComponent.prototype, "shrink", null);
        DxiColComponent = __decorate([
            core.Component({
                selector: 'dxi-col',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiColComponent);
        return DxiColComponent;
    }(core$1.CollectionNestedOption));
    var DxiColModule = /** @class */ (function () {
        function DxiColModule() {
        }
        DxiColModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiColComponent
                ],
                exports: [
                    DxiColComponent
                ],
            })
        ], DxiColModule);
        return DxiColModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoCollisionComponent = /** @class */ (function (_super) {
        __extends(DxoCollisionComponent, _super);
        function DxoCollisionComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoCollisionComponent.prototype, "x", {
            get: function () {
                return this._getOption('x');
            },
            set: function (value) {
                this._setOption('x', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCollisionComponent.prototype, "y", {
            get: function () {
                return this._getOption('y');
            },
            set: function (value) {
                this._setOption('y', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCollisionComponent.prototype, "_optionPath", {
            get: function () {
                return 'collision';
            },
            enumerable: true,
            configurable: true
        });
        DxoCollisionComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoCollisionComponent.prototype, "x", null);
        __decorate([
            core.Input()
        ], DxoCollisionComponent.prototype, "y", null);
        DxoCollisionComponent = __decorate([
            core.Component({
                selector: 'dxo-collision',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoCollisionComponent);
        return DxoCollisionComponent;
    }(core$1.NestedOption));
    var DxoCollisionModule = /** @class */ (function () {
        function DxoCollisionModule() {
        }
        DxoCollisionModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoCollisionComponent
                ],
                exports: [
                    DxoCollisionComponent
                ],
            })
        ], DxoCollisionModule);
        return DxoCollisionModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoColorizerComponent = /** @class */ (function (_super) {
        __extends(DxoColorizerComponent, _super);
        function DxoColorizerComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoColorizerComponent.prototype, "colorCodeField", {
            get: function () {
                return this._getOption('colorCodeField');
            },
            set: function (value) {
                this._setOption('colorCodeField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColorizerComponent.prototype, "colorizeGroups", {
            get: function () {
                return this._getOption('colorizeGroups');
            },
            set: function (value) {
                this._setOption('colorizeGroups', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColorizerComponent.prototype, "palette", {
            get: function () {
                return this._getOption('palette');
            },
            set: function (value) {
                this._setOption('palette', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColorizerComponent.prototype, "paletteExtensionMode", {
            get: function () {
                return this._getOption('paletteExtensionMode');
            },
            set: function (value) {
                this._setOption('paletteExtensionMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColorizerComponent.prototype, "range", {
            get: function () {
                return this._getOption('range');
            },
            set: function (value) {
                this._setOption('range', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColorizerComponent.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColorizerComponent.prototype, "_optionPath", {
            get: function () {
                return 'colorizer';
            },
            enumerable: true,
            configurable: true
        });
        DxoColorizerComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoColorizerComponent.prototype, "colorCodeField", null);
        __decorate([
            core.Input()
        ], DxoColorizerComponent.prototype, "colorizeGroups", null);
        __decorate([
            core.Input()
        ], DxoColorizerComponent.prototype, "palette", null);
        __decorate([
            core.Input()
        ], DxoColorizerComponent.prototype, "paletteExtensionMode", null);
        __decorate([
            core.Input()
        ], DxoColorizerComponent.prototype, "range", null);
        __decorate([
            core.Input()
        ], DxoColorizerComponent.prototype, "type", null);
        DxoColorizerComponent = __decorate([
            core.Component({
                selector: 'dxo-colorizer',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoColorizerComponent);
        return DxoColorizerComponent;
    }(core$1.NestedOption));
    var DxoColorizerModule = /** @class */ (function () {
        function DxoColorizerModule() {
        }
        DxoColorizerModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoColorizerComponent
                ],
                exports: [
                    DxoColorizerComponent
                ],
            })
        ], DxoColorizerModule);
        return DxoColorizerModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoColumnChooserComponent = /** @class */ (function (_super) {
        __extends(DxoColumnChooserComponent, _super);
        function DxoColumnChooserComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoColumnChooserComponent.prototype, "allowSearch", {
            get: function () {
                return this._getOption('allowSearch');
            },
            set: function (value) {
                this._setOption('allowSearch', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColumnChooserComponent.prototype, "emptyPanelText", {
            get: function () {
                return this._getOption('emptyPanelText');
            },
            set: function (value) {
                this._setOption('emptyPanelText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColumnChooserComponent.prototype, "enabled", {
            get: function () {
                return this._getOption('enabled');
            },
            set: function (value) {
                this._setOption('enabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColumnChooserComponent.prototype, "height", {
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColumnChooserComponent.prototype, "mode", {
            get: function () {
                return this._getOption('mode');
            },
            set: function (value) {
                this._setOption('mode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColumnChooserComponent.prototype, "searchTimeout", {
            get: function () {
                return this._getOption('searchTimeout');
            },
            set: function (value) {
                this._setOption('searchTimeout', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColumnChooserComponent.prototype, "title", {
            get: function () {
                return this._getOption('title');
            },
            set: function (value) {
                this._setOption('title', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColumnChooserComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColumnChooserComponent.prototype, "_optionPath", {
            get: function () {
                return 'columnChooser';
            },
            enumerable: true,
            configurable: true
        });
        DxoColumnChooserComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoColumnChooserComponent.prototype, "allowSearch", null);
        __decorate([
            core.Input()
        ], DxoColumnChooserComponent.prototype, "emptyPanelText", null);
        __decorate([
            core.Input()
        ], DxoColumnChooserComponent.prototype, "enabled", null);
        __decorate([
            core.Input()
        ], DxoColumnChooserComponent.prototype, "height", null);
        __decorate([
            core.Input()
        ], DxoColumnChooserComponent.prototype, "mode", null);
        __decorate([
            core.Input()
        ], DxoColumnChooserComponent.prototype, "searchTimeout", null);
        __decorate([
            core.Input()
        ], DxoColumnChooserComponent.prototype, "title", null);
        __decorate([
            core.Input()
        ], DxoColumnChooserComponent.prototype, "width", null);
        DxoColumnChooserComponent = __decorate([
            core.Component({
                selector: 'dxo-column-chooser',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoColumnChooserComponent);
        return DxoColumnChooserComponent;
    }(core$1.NestedOption));
    var DxoColumnChooserModule = /** @class */ (function () {
        function DxoColumnChooserModule() {
        }
        DxoColumnChooserModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoColumnChooserComponent
                ],
                exports: [
                    DxoColumnChooserComponent
                ],
            })
        ], DxoColumnChooserModule);
        return DxoColumnChooserModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiDataGridColumn = /** @class */ (function (_super) {
        __extends(DxiDataGridColumn, _super);
        function DxiDataGridColumn() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxiDataGridColumn.prototype, "alignment", {
            get: function () {
                return this._getOption('alignment');
            },
            set: function (value) {
                this._setOption('alignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "allowEditing", {
            get: function () {
                return this._getOption('allowEditing');
            },
            set: function (value) {
                this._setOption('allowEditing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "allowExporting", {
            get: function () {
                return this._getOption('allowExporting');
            },
            set: function (value) {
                this._setOption('allowExporting', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "allowFiltering", {
            get: function () {
                return this._getOption('allowFiltering');
            },
            set: function (value) {
                this._setOption('allowFiltering', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "allowFixing", {
            get: function () {
                return this._getOption('allowFixing');
            },
            set: function (value) {
                this._setOption('allowFixing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "allowGrouping", {
            get: function () {
                return this._getOption('allowGrouping');
            },
            set: function (value) {
                this._setOption('allowGrouping', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "allowHeaderFiltering", {
            get: function () {
                return this._getOption('allowHeaderFiltering');
            },
            set: function (value) {
                this._setOption('allowHeaderFiltering', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "allowHiding", {
            get: function () {
                return this._getOption('allowHiding');
            },
            set: function (value) {
                this._setOption('allowHiding', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "allowReordering", {
            get: function () {
                return this._getOption('allowReordering');
            },
            set: function (value) {
                this._setOption('allowReordering', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "allowResizing", {
            get: function () {
                return this._getOption('allowResizing');
            },
            set: function (value) {
                this._setOption('allowResizing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "allowSearch", {
            get: function () {
                return this._getOption('allowSearch');
            },
            set: function (value) {
                this._setOption('allowSearch', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "allowSorting", {
            get: function () {
                return this._getOption('allowSorting');
            },
            set: function (value) {
                this._setOption('allowSorting', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "autoExpandGroup", {
            get: function () {
                return this._getOption('autoExpandGroup');
            },
            set: function (value) {
                this._setOption('autoExpandGroup', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "buttons", {
            get: function () {
                return this._getOption('buttons');
            },
            set: function (value) {
                this._setOption('buttons', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "calculateCellValue", {
            get: function () {
                return this._getOption('calculateCellValue');
            },
            set: function (value) {
                this._setOption('calculateCellValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "calculateDisplayValue", {
            get: function () {
                return this._getOption('calculateDisplayValue');
            },
            set: function (value) {
                this._setOption('calculateDisplayValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "calculateFilterExpression", {
            get: function () {
                return this._getOption('calculateFilterExpression');
            },
            set: function (value) {
                this._setOption('calculateFilterExpression', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "calculateGroupValue", {
            get: function () {
                return this._getOption('calculateGroupValue');
            },
            set: function (value) {
                this._setOption('calculateGroupValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "calculateSortValue", {
            get: function () {
                return this._getOption('calculateSortValue');
            },
            set: function (value) {
                this._setOption('calculateSortValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "caption", {
            get: function () {
                return this._getOption('caption');
            },
            set: function (value) {
                this._setOption('caption', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "cellTemplate", {
            get: function () {
                return this._getOption('cellTemplate');
            },
            set: function (value) {
                this._setOption('cellTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "columns", {
            get: function () {
                return this._getOption('columns');
            },
            set: function (value) {
                this._setOption('columns', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "cssClass", {
            get: function () {
                return this._getOption('cssClass');
            },
            set: function (value) {
                this._setOption('cssClass', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "customizeText", {
            get: function () {
                return this._getOption('customizeText');
            },
            set: function (value) {
                this._setOption('customizeText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "dataField", {
            get: function () {
                return this._getOption('dataField');
            },
            set: function (value) {
                this._setOption('dataField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "dataType", {
            get: function () {
                return this._getOption('dataType');
            },
            set: function (value) {
                this._setOption('dataType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "editCellTemplate", {
            get: function () {
                return this._getOption('editCellTemplate');
            },
            set: function (value) {
                this._setOption('editCellTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "editorOptions", {
            get: function () {
                return this._getOption('editorOptions');
            },
            set: function (value) {
                this._setOption('editorOptions', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "encodeHtml", {
            get: function () {
                return this._getOption('encodeHtml');
            },
            set: function (value) {
                this._setOption('encodeHtml', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "falseText", {
            get: function () {
                return this._getOption('falseText');
            },
            set: function (value) {
                this._setOption('falseText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "filterOperations", {
            get: function () {
                return this._getOption('filterOperations');
            },
            set: function (value) {
                this._setOption('filterOperations', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "filterType", {
            get: function () {
                return this._getOption('filterType');
            },
            set: function (value) {
                this._setOption('filterType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "filterValue", {
            get: function () {
                return this._getOption('filterValue');
            },
            set: function (value) {
                this._setOption('filterValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "filterValues", {
            get: function () {
                return this._getOption('filterValues');
            },
            set: function (value) {
                this._setOption('filterValues', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "fixed", {
            get: function () {
                return this._getOption('fixed');
            },
            set: function (value) {
                this._setOption('fixed', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "fixedPosition", {
            get: function () {
                return this._getOption('fixedPosition');
            },
            set: function (value) {
                this._setOption('fixedPosition', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "format", {
            get: function () {
                return this._getOption('format');
            },
            set: function (value) {
                this._setOption('format', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "formItem", {
            get: function () {
                return this._getOption('formItem');
            },
            set: function (value) {
                this._setOption('formItem', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "groupCellTemplate", {
            get: function () {
                return this._getOption('groupCellTemplate');
            },
            set: function (value) {
                this._setOption('groupCellTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "groupIndex", {
            get: function () {
                return this._getOption('groupIndex');
            },
            set: function (value) {
                this._setOption('groupIndex', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "headerCellTemplate", {
            get: function () {
                return this._getOption('headerCellTemplate');
            },
            set: function (value) {
                this._setOption('headerCellTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "headerFilter", {
            get: function () {
                return this._getOption('headerFilter');
            },
            set: function (value) {
                this._setOption('headerFilter', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "hidingPriority", {
            get: function () {
                return this._getOption('hidingPriority');
            },
            set: function (value) {
                this._setOption('hidingPriority', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "isBand", {
            get: function () {
                return this._getOption('isBand');
            },
            set: function (value) {
                this._setOption('isBand', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "lookup", {
            get: function () {
                return this._getOption('lookup');
            },
            set: function (value) {
                this._setOption('lookup', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "minWidth", {
            get: function () {
                return this._getOption('minWidth');
            },
            set: function (value) {
                this._setOption('minWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "ownerBand", {
            get: function () {
                return this._getOption('ownerBand');
            },
            set: function (value) {
                this._setOption('ownerBand', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "renderAsync", {
            get: function () {
                return this._getOption('renderAsync');
            },
            set: function (value) {
                this._setOption('renderAsync', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "selectedFilterOperation", {
            get: function () {
                return this._getOption('selectedFilterOperation');
            },
            set: function (value) {
                this._setOption('selectedFilterOperation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "setCellValue", {
            get: function () {
                return this._getOption('setCellValue');
            },
            set: function (value) {
                this._setOption('setCellValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "showEditorAlways", {
            get: function () {
                return this._getOption('showEditorAlways');
            },
            set: function (value) {
                this._setOption('showEditorAlways', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "showInColumnChooser", {
            get: function () {
                return this._getOption('showInColumnChooser');
            },
            set: function (value) {
                this._setOption('showInColumnChooser', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "showWhenGrouped", {
            get: function () {
                return this._getOption('showWhenGrouped');
            },
            set: function (value) {
                this._setOption('showWhenGrouped', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "sortIndex", {
            get: function () {
                return this._getOption('sortIndex');
            },
            set: function (value) {
                this._setOption('sortIndex', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "sortingMethod", {
            get: function () {
                return this._getOption('sortingMethod');
            },
            set: function (value) {
                this._setOption('sortingMethod', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "sortOrder", {
            get: function () {
                return this._getOption('sortOrder');
            },
            set: function (value) {
                this._setOption('sortOrder', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "trueText", {
            get: function () {
                return this._getOption('trueText');
            },
            set: function (value) {
                this._setOption('trueText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "validationRules", {
            get: function () {
                return this._getOption('validationRules');
            },
            set: function (value) {
                this._setOption('validationRules', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "visibleIndex", {
            get: function () {
                return this._getOption('visibleIndex');
            },
            set: function (value) {
                this._setOption('visibleIndex', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiDataGridColumn.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxiDataGridColumn;
    }(core$1.CollectionNestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiColumnComponent = /** @class */ (function (_super) {
        __extends(DxiColumnComponent, _super);
        function DxiColumnComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            _this._createEventEmitters([
                { emit: 'filterValueChange' },
                { emit: 'filterValuesChange' },
                { emit: 'groupIndexChange' },
                { emit: 'selectedFilterOperationChange' },
                { emit: 'sortIndexChange' },
                { emit: 'sortOrderChange' },
                { emit: 'visibleChange' },
                { emit: 'visibleIndexChange' }
            ]);
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        DxiColumnComponent_1 = DxiColumnComponent;
        Object.defineProperty(DxiColumnComponent.prototype, "_optionPath", {
            get: function () {
                return 'columns';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiColumnComponent.prototype, "buttonsChildren", {
            get: function () {
                return this._getOption('buttons');
            },
            set: function (value) {
                this.setChildren('buttons', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiColumnComponent.prototype, "columnsChildren", {
            get: function () {
                return this._getOption('columns');
            },
            set: function (value) {
                this.setChildren('columns', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiColumnComponent.prototype, "validationRulesChildren", {
            get: function () {
                return this._getOption('validationRules');
            },
            set: function (value) {
                this.setChildren('validationRules', value);
            },
            enumerable: true,
            configurable: true
        });
        DxiColumnComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Output()
        ], DxiColumnComponent.prototype, "filterValueChange", void 0);
        __decorate([
            core.Output()
        ], DxiColumnComponent.prototype, "filterValuesChange", void 0);
        __decorate([
            core.Output()
        ], DxiColumnComponent.prototype, "groupIndexChange", void 0);
        __decorate([
            core.Output()
        ], DxiColumnComponent.prototype, "selectedFilterOperationChange", void 0);
        __decorate([
            core.Output()
        ], DxiColumnComponent.prototype, "sortIndexChange", void 0);
        __decorate([
            core.Output()
        ], DxiColumnComponent.prototype, "sortOrderChange", void 0);
        __decorate([
            core.Output()
        ], DxiColumnComponent.prototype, "visibleChange", void 0);
        __decorate([
            core.Output()
        ], DxiColumnComponent.prototype, "visibleIndexChange", void 0);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiButtonComponent; }))
        ], DxiColumnComponent.prototype, "buttonsChildren", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiColumnComponent_1; }))
        ], DxiColumnComponent.prototype, "columnsChildren", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiValidationRuleComponent; }))
        ], DxiColumnComponent.prototype, "validationRulesChildren", null);
        DxiColumnComponent = DxiColumnComponent_1 = __decorate([
            core.Component({
                selector: 'dxi-column',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'alignment',
                    'allowEditing',
                    'allowExporting',
                    'allowFiltering',
                    'allowFixing',
                    'allowGrouping',
                    'allowHeaderFiltering',
                    'allowHiding',
                    'allowReordering',
                    'allowResizing',
                    'allowSearch',
                    'allowSorting',
                    'autoExpandGroup',
                    'buttons',
                    'calculateCellValue',
                    'calculateDisplayValue',
                    'calculateFilterExpression',
                    'calculateGroupValue',
                    'calculateSortValue',
                    'caption',
                    'cellTemplate',
                    'columns',
                    'cssClass',
                    'customizeText',
                    'dataField',
                    'dataType',
                    'editCellTemplate',
                    'editorOptions',
                    'encodeHtml',
                    'falseText',
                    'filterOperations',
                    'filterType',
                    'filterValue',
                    'filterValues',
                    'fixed',
                    'fixedPosition',
                    'format',
                    'formItem',
                    'groupCellTemplate',
                    'groupIndex',
                    'headerCellTemplate',
                    'headerFilter',
                    'hidingPriority',
                    'isBand',
                    'lookup',
                    'minWidth',
                    'name',
                    'ownerBand',
                    'renderAsync',
                    'selectedFilterOperation',
                    'setCellValue',
                    'showEditorAlways',
                    'showInColumnChooser',
                    'showWhenGrouped',
                    'sortIndex',
                    'sortingMethod',
                    'sortOrder',
                    'trueText',
                    'type',
                    'validationRules',
                    'visible',
                    'visibleIndex',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiColumnComponent);
        return DxiColumnComponent;
        var DxiColumnComponent_1;
    }(DxiDataGridColumn));
    var DxiColumnModule = /** @class */ (function () {
        function DxiColumnModule() {
        }
        DxiColumnModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiColumnComponent
                ],
                exports: [
                    DxiColumnComponent
                ],
            })
        ], DxiColumnModule);
        return DxiColumnModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoColumnFixingComponent = /** @class */ (function (_super) {
        __extends(DxoColumnFixingComponent, _super);
        function DxoColumnFixingComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoColumnFixingComponent.prototype, "enabled", {
            get: function () {
                return this._getOption('enabled');
            },
            set: function (value) {
                this._setOption('enabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColumnFixingComponent.prototype, "texts", {
            get: function () {
                return this._getOption('texts');
            },
            set: function (value) {
                this._setOption('texts', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoColumnFixingComponent.prototype, "_optionPath", {
            get: function () {
                return 'columnFixing';
            },
            enumerable: true,
            configurable: true
        });
        DxoColumnFixingComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoColumnFixingComponent.prototype, "enabled", null);
        __decorate([
            core.Input()
        ], DxoColumnFixingComponent.prototype, "texts", null);
        DxoColumnFixingComponent = __decorate([
            core.Component({
                selector: 'dxo-column-fixing',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoColumnFixingComponent);
        return DxoColumnFixingComponent;
    }(core$1.NestedOption));
    var DxoColumnFixingModule = /** @class */ (function () {
        function DxoColumnFixingModule() {
        }
        DxoColumnFixingModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoColumnFixingComponent
                ],
                exports: [
                    DxoColumnFixingComponent
                ],
            })
        ], DxoColumnFixingModule);
        return DxoColumnFixingModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoChartCommonAnnotationConfig = /** @class */ (function (_super) {
        __extends(DxoChartCommonAnnotationConfig, _super);
        function DxoChartCommonAnnotationConfig() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "allowDragging", {
            get: function () {
                return this._getOption('allowDragging');
            },
            set: function (value) {
                this._setOption('allowDragging', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "argument", {
            get: function () {
                return this._getOption('argument');
            },
            set: function (value) {
                this._setOption('argument', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "arrowLength", {
            get: function () {
                return this._getOption('arrowLength');
            },
            set: function (value) {
                this._setOption('arrowLength', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "arrowWidth", {
            get: function () {
                return this._getOption('arrowWidth');
            },
            set: function (value) {
                this._setOption('arrowWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "axis", {
            get: function () {
                return this._getOption('axis');
            },
            set: function (value) {
                this._setOption('axis', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "border", {
            get: function () {
                return this._getOption('border');
            },
            set: function (value) {
                this._setOption('border', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "customizeTooltip", {
            get: function () {
                return this._getOption('customizeTooltip');
            },
            set: function (value) {
                this._setOption('customizeTooltip', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "description", {
            get: function () {
                return this._getOption('description');
            },
            set: function (value) {
                this._setOption('description', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "font", {
            get: function () {
                return this._getOption('font');
            },
            set: function (value) {
                this._setOption('font', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "height", {
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "image", {
            get: function () {
                return this._getOption('image');
            },
            set: function (value) {
                this._setOption('image', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "offsetX", {
            get: function () {
                return this._getOption('offsetX');
            },
            set: function (value) {
                this._setOption('offsetX', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "offsetY", {
            get: function () {
                return this._getOption('offsetY');
            },
            set: function (value) {
                this._setOption('offsetY', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "paddingLeftRight", {
            get: function () {
                return this._getOption('paddingLeftRight');
            },
            set: function (value) {
                this._setOption('paddingLeftRight', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "paddingTopBottom", {
            get: function () {
                return this._getOption('paddingTopBottom');
            },
            set: function (value) {
                this._setOption('paddingTopBottom', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "series", {
            get: function () {
                return this._getOption('series');
            },
            set: function (value) {
                this._setOption('series', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "shadow", {
            get: function () {
                return this._getOption('shadow');
            },
            set: function (value) {
                this._setOption('shadow', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "text", {
            get: function () {
                return this._getOption('text');
            },
            set: function (value) {
                this._setOption('text', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "textOverflow", {
            get: function () {
                return this._getOption('textOverflow');
            },
            set: function (value) {
                this._setOption('textOverflow', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "tooltipEnabled", {
            get: function () {
                return this._getOption('tooltipEnabled');
            },
            set: function (value) {
                this._setOption('tooltipEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "value", {
            get: function () {
                return this._getOption('value');
            },
            set: function (value) {
                this._setOption('value', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "wordWrap", {
            get: function () {
                return this._getOption('wordWrap');
            },
            set: function (value) {
                this._setOption('wordWrap', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "x", {
            get: function () {
                return this._getOption('x');
            },
            set: function (value) {
                this._setOption('x', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoChartCommonAnnotationConfig.prototype, "y", {
            get: function () {
                return this._getOption('y');
            },
            set: function (value) {
                this._setOption('y', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoChartCommonAnnotationConfig;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoCommonAnnotationSettingsComponent = /** @class */ (function (_super) {
        __extends(DxoCommonAnnotationSettingsComponent, _super);
        function DxoCommonAnnotationSettingsComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoCommonAnnotationSettingsComponent.prototype, "_optionPath", {
            get: function () {
                return 'commonAnnotationSettings';
            },
            enumerable: true,
            configurable: true
        });
        DxoCommonAnnotationSettingsComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoCommonAnnotationSettingsComponent = __decorate([
            core.Component({
                selector: 'dxo-common-annotation-settings',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'allowDragging',
                    'argument',
                    'arrowLength',
                    'arrowWidth',
                    'axis',
                    'border',
                    'color',
                    'customizeTooltip',
                    'description',
                    'font',
                    'height',
                    'image',
                    'offsetX',
                    'offsetY',
                    'opacity',
                    'paddingLeftRight',
                    'paddingTopBottom',
                    'series',
                    'shadow',
                    'text',
                    'textOverflow',
                    'tooltipEnabled',
                    'type',
                    'value',
                    'width',
                    'wordWrap',
                    'x',
                    'y'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoCommonAnnotationSettingsComponent);
        return DxoCommonAnnotationSettingsComponent;
    }(DxoChartCommonAnnotationConfig));
    var DxoCommonAnnotationSettingsModule = /** @class */ (function () {
        function DxoCommonAnnotationSettingsModule() {
        }
        DxoCommonAnnotationSettingsModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoCommonAnnotationSettingsComponent
                ],
                exports: [
                    DxoCommonAnnotationSettingsComponent
                ],
            })
        ], DxoCommonAnnotationSettingsModule);
        return DxoCommonAnnotationSettingsModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoCommonAxisSettingsComponent = /** @class */ (function (_super) {
        __extends(DxoCommonAxisSettingsComponent, _super);
        function DxoCommonAxisSettingsComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "allowDecimals", {
            get: function () {
                return this._getOption('allowDecimals');
            },
            set: function (value) {
                this._setOption('allowDecimals', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "breakStyle", {
            get: function () {
                return this._getOption('breakStyle');
            },
            set: function (value) {
                this._setOption('breakStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "constantLineStyle", {
            get: function () {
                return this._getOption('constantLineStyle');
            },
            set: function (value) {
                this._setOption('constantLineStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "discreteAxisDivisionMode", {
            get: function () {
                return this._getOption('discreteAxisDivisionMode');
            },
            set: function (value) {
                this._setOption('discreteAxisDivisionMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "endOnTick", {
            get: function () {
                return this._getOption('endOnTick');
            },
            set: function (value) {
                this._setOption('endOnTick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "grid", {
            get: function () {
                return this._getOption('grid');
            },
            set: function (value) {
                this._setOption('grid', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "inverted", {
            get: function () {
                return this._getOption('inverted');
            },
            set: function (value) {
                this._setOption('inverted', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "maxValueMargin", {
            get: function () {
                return this._getOption('maxValueMargin');
            },
            set: function (value) {
                this._setOption('maxValueMargin', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "minorGrid", {
            get: function () {
                return this._getOption('minorGrid');
            },
            set: function (value) {
                this._setOption('minorGrid', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "minorTick", {
            get: function () {
                return this._getOption('minorTick');
            },
            set: function (value) {
                this._setOption('minorTick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "minValueMargin", {
            get: function () {
                return this._getOption('minValueMargin');
            },
            set: function (value) {
                this._setOption('minValueMargin', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "placeholderSize", {
            get: function () {
                return this._getOption('placeholderSize');
            },
            set: function (value) {
                this._setOption('placeholderSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "stripStyle", {
            get: function () {
                return this._getOption('stripStyle');
            },
            set: function (value) {
                this._setOption('stripStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "tick", {
            get: function () {
                return this._getOption('tick');
            },
            set: function (value) {
                this._setOption('tick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "title", {
            get: function () {
                return this._getOption('title');
            },
            set: function (value) {
                this._setOption('title', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "valueMarginsEnabled", {
            get: function () {
                return this._getOption('valueMarginsEnabled');
            },
            set: function (value) {
                this._setOption('valueMarginsEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonAxisSettingsComponent.prototype, "_optionPath", {
            get: function () {
                return 'commonAxisSettings';
            },
            enumerable: true,
            configurable: true
        });
        DxoCommonAxisSettingsComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "allowDecimals", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "breakStyle", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "constantLineStyle", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "discreteAxisDivisionMode", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "endOnTick", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "grid", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "inverted", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "label", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "maxValueMargin", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "minorGrid", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "minorTick", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "minValueMargin", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "placeholderSize", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "stripStyle", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "tick", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "title", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "valueMarginsEnabled", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxoCommonAxisSettingsComponent.prototype, "width", null);
        DxoCommonAxisSettingsComponent = __decorate([
            core.Component({
                selector: 'dxo-common-axis-settings',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoCommonAxisSettingsComponent);
        return DxoCommonAxisSettingsComponent;
    }(core$1.NestedOption));
    var DxoCommonAxisSettingsModule = /** @class */ (function () {
        function DxoCommonAxisSettingsModule() {
        }
        DxoCommonAxisSettingsModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoCommonAxisSettingsComponent
                ],
                exports: [
                    DxoCommonAxisSettingsComponent
                ],
            })
        ], DxoCommonAxisSettingsModule);
        return DxoCommonAxisSettingsModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoCommonPaneSettingsComponent = /** @class */ (function (_super) {
        __extends(DxoCommonPaneSettingsComponent, _super);
        function DxoCommonPaneSettingsComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoCommonPaneSettingsComponent.prototype, "backgroundColor", {
            get: function () {
                return this._getOption('backgroundColor');
            },
            set: function (value) {
                this._setOption('backgroundColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonPaneSettingsComponent.prototype, "border", {
            get: function () {
                return this._getOption('border');
            },
            set: function (value) {
                this._setOption('border', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCommonPaneSettingsComponent.prototype, "_optionPath", {
            get: function () {
                return 'commonPaneSettings';
            },
            enumerable: true,
            configurable: true
        });
        DxoCommonPaneSettingsComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoCommonPaneSettingsComponent.prototype, "backgroundColor", null);
        __decorate([
            core.Input()
        ], DxoCommonPaneSettingsComponent.prototype, "border", null);
        DxoCommonPaneSettingsComponent = __decorate([
            core.Component({
                selector: 'dxo-common-pane-settings',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoCommonPaneSettingsComponent);
        return DxoCommonPaneSettingsComponent;
    }(core$1.NestedOption));
    var DxoCommonPaneSettingsModule = /** @class */ (function () {
        function DxoCommonPaneSettingsModule() {
        }
        DxoCommonPaneSettingsModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoCommonPaneSettingsComponent
                ],
                exports: [
                    DxoCommonPaneSettingsComponent
                ],
            })
        ], DxoCommonPaneSettingsModule);
        return DxoCommonPaneSettingsModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoCommonSeriesSettingsComponent = /** @class */ (function (_super) {
        __extends(DxoCommonSeriesSettingsComponent, _super);
        function DxoCommonSeriesSettingsComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoCommonSeriesSettingsComponent.prototype, "_optionPath", {
            get: function () {
                return 'commonSeriesSettings';
            },
            enumerable: true,
            configurable: true
        });
        DxoCommonSeriesSettingsComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoCommonSeriesSettingsComponent = __decorate([
            core.Component({
                selector: 'dxo-common-series-settings',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width',
                    'argumentType',
                    'minSegmentSize',
                    'smallValuesGrouping',
                    'closed'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoCommonSeriesSettingsComponent);
        return DxoCommonSeriesSettingsComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoCommonSeriesSettingsModule = /** @class */ (function () {
        function DxoCommonSeriesSettingsModule() {
        }
        DxoCommonSeriesSettingsModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoCommonSeriesSettingsComponent
                ],
                exports: [
                    DxoCommonSeriesSettingsComponent
                ],
            })
        ], DxoCommonSeriesSettingsModule);
        return DxoCommonSeriesSettingsModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoConnectorComponent = /** @class */ (function (_super) {
        __extends(DxoConnectorComponent, _super);
        function DxoConnectorComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoConnectorComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoConnectorComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoConnectorComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoConnectorComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoConnectorComponent.prototype, "_optionPath", {
            get: function () {
                return 'connector';
            },
            enumerable: true,
            configurable: true
        });
        DxoConnectorComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoConnectorComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoConnectorComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxoConnectorComponent.prototype, "width", null);
        __decorate([
            core.Input()
        ], DxoConnectorComponent.prototype, "opacity", null);
        DxoConnectorComponent = __decorate([
            core.Component({
                selector: 'dxo-connector',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoConnectorComponent);
        return DxoConnectorComponent;
    }(core$1.NestedOption));
    var DxoConnectorModule = /** @class */ (function () {
        function DxoConnectorModule() {
        }
        DxoConnectorModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoConnectorComponent
                ],
                exports: [
                    DxoConnectorComponent
                ],
            })
        ], DxoConnectorModule);
        return DxoConnectorModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoConstantLineStyleComponent = /** @class */ (function (_super) {
        __extends(DxoConstantLineStyleComponent, _super);
        function DxoConstantLineStyleComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoConstantLineStyleComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoConstantLineStyleComponent.prototype, "dashStyle", {
            get: function () {
                return this._getOption('dashStyle');
            },
            set: function (value) {
                this._setOption('dashStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoConstantLineStyleComponent.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoConstantLineStyleComponent.prototype, "paddingLeftRight", {
            get: function () {
                return this._getOption('paddingLeftRight');
            },
            set: function (value) {
                this._setOption('paddingLeftRight', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoConstantLineStyleComponent.prototype, "paddingTopBottom", {
            get: function () {
                return this._getOption('paddingTopBottom');
            },
            set: function (value) {
                this._setOption('paddingTopBottom', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoConstantLineStyleComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoConstantLineStyleComponent.prototype, "_optionPath", {
            get: function () {
                return 'constantLineStyle';
            },
            enumerable: true,
            configurable: true
        });
        DxoConstantLineStyleComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoConstantLineStyleComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoConstantLineStyleComponent.prototype, "dashStyle", null);
        __decorate([
            core.Input()
        ], DxoConstantLineStyleComponent.prototype, "label", null);
        __decorate([
            core.Input()
        ], DxoConstantLineStyleComponent.prototype, "paddingLeftRight", null);
        __decorate([
            core.Input()
        ], DxoConstantLineStyleComponent.prototype, "paddingTopBottom", null);
        __decorate([
            core.Input()
        ], DxoConstantLineStyleComponent.prototype, "width", null);
        DxoConstantLineStyleComponent = __decorate([
            core.Component({
                selector: 'dxo-constant-line-style',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoConstantLineStyleComponent);
        return DxoConstantLineStyleComponent;
    }(core$1.NestedOption));
    var DxoConstantLineStyleModule = /** @class */ (function () {
        function DxoConstantLineStyleModule() {
        }
        DxoConstantLineStyleModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoConstantLineStyleComponent
                ],
                exports: [
                    DxoConstantLineStyleComponent
                ],
            })
        ], DxoConstantLineStyleModule);
        return DxoConstantLineStyleModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoControlBarComponent = /** @class */ (function (_super) {
        __extends(DxoControlBarComponent, _super);
        function DxoControlBarComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoControlBarComponent.prototype, "borderColor", {
            get: function () {
                return this._getOption('borderColor');
            },
            set: function (value) {
                this._setOption('borderColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoControlBarComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoControlBarComponent.prototype, "enabled", {
            get: function () {
                return this._getOption('enabled');
            },
            set: function (value) {
                this._setOption('enabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoControlBarComponent.prototype, "horizontalAlignment", {
            get: function () {
                return this._getOption('horizontalAlignment');
            },
            set: function (value) {
                this._setOption('horizontalAlignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoControlBarComponent.prototype, "margin", {
            get: function () {
                return this._getOption('margin');
            },
            set: function (value) {
                this._setOption('margin', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoControlBarComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoControlBarComponent.prototype, "verticalAlignment", {
            get: function () {
                return this._getOption('verticalAlignment');
            },
            set: function (value) {
                this._setOption('verticalAlignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoControlBarComponent.prototype, "_optionPath", {
            get: function () {
                return 'controlBar';
            },
            enumerable: true,
            configurable: true
        });
        DxoControlBarComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoControlBarComponent.prototype, "borderColor", null);
        __decorate([
            core.Input()
        ], DxoControlBarComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoControlBarComponent.prototype, "enabled", null);
        __decorate([
            core.Input()
        ], DxoControlBarComponent.prototype, "horizontalAlignment", null);
        __decorate([
            core.Input()
        ], DxoControlBarComponent.prototype, "margin", null);
        __decorate([
            core.Input()
        ], DxoControlBarComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxoControlBarComponent.prototype, "verticalAlignment", null);
        DxoControlBarComponent = __decorate([
            core.Component({
                selector: 'dxo-control-bar',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoControlBarComponent);
        return DxoControlBarComponent;
    }(core$1.NestedOption));
    var DxoControlBarModule = /** @class */ (function () {
        function DxoControlBarModule() {
        }
        DxoControlBarModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoControlBarComponent
                ],
                exports: [
                    DxoControlBarComponent
                ],
            })
        ], DxoControlBarModule);
        return DxoControlBarModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoCrosshairComponent = /** @class */ (function (_super) {
        __extends(DxoCrosshairComponent, _super);
        function DxoCrosshairComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoCrosshairComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCrosshairComponent.prototype, "dashStyle", {
            get: function () {
                return this._getOption('dashStyle');
            },
            set: function (value) {
                this._setOption('dashStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCrosshairComponent.prototype, "enabled", {
            get: function () {
                return this._getOption('enabled');
            },
            set: function (value) {
                this._setOption('enabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCrosshairComponent.prototype, "horizontalLine", {
            get: function () {
                return this._getOption('horizontalLine');
            },
            set: function (value) {
                this._setOption('horizontalLine', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCrosshairComponent.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCrosshairComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCrosshairComponent.prototype, "verticalLine", {
            get: function () {
                return this._getOption('verticalLine');
            },
            set: function (value) {
                this._setOption('verticalLine', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCrosshairComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoCrosshairComponent.prototype, "_optionPath", {
            get: function () {
                return 'crosshair';
            },
            enumerable: true,
            configurable: true
        });
        DxoCrosshairComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoCrosshairComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoCrosshairComponent.prototype, "dashStyle", null);
        __decorate([
            core.Input()
        ], DxoCrosshairComponent.prototype, "enabled", null);
        __decorate([
            core.Input()
        ], DxoCrosshairComponent.prototype, "horizontalLine", null);
        __decorate([
            core.Input()
        ], DxoCrosshairComponent.prototype, "label", null);
        __decorate([
            core.Input()
        ], DxoCrosshairComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxoCrosshairComponent.prototype, "verticalLine", null);
        __decorate([
            core.Input()
        ], DxoCrosshairComponent.prototype, "width", null);
        DxoCrosshairComponent = __decorate([
            core.Component({
                selector: 'dxo-crosshair',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoCrosshairComponent);
        return DxoCrosshairComponent;
    }(core$1.NestedOption));
    var DxoCrosshairModule = /** @class */ (function () {
        function DxoCrosshairModule() {
        }
        DxoCrosshairModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoCrosshairComponent
                ],
                exports: [
                    DxoCrosshairComponent
                ],
            })
        ], DxoCrosshairModule);
        return DxoCrosshairModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiFilterBuilderCustomOperation = /** @class */ (function (_super) {
        __extends(DxiFilterBuilderCustomOperation, _super);
        function DxiFilterBuilderCustomOperation() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "calculateFilterExpression", {
            get: function () {
                return this._getOption('calculateFilterExpression');
            },
            set: function (value) {
                this._setOption('calculateFilterExpression', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "caption", {
            get: function () {
                return this._getOption('caption');
            },
            set: function (value) {
                this._setOption('caption', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "customizeText", {
            get: function () {
                return this._getOption('customizeText');
            },
            set: function (value) {
                this._setOption('customizeText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "dataTypes", {
            get: function () {
                return this._getOption('dataTypes');
            },
            set: function (value) {
                this._setOption('dataTypes', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "editorTemplate", {
            get: function () {
                return this._getOption('editorTemplate');
            },
            set: function (value) {
                this._setOption('editorTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "hasValue", {
            get: function () {
                return this._getOption('hasValue');
            },
            set: function (value) {
                this._setOption('hasValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "icon", {
            get: function () {
                return this._getOption('icon');
            },
            set: function (value) {
                this._setOption('icon', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderCustomOperation.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxiFilterBuilderCustomOperation;
    }(core$1.CollectionNestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiCustomOperationComponent = /** @class */ (function (_super) {
        __extends(DxiCustomOperationComponent, _super);
        function DxiCustomOperationComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiCustomOperationComponent.prototype, "_optionPath", {
            get: function () {
                return 'customOperations';
            },
            enumerable: true,
            configurable: true
        });
        DxiCustomOperationComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxiCustomOperationComponent = __decorate([
            core.Component({
                selector: 'dxi-custom-operation',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'calculateFilterExpression',
                    'caption',
                    'customizeText',
                    'dataTypes',
                    'editorTemplate',
                    'hasValue',
                    'icon',
                    'name'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiCustomOperationComponent);
        return DxiCustomOperationComponent;
    }(DxiFilterBuilderCustomOperation));
    var DxiCustomOperationModule = /** @class */ (function () {
        function DxiCustomOperationModule() {
        }
        DxiCustomOperationModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiCustomOperationComponent
                ],
                exports: [
                    DxiCustomOperationComponent
                ],
            })
        ], DxiCustomOperationModule);
        return DxiCustomOperationModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoDataPrepareSettingsComponent = /** @class */ (function (_super) {
        __extends(DxoDataPrepareSettingsComponent, _super);
        function DxoDataPrepareSettingsComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoDataPrepareSettingsComponent.prototype, "checkTypeForAllData", {
            get: function () {
                return this._getOption('checkTypeForAllData');
            },
            set: function (value) {
                this._setOption('checkTypeForAllData', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoDataPrepareSettingsComponent.prototype, "convertToAxisDataType", {
            get: function () {
                return this._getOption('convertToAxisDataType');
            },
            set: function (value) {
                this._setOption('convertToAxisDataType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoDataPrepareSettingsComponent.prototype, "sortingMethod", {
            get: function () {
                return this._getOption('sortingMethod');
            },
            set: function (value) {
                this._setOption('sortingMethod', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoDataPrepareSettingsComponent.prototype, "_optionPath", {
            get: function () {
                return 'dataPrepareSettings';
            },
            enumerable: true,
            configurable: true
        });
        DxoDataPrepareSettingsComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoDataPrepareSettingsComponent.prototype, "checkTypeForAllData", null);
        __decorate([
            core.Input()
        ], DxoDataPrepareSettingsComponent.prototype, "convertToAxisDataType", null);
        __decorate([
            core.Input()
        ], DxoDataPrepareSettingsComponent.prototype, "sortingMethod", null);
        DxoDataPrepareSettingsComponent = __decorate([
            core.Component({
                selector: 'dxo-data-prepare-settings',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoDataPrepareSettingsComponent);
        return DxoDataPrepareSettingsComponent;
    }(core$1.NestedOption));
    var DxoDataPrepareSettingsModule = /** @class */ (function () {
        function DxoDataPrepareSettingsModule() {
        }
        DxoDataPrepareSettingsModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoDataPrepareSettingsComponent
                ],
                exports: [
                    DxoDataPrepareSettingsComponent
                ],
            })
        ], DxoDataPrepareSettingsModule);
        return DxoDataPrepareSettingsModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoPivotGridDataSource = /** @class */ (function (_super) {
        __extends(DxoPivotGridDataSource, _super);
        function DxoPivotGridDataSource() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoPivotGridDataSource.prototype, "fields", {
            get: function () {
                return this._getOption('fields');
            },
            set: function (value) {
                this._setOption('fields', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPivotGridDataSource.prototype, "filter", {
            get: function () {
                return this._getOption('filter');
            },
            set: function (value) {
                this._setOption('filter', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPivotGridDataSource.prototype, "onChanged", {
            get: function () {
                return this._getOption('onChanged');
            },
            set: function (value) {
                this._setOption('onChanged', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPivotGridDataSource.prototype, "onFieldsPrepared", {
            get: function () {
                return this._getOption('onFieldsPrepared');
            },
            set: function (value) {
                this._setOption('onFieldsPrepared', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPivotGridDataSource.prototype, "onLoadError", {
            get: function () {
                return this._getOption('onLoadError');
            },
            set: function (value) {
                this._setOption('onLoadError', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPivotGridDataSource.prototype, "onLoadingChanged", {
            get: function () {
                return this._getOption('onLoadingChanged');
            },
            set: function (value) {
                this._setOption('onLoadingChanged', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPivotGridDataSource.prototype, "remoteOperations", {
            get: function () {
                return this._getOption('remoteOperations');
            },
            set: function (value) {
                this._setOption('remoteOperations', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPivotGridDataSource.prototype, "retrieveFields", {
            get: function () {
                return this._getOption('retrieveFields');
            },
            set: function (value) {
                this._setOption('retrieveFields', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPivotGridDataSource.prototype, "store", {
            get: function () {
                return this._getOption('store');
            },
            set: function (value) {
                this._setOption('store', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoPivotGridDataSource;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiFilterBuilderField = /** @class */ (function (_super) {
        __extends(DxiFilterBuilderField, _super);
        function DxiFilterBuilderField() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxiFilterBuilderField.prototype, "calculateFilterExpression", {
            get: function () {
                return this._getOption('calculateFilterExpression');
            },
            set: function (value) {
                this._setOption('calculateFilterExpression', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "caption", {
            get: function () {
                return this._getOption('caption');
            },
            set: function (value) {
                this._setOption('caption', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "customizeText", {
            get: function () {
                return this._getOption('customizeText');
            },
            set: function (value) {
                this._setOption('customizeText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "dataField", {
            get: function () {
                return this._getOption('dataField');
            },
            set: function (value) {
                this._setOption('dataField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "dataType", {
            get: function () {
                return this._getOption('dataType');
            },
            set: function (value) {
                this._setOption('dataType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "editorOptions", {
            get: function () {
                return this._getOption('editorOptions');
            },
            set: function (value) {
                this._setOption('editorOptions', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "editorTemplate", {
            get: function () {
                return this._getOption('editorTemplate');
            },
            set: function (value) {
                this._setOption('editorTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "falseText", {
            get: function () {
                return this._getOption('falseText');
            },
            set: function (value) {
                this._setOption('falseText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "filterOperations", {
            get: function () {
                return this._getOption('filterOperations');
            },
            set: function (value) {
                this._setOption('filterOperations', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "format", {
            get: function () {
                return this._getOption('format');
            },
            set: function (value) {
                this._setOption('format', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "lookup", {
            get: function () {
                return this._getOption('lookup');
            },
            set: function (value) {
                this._setOption('lookup', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "trueText", {
            get: function () {
                return this._getOption('trueText');
            },
            set: function (value) {
                this._setOption('trueText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "allowCrossGroupCalculation", {
            get: function () {
                return this._getOption('allowCrossGroupCalculation');
            },
            set: function (value) {
                this._setOption('allowCrossGroupCalculation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "allowExpandAll", {
            get: function () {
                return this._getOption('allowExpandAll');
            },
            set: function (value) {
                this._setOption('allowExpandAll', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "allowFiltering", {
            get: function () {
                return this._getOption('allowFiltering');
            },
            set: function (value) {
                this._setOption('allowFiltering', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "allowSorting", {
            get: function () {
                return this._getOption('allowSorting');
            },
            set: function (value) {
                this._setOption('allowSorting', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "allowSortingBySummary", {
            get: function () {
                return this._getOption('allowSortingBySummary');
            },
            set: function (value) {
                this._setOption('allowSortingBySummary', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "area", {
            get: function () {
                return this._getOption('area');
            },
            set: function (value) {
                this._setOption('area', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "areaIndex", {
            get: function () {
                return this._getOption('areaIndex');
            },
            set: function (value) {
                this._setOption('areaIndex', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "calculateCustomSummary", {
            get: function () {
                return this._getOption('calculateCustomSummary');
            },
            set: function (value) {
                this._setOption('calculateCustomSummary', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "calculateSummaryValue", {
            get: function () {
                return this._getOption('calculateSummaryValue');
            },
            set: function (value) {
                this._setOption('calculateSummaryValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "displayFolder", {
            get: function () {
                return this._getOption('displayFolder');
            },
            set: function (value) {
                this._setOption('displayFolder', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "expanded", {
            get: function () {
                return this._getOption('expanded');
            },
            set: function (value) {
                this._setOption('expanded', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "filterType", {
            get: function () {
                return this._getOption('filterType');
            },
            set: function (value) {
                this._setOption('filterType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "filterValues", {
            get: function () {
                return this._getOption('filterValues');
            },
            set: function (value) {
                this._setOption('filterValues', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "groupIndex", {
            get: function () {
                return this._getOption('groupIndex');
            },
            set: function (value) {
                this._setOption('groupIndex', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "groupInterval", {
            get: function () {
                return this._getOption('groupInterval');
            },
            set: function (value) {
                this._setOption('groupInterval', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "groupName", {
            get: function () {
                return this._getOption('groupName');
            },
            set: function (value) {
                this._setOption('groupName', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "headerFilter", {
            get: function () {
                return this._getOption('headerFilter');
            },
            set: function (value) {
                this._setOption('headerFilter', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "isMeasure", {
            get: function () {
                return this._getOption('isMeasure');
            },
            set: function (value) {
                this._setOption('isMeasure', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "precision", {
            get: function () {
                return this._getOption('precision');
            },
            set: function (value) {
                this._setOption('precision', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "runningTotal", {
            get: function () {
                return this._getOption('runningTotal');
            },
            set: function (value) {
                this._setOption('runningTotal', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "selector", {
            get: function () {
                return this._getOption('selector');
            },
            set: function (value) {
                this._setOption('selector', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "showGrandTotals", {
            get: function () {
                return this._getOption('showGrandTotals');
            },
            set: function (value) {
                this._setOption('showGrandTotals', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "showTotals", {
            get: function () {
                return this._getOption('showTotals');
            },
            set: function (value) {
                this._setOption('showTotals', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "showValues", {
            get: function () {
                return this._getOption('showValues');
            },
            set: function (value) {
                this._setOption('showValues', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "sortBy", {
            get: function () {
                return this._getOption('sortBy');
            },
            set: function (value) {
                this._setOption('sortBy', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "sortBySummaryField", {
            get: function () {
                return this._getOption('sortBySummaryField');
            },
            set: function (value) {
                this._setOption('sortBySummaryField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "sortBySummaryPath", {
            get: function () {
                return this._getOption('sortBySummaryPath');
            },
            set: function (value) {
                this._setOption('sortBySummaryPath', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "sortingMethod", {
            get: function () {
                return this._getOption('sortingMethod');
            },
            set: function (value) {
                this._setOption('sortingMethod', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "sortOrder", {
            get: function () {
                return this._getOption('sortOrder');
            },
            set: function (value) {
                this._setOption('sortOrder', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "summaryDisplayMode", {
            get: function () {
                return this._getOption('summaryDisplayMode');
            },
            set: function (value) {
                this._setOption('summaryDisplayMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "summaryType", {
            get: function () {
                return this._getOption('summaryType');
            },
            set: function (value) {
                this._setOption('summaryType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiFilterBuilderField.prototype, "wordWrapEnabled", {
            get: function () {
                return this._getOption('wordWrapEnabled');
            },
            set: function (value) {
                this._setOption('wordWrapEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxiFilterBuilderField;
    }(core$1.CollectionNestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiFieldComponent = /** @class */ (function (_super) {
        __extends(DxiFieldComponent, _super);
        function DxiFieldComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiFieldComponent.prototype, "_optionPath", {
            get: function () {
                return 'fields';
            },
            enumerable: true,
            configurable: true
        });
        DxiFieldComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxiFieldComponent = __decorate([
            core.Component({
                selector: 'dxi-field',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'calculateFilterExpression',
                    'caption',
                    'customizeText',
                    'dataField',
                    'dataType',
                    'editorOptions',
                    'editorTemplate',
                    'falseText',
                    'filterOperations',
                    'format',
                    'lookup',
                    'name',
                    'trueText',
                    'allowCrossGroupCalculation',
                    'allowExpandAll',
                    'allowFiltering',
                    'allowSorting',
                    'allowSortingBySummary',
                    'area',
                    'areaIndex',
                    'calculateCustomSummary',
                    'calculateSummaryValue',
                    'displayFolder',
                    'expanded',
                    'filterType',
                    'filterValues',
                    'groupIndex',
                    'groupInterval',
                    'groupName',
                    'headerFilter',
                    'isMeasure',
                    'precision',
                    'runningTotal',
                    'selector',
                    'showGrandTotals',
                    'showTotals',
                    'showValues',
                    'sortBy',
                    'sortBySummaryField',
                    'sortBySummaryPath',
                    'sortingMethod',
                    'sortOrder',
                    'summaryDisplayMode',
                    'summaryType',
                    'visible',
                    'width',
                    'wordWrapEnabled'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiFieldComponent);
        return DxiFieldComponent;
    }(DxiFilterBuilderField));
    var DxiFieldModule = /** @class */ (function () {
        function DxiFieldModule() {
        }
        DxiFieldModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiFieldComponent
                ],
                exports: [
                    DxiFieldComponent
                ],
            })
        ], DxiFieldModule);
        return DxiFieldModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoDataSourceComponent = /** @class */ (function (_super) {
        __extends(DxoDataSourceComponent, _super);
        function DxoDataSourceComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            if ((console) && (console.warn)) {
                console.warn('The nested \'dxo-data-source\' component is deprecated in 17.2. ' +
                    'Use the \'dataSource\' option instead. ' +
                    'See:\nhttps://github.com/DevExpress/devextreme-angular/blob/master/CHANGELOG.md#17.2.3');
            }
            return _this;
        }
        Object.defineProperty(DxoDataSourceComponent.prototype, "_optionPath", {
            get: function () {
                return 'dataSource';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoDataSourceComponent.prototype, "fieldsChildren", {
            get: function () {
                return this._getOption('fields');
            },
            set: function (value) {
                this.setChildren('fields', value);
            },
            enumerable: true,
            configurable: true
        });
        DxoDataSourceComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiFieldComponent; }))
        ], DxoDataSourceComponent.prototype, "fieldsChildren", null);
        DxoDataSourceComponent = __decorate([
            core.Component({
                selector: 'dxo-data-source',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'fields',
                    'filter',
                    'onChanged',
                    'onFieldsPrepared',
                    'onLoadError',
                    'onLoadingChanged',
                    'remoteOperations',
                    'retrieveFields',
                    'store'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoDataSourceComponent);
        return DxoDataSourceComponent;
    }(DxoPivotGridDataSource));
    var DxoDataSourceModule = /** @class */ (function () {
        function DxoDataSourceModule() {
        }
        DxoDataSourceModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoDataSourceComponent
                ],
                exports: [
                    DxoDataSourceComponent
                ],
            })
        ], DxoDataSourceModule);
        return DxoDataSourceModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoDelayComponent = /** @class */ (function (_super) {
        __extends(DxoDelayComponent, _super);
        function DxoDelayComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoDelayComponent.prototype, "hide", {
            get: function () {
                return this._getOption('hide');
            },
            set: function (value) {
                this._setOption('hide', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoDelayComponent.prototype, "show", {
            get: function () {
                return this._getOption('show');
            },
            set: function (value) {
                this._setOption('show', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoDelayComponent.prototype, "_optionPath", {
            get: function () {
                return 'delay';
            },
            enumerable: true,
            configurable: true
        });
        DxoDelayComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoDelayComponent.prototype, "hide", null);
        __decorate([
            core.Input()
        ], DxoDelayComponent.prototype, "show", null);
        DxoDelayComponent = __decorate([
            core.Component({
                selector: 'dxo-delay',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoDelayComponent);
        return DxoDelayComponent;
    }(core$1.NestedOption));
    var DxoDelayModule = /** @class */ (function () {
        function DxoDelayModule() {
        }
        DxoDelayModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoDelayComponent
                ],
                exports: [
                    DxoDelayComponent
                ],
            })
        ], DxoDelayModule);
        return DxoDelayModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoDisplayFormatComponent = /** @class */ (function (_super) {
        __extends(DxoDisplayFormatComponent, _super);
        function DxoDisplayFormatComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoDisplayFormatComponent.prototype, "_optionPath", {
            get: function () {
                return 'displayFormat';
            },
            enumerable: true,
            configurable: true
        });
        DxoDisplayFormatComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoDisplayFormatComponent = __decorate([
            core.Component({
                selector: 'dxo-display-format',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'currency',
                    'formatter',
                    'parser',
                    'precision',
                    'type'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoDisplayFormatComponent);
        return DxoDisplayFormatComponent;
    }(DxoFormat));
    var DxoDisplayFormatModule = /** @class */ (function () {
        function DxoDisplayFormatModule() {
        }
        DxoDisplayFormatModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoDisplayFormatComponent
                ],
                exports: [
                    DxoDisplayFormatComponent
                ],
            })
        ], DxoDisplayFormatModule);
        return DxoDisplayFormatModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoDragBoxStyleComponent = /** @class */ (function (_super) {
        __extends(DxoDragBoxStyleComponent, _super);
        function DxoDragBoxStyleComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoDragBoxStyleComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoDragBoxStyleComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoDragBoxStyleComponent.prototype, "_optionPath", {
            get: function () {
                return 'dragBoxStyle';
            },
            enumerable: true,
            configurable: true
        });
        DxoDragBoxStyleComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoDragBoxStyleComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoDragBoxStyleComponent.prototype, "opacity", null);
        DxoDragBoxStyleComponent = __decorate([
            core.Component({
                selector: 'dxo-drag-box-style',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoDragBoxStyleComponent);
        return DxoDragBoxStyleComponent;
    }(core$1.NestedOption));
    var DxoDragBoxStyleModule = /** @class */ (function () {
        function DxoDragBoxStyleModule() {
        }
        DxoDragBoxStyleModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoDragBoxStyleComponent
                ],
                exports: [
                    DxoDragBoxStyleComponent
                ],
            })
        ], DxoDragBoxStyleModule);
        return DxoDragBoxStyleModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoPopupOptions = /** @class */ (function (_super) {
        __extends(DxoPopupOptions, _super);
        function DxoPopupOptions() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoPopupOptions.prototype, "accessKey", {
            get: function () {
                return this._getOption('accessKey');
            },
            set: function (value) {
                this._setOption('accessKey', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "animation", {
            get: function () {
                return this._getOption('animation');
            },
            set: function (value) {
                this._setOption('animation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "closeOnBackButton", {
            get: function () {
                return this._getOption('closeOnBackButton');
            },
            set: function (value) {
                this._setOption('closeOnBackButton', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "closeOnOutsideClick", {
            get: function () {
                return this._getOption('closeOnOutsideClick');
            },
            set: function (value) {
                this._setOption('closeOnOutsideClick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "container", {
            get: function () {
                return this._getOption('container');
            },
            set: function (value) {
                this._setOption('container', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "contentTemplate", {
            get: function () {
                return this._getOption('contentTemplate');
            },
            set: function (value) {
                this._setOption('contentTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "deferRendering", {
            get: function () {
                return this._getOption('deferRendering');
            },
            set: function (value) {
                this._setOption('deferRendering', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "disabled", {
            get: function () {
                return this._getOption('disabled');
            },
            set: function (value) {
                this._setOption('disabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "dragEnabled", {
            get: function () {
                return this._getOption('dragEnabled');
            },
            set: function (value) {
                this._setOption('dragEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "elementAttr", {
            get: function () {
                return this._getOption('elementAttr');
            },
            set: function (value) {
                this._setOption('elementAttr', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "focusStateEnabled", {
            get: function () {
                return this._getOption('focusStateEnabled');
            },
            set: function (value) {
                this._setOption('focusStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "fullScreen", {
            get: function () {
                return this._getOption('fullScreen');
            },
            set: function (value) {
                this._setOption('fullScreen', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "height", {
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "hint", {
            get: function () {
                return this._getOption('hint');
            },
            set: function (value) {
                this._setOption('hint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "hoverStateEnabled", {
            get: function () {
                return this._getOption('hoverStateEnabled');
            },
            set: function (value) {
                this._setOption('hoverStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "maxHeight", {
            get: function () {
                return this._getOption('maxHeight');
            },
            set: function (value) {
                this._setOption('maxHeight', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "maxWidth", {
            get: function () {
                return this._getOption('maxWidth');
            },
            set: function (value) {
                this._setOption('maxWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "minHeight", {
            get: function () {
                return this._getOption('minHeight');
            },
            set: function (value) {
                this._setOption('minHeight', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "minWidth", {
            get: function () {
                return this._getOption('minWidth');
            },
            set: function (value) {
                this._setOption('minWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "onContentReady", {
            get: function () {
                return this._getOption('onContentReady');
            },
            set: function (value) {
                this._setOption('onContentReady', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "onDisposing", {
            get: function () {
                return this._getOption('onDisposing');
            },
            set: function (value) {
                this._setOption('onDisposing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "onHidden", {
            get: function () {
                return this._getOption('onHidden');
            },
            set: function (value) {
                this._setOption('onHidden', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "onHiding", {
            get: function () {
                return this._getOption('onHiding');
            },
            set: function (value) {
                this._setOption('onHiding', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "onInitialized", {
            get: function () {
                return this._getOption('onInitialized');
            },
            set: function (value) {
                this._setOption('onInitialized', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "onOptionChanged", {
            get: function () {
                return this._getOption('onOptionChanged');
            },
            set: function (value) {
                this._setOption('onOptionChanged', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "onResize", {
            get: function () {
                return this._getOption('onResize');
            },
            set: function (value) {
                this._setOption('onResize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "onResizeEnd", {
            get: function () {
                return this._getOption('onResizeEnd');
            },
            set: function (value) {
                this._setOption('onResizeEnd', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "onResizeStart", {
            get: function () {
                return this._getOption('onResizeStart');
            },
            set: function (value) {
                this._setOption('onResizeStart', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "onShowing", {
            get: function () {
                return this._getOption('onShowing');
            },
            set: function (value) {
                this._setOption('onShowing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "onShown", {
            get: function () {
                return this._getOption('onShown');
            },
            set: function (value) {
                this._setOption('onShown', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "onTitleRendered", {
            get: function () {
                return this._getOption('onTitleRendered');
            },
            set: function (value) {
                this._setOption('onTitleRendered', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "position", {
            get: function () {
                return this._getOption('position');
            },
            set: function (value) {
                this._setOption('position', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "resizeEnabled", {
            get: function () {
                return this._getOption('resizeEnabled');
            },
            set: function (value) {
                this._setOption('resizeEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "rtlEnabled", {
            get: function () {
                return this._getOption('rtlEnabled');
            },
            set: function (value) {
                this._setOption('rtlEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "shading", {
            get: function () {
                return this._getOption('shading');
            },
            set: function (value) {
                this._setOption('shading', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "shadingColor", {
            get: function () {
                return this._getOption('shadingColor');
            },
            set: function (value) {
                this._setOption('shadingColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "showCloseButton", {
            get: function () {
                return this._getOption('showCloseButton');
            },
            set: function (value) {
                this._setOption('showCloseButton', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "showTitle", {
            get: function () {
                return this._getOption('showTitle');
            },
            set: function (value) {
                this._setOption('showTitle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "tabIndex", {
            get: function () {
                return this._getOption('tabIndex');
            },
            set: function (value) {
                this._setOption('tabIndex', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "title", {
            get: function () {
                return this._getOption('title');
            },
            set: function (value) {
                this._setOption('title', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "titleTemplate", {
            get: function () {
                return this._getOption('titleTemplate');
            },
            set: function (value) {
                this._setOption('titleTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "toolbarItems", {
            get: function () {
                return this._getOption('toolbarItems');
            },
            set: function (value) {
                this._setOption('toolbarItems', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupOptions.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoPopupOptions;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiToolbarItemComponent = /** @class */ (function (_super) {
        __extends(DxiToolbarItemComponent, _super);
        function DxiToolbarItemComponent(parentOptionHost, optionHost, renderer, document, templateHost, element) {
            var _this = _super.call(this) || this;
            _this.renderer = renderer;
            _this.document = document;
            _this.element = element;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            templateHost.setHost(_this);
            return _this;
        }
        Object.defineProperty(DxiToolbarItemComponent.prototype, "disabled", {
            get: function () {
                return this._getOption('disabled');
            },
            set: function (value) {
                this._setOption('disabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiToolbarItemComponent.prototype, "html", {
            get: function () {
                return this._getOption('html');
            },
            set: function (value) {
                this._setOption('html', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiToolbarItemComponent.prototype, "location", {
            get: function () {
                return this._getOption('location');
            },
            set: function (value) {
                this._setOption('location', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiToolbarItemComponent.prototype, "options", {
            get: function () {
                return this._getOption('options');
            },
            set: function (value) {
                this._setOption('options', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiToolbarItemComponent.prototype, "template", {
            get: function () {
                return this._getOption('template');
            },
            set: function (value) {
                this._setOption('template', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiToolbarItemComponent.prototype, "text", {
            get: function () {
                return this._getOption('text');
            },
            set: function (value) {
                this._setOption('text', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiToolbarItemComponent.prototype, "toolbar", {
            get: function () {
                return this._getOption('toolbar');
            },
            set: function (value) {
                this._setOption('toolbar', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiToolbarItemComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiToolbarItemComponent.prototype, "widget", {
            get: function () {
                return this._getOption('widget');
            },
            set: function (value) {
                this._setOption('widget', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiToolbarItemComponent.prototype, "_optionPath", {
            get: function () {
                return 'toolbarItems';
            },
            enumerable: true,
            configurable: true
        });
        DxiToolbarItemComponent.prototype.setTemplate = function (template) {
            this.template = template;
        };
        DxiToolbarItemComponent.prototype.ngAfterViewInit = function () {
            core$1.extractTemplate(this, this.element, this.renderer, this.document);
        };
        DxiToolbarItemComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] },
            { type: core.Renderer2 },
            { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] },
            { type: core$1.DxTemplateHost, decorators: [{ type: core.Host }] },
            { type: core.ElementRef }
        ]; };
        __decorate([
            core.Input()
        ], DxiToolbarItemComponent.prototype, "disabled", null);
        __decorate([
            core.Input()
        ], DxiToolbarItemComponent.prototype, "html", null);
        __decorate([
            core.Input()
        ], DxiToolbarItemComponent.prototype, "location", null);
        __decorate([
            core.Input()
        ], DxiToolbarItemComponent.prototype, "options", null);
        __decorate([
            core.Input()
        ], DxiToolbarItemComponent.prototype, "template", null);
        __decorate([
            core.Input()
        ], DxiToolbarItemComponent.prototype, "text", null);
        __decorate([
            core.Input()
        ], DxiToolbarItemComponent.prototype, "toolbar", null);
        __decorate([
            core.Input()
        ], DxiToolbarItemComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxiToolbarItemComponent.prototype, "widget", null);
        DxiToolbarItemComponent = __decorate([
            core.Component({
                selector: 'dxi-toolbar-item',
                template: '<ng-content></ng-content>',
                providers: [core$1.NestedOptionHost, core$1.DxTemplateHost],
                styles: [':host { display: block; }']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host()),
            __param(3, core.Inject(common.DOCUMENT)),
            __param(4, core.Host())
        ], DxiToolbarItemComponent);
        return DxiToolbarItemComponent;
    }(core$1.CollectionNestedOption));
    var DxiToolbarItemModule = /** @class */ (function () {
        function DxiToolbarItemModule() {
        }
        DxiToolbarItemModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiToolbarItemComponent
                ],
                exports: [
                    DxiToolbarItemComponent
                ],
            })
        ], DxiToolbarItemModule);
        return DxiToolbarItemModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoDropDownOptionsComponent = /** @class */ (function (_super) {
        __extends(DxoDropDownOptionsComponent, _super);
        function DxoDropDownOptionsComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            _this._createEventEmitters([
                { emit: 'heightChange' },
                { emit: 'positionChange' },
                { emit: 'visibleChange' },
                { emit: 'widthChange' }
            ]);
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoDropDownOptionsComponent.prototype, "_optionPath", {
            get: function () {
                return 'dropDownOptions';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoDropDownOptionsComponent.prototype, "toolbarItemsChildren", {
            get: function () {
                return this._getOption('toolbarItems');
            },
            set: function (value) {
                this.setChildren('toolbarItems', value);
            },
            enumerable: true,
            configurable: true
        });
        DxoDropDownOptionsComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Output()
        ], DxoDropDownOptionsComponent.prototype, "heightChange", void 0);
        __decorate([
            core.Output()
        ], DxoDropDownOptionsComponent.prototype, "positionChange", void 0);
        __decorate([
            core.Output()
        ], DxoDropDownOptionsComponent.prototype, "visibleChange", void 0);
        __decorate([
            core.Output()
        ], DxoDropDownOptionsComponent.prototype, "widthChange", void 0);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiToolbarItemComponent; }))
        ], DxoDropDownOptionsComponent.prototype, "toolbarItemsChildren", null);
        DxoDropDownOptionsComponent = __decorate([
            core.Component({
                selector: 'dxo-drop-down-options',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'accessKey',
                    'animation',
                    'closeOnBackButton',
                    'closeOnOutsideClick',
                    'container',
                    'contentTemplate',
                    'deferRendering',
                    'disabled',
                    'dragEnabled',
                    'elementAttr',
                    'focusStateEnabled',
                    'fullScreen',
                    'height',
                    'hint',
                    'hoverStateEnabled',
                    'maxHeight',
                    'maxWidth',
                    'minHeight',
                    'minWidth',
                    'onContentReady',
                    'onDisposing',
                    'onHidden',
                    'onHiding',
                    'onInitialized',
                    'onOptionChanged',
                    'onResize',
                    'onResizeEnd',
                    'onResizeStart',
                    'onShowing',
                    'onShown',
                    'onTitleRendered',
                    'position',
                    'resizeEnabled',
                    'rtlEnabled',
                    'shading',
                    'shadingColor',
                    'showCloseButton',
                    'showTitle',
                    'tabIndex',
                    'title',
                    'titleTemplate',
                    'toolbarItems',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoDropDownOptionsComponent);
        return DxoDropDownOptionsComponent;
    }(DxoPopupOptions));
    var DxoDropDownOptionsModule = /** @class */ (function () {
        function DxoDropDownOptionsModule() {
        }
        DxoDropDownOptionsModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoDropDownOptionsComponent
                ],
                exports: [
                    DxoDropDownOptionsComponent
                ],
            })
        ], DxoDropDownOptionsModule);
        return DxoDropDownOptionsModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoEditingComponent = /** @class */ (function (_super) {
        __extends(DxoEditingComponent, _super);
        function DxoEditingComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoEditingComponent.prototype, "allowAdding", {
            get: function () {
                return this._getOption('allowAdding');
            },
            set: function (value) {
                this._setOption('allowAdding', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoEditingComponent.prototype, "allowDeleting", {
            get: function () {
                return this._getOption('allowDeleting');
            },
            set: function (value) {
                this._setOption('allowDeleting', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoEditingComponent.prototype, "allowUpdating", {
            get: function () {
                return this._getOption('allowUpdating');
            },
            set: function (value) {
                this._setOption('allowUpdating', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoEditingComponent.prototype, "form", {
            get: function () {
                return this._getOption('form');
            },
            set: function (value) {
                this._setOption('form', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoEditingComponent.prototype, "mode", {
            get: function () {
                return this._getOption('mode');
            },
            set: function (value) {
                this._setOption('mode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoEditingComponent.prototype, "popup", {
            get: function () {
                return this._getOption('popup');
            },
            set: function (value) {
                this._setOption('popup', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoEditingComponent.prototype, "refreshMode", {
            get: function () {
                return this._getOption('refreshMode');
            },
            set: function (value) {
                this._setOption('refreshMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoEditingComponent.prototype, "selectTextOnEditStart", {
            get: function () {
                return this._getOption('selectTextOnEditStart');
            },
            set: function (value) {
                this._setOption('selectTextOnEditStart', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoEditingComponent.prototype, "startEditAction", {
            get: function () {
                return this._getOption('startEditAction');
            },
            set: function (value) {
                this._setOption('startEditAction', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoEditingComponent.prototype, "texts", {
            get: function () {
                return this._getOption('texts');
            },
            set: function (value) {
                this._setOption('texts', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoEditingComponent.prototype, "useIcons", {
            get: function () {
                return this._getOption('useIcons');
            },
            set: function (value) {
                this._setOption('useIcons', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoEditingComponent.prototype, "allowDragging", {
            get: function () {
                return this._getOption('allowDragging');
            },
            set: function (value) {
                this._setOption('allowDragging', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoEditingComponent.prototype, "allowResizing", {
            get: function () {
                return this._getOption('allowResizing');
            },
            set: function (value) {
                this._setOption('allowResizing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoEditingComponent.prototype, "_optionPath", {
            get: function () {
                return 'editing';
            },
            enumerable: true,
            configurable: true
        });
        DxoEditingComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoEditingComponent.prototype, "allowAdding", null);
        __decorate([
            core.Input()
        ], DxoEditingComponent.prototype, "allowDeleting", null);
        __decorate([
            core.Input()
        ], DxoEditingComponent.prototype, "allowUpdating", null);
        __decorate([
            core.Input()
        ], DxoEditingComponent.prototype, "form", null);
        __decorate([
            core.Input()
        ], DxoEditingComponent.prototype, "mode", null);
        __decorate([
            core.Input()
        ], DxoEditingComponent.prototype, "popup", null);
        __decorate([
            core.Input()
        ], DxoEditingComponent.prototype, "refreshMode", null);
        __decorate([
            core.Input()
        ], DxoEditingComponent.prototype, "selectTextOnEditStart", null);
        __decorate([
            core.Input()
        ], DxoEditingComponent.prototype, "startEditAction", null);
        __decorate([
            core.Input()
        ], DxoEditingComponent.prototype, "texts", null);
        __decorate([
            core.Input()
        ], DxoEditingComponent.prototype, "useIcons", null);
        __decorate([
            core.Input()
        ], DxoEditingComponent.prototype, "allowDragging", null);
        __decorate([
            core.Input()
        ], DxoEditingComponent.prototype, "allowResizing", null);
        DxoEditingComponent = __decorate([
            core.Component({
                selector: 'dxo-editing',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoEditingComponent);
        return DxoEditingComponent;
    }(core$1.NestedOption));
    var DxoEditingModule = /** @class */ (function () {
        function DxoEditingModule() {
        }
        DxoEditingModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoEditingComponent
                ],
                exports: [
                    DxoEditingComponent
                ],
            })
        ], DxoEditingModule);
        return DxoEditingModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoExportComponent = /** @class */ (function (_super) {
        __extends(DxoExportComponent, _super);
        function DxoExportComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoExportComponent.prototype, "backgroundColor", {
            get: function () {
                return this._getOption('backgroundColor');
            },
            set: function (value) {
                this._setOption('backgroundColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoExportComponent.prototype, "enabled", {
            get: function () {
                return this._getOption('enabled');
            },
            set: function (value) {
                this._setOption('enabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoExportComponent.prototype, "fileName", {
            get: function () {
                return this._getOption('fileName');
            },
            set: function (value) {
                this._setOption('fileName', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoExportComponent.prototype, "formats", {
            get: function () {
                return this._getOption('formats');
            },
            set: function (value) {
                this._setOption('formats', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoExportComponent.prototype, "margin", {
            get: function () {
                return this._getOption('margin');
            },
            set: function (value) {
                this._setOption('margin', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoExportComponent.prototype, "printingEnabled", {
            get: function () {
                return this._getOption('printingEnabled');
            },
            set: function (value) {
                this._setOption('printingEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoExportComponent.prototype, "proxyUrl", {
            get: function () {
                return this._getOption('proxyUrl');
            },
            set: function (value) {
                this._setOption('proxyUrl', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoExportComponent.prototype, "allowExportSelectedData", {
            get: function () {
                return this._getOption('allowExportSelectedData');
            },
            set: function (value) {
                this._setOption('allowExportSelectedData', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoExportComponent.prototype, "customizeExcelCell", {
            get: function () {
                return this._getOption('customizeExcelCell');
            },
            set: function (value) {
                this._setOption('customizeExcelCell', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoExportComponent.prototype, "excelFilterEnabled", {
            get: function () {
                return this._getOption('excelFilterEnabled');
            },
            set: function (value) {
                this._setOption('excelFilterEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoExportComponent.prototype, "excelWrapTextEnabled", {
            get: function () {
                return this._getOption('excelWrapTextEnabled');
            },
            set: function (value) {
                this._setOption('excelWrapTextEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoExportComponent.prototype, "ignoreExcelErrors", {
            get: function () {
                return this._getOption('ignoreExcelErrors');
            },
            set: function (value) {
                this._setOption('ignoreExcelErrors', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoExportComponent.prototype, "texts", {
            get: function () {
                return this._getOption('texts');
            },
            set: function (value) {
                this._setOption('texts', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoExportComponent.prototype, "_optionPath", {
            get: function () {
                return 'export';
            },
            enumerable: true,
            configurable: true
        });
        DxoExportComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoExportComponent.prototype, "backgroundColor", null);
        __decorate([
            core.Input()
        ], DxoExportComponent.prototype, "enabled", null);
        __decorate([
            core.Input()
        ], DxoExportComponent.prototype, "fileName", null);
        __decorate([
            core.Input()
        ], DxoExportComponent.prototype, "formats", null);
        __decorate([
            core.Input()
        ], DxoExportComponent.prototype, "margin", null);
        __decorate([
            core.Input()
        ], DxoExportComponent.prototype, "printingEnabled", null);
        __decorate([
            core.Input()
        ], DxoExportComponent.prototype, "proxyUrl", null);
        __decorate([
            core.Input()
        ], DxoExportComponent.prototype, "allowExportSelectedData", null);
        __decorate([
            core.Input()
        ], DxoExportComponent.prototype, "customizeExcelCell", null);
        __decorate([
            core.Input()
        ], DxoExportComponent.prototype, "excelFilterEnabled", null);
        __decorate([
            core.Input()
        ], DxoExportComponent.prototype, "excelWrapTextEnabled", null);
        __decorate([
            core.Input()
        ], DxoExportComponent.prototype, "ignoreExcelErrors", null);
        __decorate([
            core.Input()
        ], DxoExportComponent.prototype, "texts", null);
        DxoExportComponent = __decorate([
            core.Component({
                selector: 'dxo-export',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoExportComponent);
        return DxoExportComponent;
    }(core$1.NestedOption));
    var DxoExportModule = /** @class */ (function () {
        function DxoExportModule() {
        }
        DxoExportModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoExportComponent
                ],
                exports: [
                    DxoExportComponent
                ],
            })
        ], DxoExportModule);
        return DxoExportModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFieldChooserComponent = /** @class */ (function (_super) {
        __extends(DxoFieldChooserComponent, _super);
        function DxoFieldChooserComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoFieldChooserComponent.prototype, "allowSearch", {
            get: function () {
                return this._getOption('allowSearch');
            },
            set: function (value) {
                this._setOption('allowSearch', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFieldChooserComponent.prototype, "applyChangesMode", {
            get: function () {
                return this._getOption('applyChangesMode');
            },
            set: function (value) {
                this._setOption('applyChangesMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFieldChooserComponent.prototype, "enabled", {
            get: function () {
                return this._getOption('enabled');
            },
            set: function (value) {
                this._setOption('enabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFieldChooserComponent.prototype, "height", {
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFieldChooserComponent.prototype, "layout", {
            get: function () {
                return this._getOption('layout');
            },
            set: function (value) {
                this._setOption('layout', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFieldChooserComponent.prototype, "searchTimeout", {
            get: function () {
                return this._getOption('searchTimeout');
            },
            set: function (value) {
                this._setOption('searchTimeout', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFieldChooserComponent.prototype, "texts", {
            get: function () {
                return this._getOption('texts');
            },
            set: function (value) {
                this._setOption('texts', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFieldChooserComponent.prototype, "title", {
            get: function () {
                return this._getOption('title');
            },
            set: function (value) {
                this._setOption('title', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFieldChooserComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFieldChooserComponent.prototype, "_optionPath", {
            get: function () {
                return 'fieldChooser';
            },
            enumerable: true,
            configurable: true
        });
        DxoFieldChooserComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoFieldChooserComponent.prototype, "allowSearch", null);
        __decorate([
            core.Input()
        ], DxoFieldChooserComponent.prototype, "applyChangesMode", null);
        __decorate([
            core.Input()
        ], DxoFieldChooserComponent.prototype, "enabled", null);
        __decorate([
            core.Input()
        ], DxoFieldChooserComponent.prototype, "height", null);
        __decorate([
            core.Input()
        ], DxoFieldChooserComponent.prototype, "layout", null);
        __decorate([
            core.Input()
        ], DxoFieldChooserComponent.prototype, "searchTimeout", null);
        __decorate([
            core.Input()
        ], DxoFieldChooserComponent.prototype, "texts", null);
        __decorate([
            core.Input()
        ], DxoFieldChooserComponent.prototype, "title", null);
        __decorate([
            core.Input()
        ], DxoFieldChooserComponent.prototype, "width", null);
        DxoFieldChooserComponent = __decorate([
            core.Component({
                selector: 'dxo-field-chooser',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoFieldChooserComponent);
        return DxoFieldChooserComponent;
    }(core$1.NestedOption));
    var DxoFieldChooserModule = /** @class */ (function () {
        function DxoFieldChooserModule() {
        }
        DxoFieldChooserModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoFieldChooserComponent
                ],
                exports: [
                    DxoFieldChooserComponent
                ],
            })
        ], DxoFieldChooserModule);
        return DxoFieldChooserModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFieldPanelComponent = /** @class */ (function (_super) {
        __extends(DxoFieldPanelComponent, _super);
        function DxoFieldPanelComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoFieldPanelComponent.prototype, "allowFieldDragging", {
            get: function () {
                return this._getOption('allowFieldDragging');
            },
            set: function (value) {
                this._setOption('allowFieldDragging', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFieldPanelComponent.prototype, "showColumnFields", {
            get: function () {
                return this._getOption('showColumnFields');
            },
            set: function (value) {
                this._setOption('showColumnFields', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFieldPanelComponent.prototype, "showDataFields", {
            get: function () {
                return this._getOption('showDataFields');
            },
            set: function (value) {
                this._setOption('showDataFields', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFieldPanelComponent.prototype, "showFilterFields", {
            get: function () {
                return this._getOption('showFilterFields');
            },
            set: function (value) {
                this._setOption('showFilterFields', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFieldPanelComponent.prototype, "showRowFields", {
            get: function () {
                return this._getOption('showRowFields');
            },
            set: function (value) {
                this._setOption('showRowFields', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFieldPanelComponent.prototype, "texts", {
            get: function () {
                return this._getOption('texts');
            },
            set: function (value) {
                this._setOption('texts', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFieldPanelComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFieldPanelComponent.prototype, "_optionPath", {
            get: function () {
                return 'fieldPanel';
            },
            enumerable: true,
            configurable: true
        });
        DxoFieldPanelComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoFieldPanelComponent.prototype, "allowFieldDragging", null);
        __decorate([
            core.Input()
        ], DxoFieldPanelComponent.prototype, "showColumnFields", null);
        __decorate([
            core.Input()
        ], DxoFieldPanelComponent.prototype, "showDataFields", null);
        __decorate([
            core.Input()
        ], DxoFieldPanelComponent.prototype, "showFilterFields", null);
        __decorate([
            core.Input()
        ], DxoFieldPanelComponent.prototype, "showRowFields", null);
        __decorate([
            core.Input()
        ], DxoFieldPanelComponent.prototype, "texts", null);
        __decorate([
            core.Input()
        ], DxoFieldPanelComponent.prototype, "visible", null);
        DxoFieldPanelComponent = __decorate([
            core.Component({
                selector: 'dxo-field-panel',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoFieldPanelComponent);
        return DxoFieldPanelComponent;
    }(core$1.NestedOption));
    var DxoFieldPanelModule = /** @class */ (function () {
        function DxoFieldPanelModule() {
        }
        DxoFieldPanelModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoFieldPanelComponent
                ],
                exports: [
                    DxoFieldPanelComponent
                ],
            })
        ], DxoFieldPanelModule);
        return DxoFieldPanelModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFilterBuilderPopupComponent = /** @class */ (function (_super) {
        __extends(DxoFilterBuilderPopupComponent, _super);
        function DxoFilterBuilderPopupComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            _this._createEventEmitters([
                { emit: 'heightChange' },
                { emit: 'positionChange' },
                { emit: 'visibleChange' },
                { emit: 'widthChange' }
            ]);
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoFilterBuilderPopupComponent.prototype, "_optionPath", {
            get: function () {
                return 'filterBuilderPopup';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderPopupComponent.prototype, "toolbarItemsChildren", {
            get: function () {
                return this._getOption('toolbarItems');
            },
            set: function (value) {
                this.setChildren('toolbarItems', value);
            },
            enumerable: true,
            configurable: true
        });
        DxoFilterBuilderPopupComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Output()
        ], DxoFilterBuilderPopupComponent.prototype, "heightChange", void 0);
        __decorate([
            core.Output()
        ], DxoFilterBuilderPopupComponent.prototype, "positionChange", void 0);
        __decorate([
            core.Output()
        ], DxoFilterBuilderPopupComponent.prototype, "visibleChange", void 0);
        __decorate([
            core.Output()
        ], DxoFilterBuilderPopupComponent.prototype, "widthChange", void 0);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiToolbarItemComponent; }))
        ], DxoFilterBuilderPopupComponent.prototype, "toolbarItemsChildren", null);
        DxoFilterBuilderPopupComponent = __decorate([
            core.Component({
                selector: 'dxo-filter-builder-popup',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'accessKey',
                    'animation',
                    'closeOnBackButton',
                    'closeOnOutsideClick',
                    'container',
                    'contentTemplate',
                    'deferRendering',
                    'disabled',
                    'dragEnabled',
                    'elementAttr',
                    'focusStateEnabled',
                    'fullScreen',
                    'height',
                    'hint',
                    'hoverStateEnabled',
                    'maxHeight',
                    'maxWidth',
                    'minHeight',
                    'minWidth',
                    'onContentReady',
                    'onDisposing',
                    'onHidden',
                    'onHiding',
                    'onInitialized',
                    'onOptionChanged',
                    'onResize',
                    'onResizeEnd',
                    'onResizeStart',
                    'onShowing',
                    'onShown',
                    'onTitleRendered',
                    'position',
                    'resizeEnabled',
                    'rtlEnabled',
                    'shading',
                    'shadingColor',
                    'showCloseButton',
                    'showTitle',
                    'tabIndex',
                    'title',
                    'titleTemplate',
                    'toolbarItems',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoFilterBuilderPopupComponent);
        return DxoFilterBuilderPopupComponent;
    }(DxoPopupOptions));
    var DxoFilterBuilderPopupModule = /** @class */ (function () {
        function DxoFilterBuilderPopupModule() {
        }
        DxoFilterBuilderPopupModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoFilterBuilderPopupComponent
                ],
                exports: [
                    DxoFilterBuilderPopupComponent
                ],
            })
        ], DxoFilterBuilderPopupModule);
        return DxoFilterBuilderPopupModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFilterBuilderOptions = /** @class */ (function (_super) {
        __extends(DxoFilterBuilderOptions, _super);
        function DxoFilterBuilderOptions() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "accessKey", {
            get: function () {
                return this._getOption('accessKey');
            },
            set: function (value) {
                this._setOption('accessKey', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "activeStateEnabled", {
            get: function () {
                return this._getOption('activeStateEnabled');
            },
            set: function (value) {
                this._setOption('activeStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "allowHierarchicalFields", {
            get: function () {
                return this._getOption('allowHierarchicalFields');
            },
            set: function (value) {
                this._setOption('allowHierarchicalFields', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "customOperations", {
            get: function () {
                return this._getOption('customOperations');
            },
            set: function (value) {
                this._setOption('customOperations', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "disabled", {
            get: function () {
                return this._getOption('disabled');
            },
            set: function (value) {
                this._setOption('disabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "elementAttr", {
            get: function () {
                return this._getOption('elementAttr');
            },
            set: function (value) {
                this._setOption('elementAttr', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "fields", {
            get: function () {
                return this._getOption('fields');
            },
            set: function (value) {
                this._setOption('fields', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "filterOperationDescriptions", {
            get: function () {
                return this._getOption('filterOperationDescriptions');
            },
            set: function (value) {
                this._setOption('filterOperationDescriptions', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "focusStateEnabled", {
            get: function () {
                return this._getOption('focusStateEnabled');
            },
            set: function (value) {
                this._setOption('focusStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "groupOperationDescriptions", {
            get: function () {
                return this._getOption('groupOperationDescriptions');
            },
            set: function (value) {
                this._setOption('groupOperationDescriptions', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "groupOperations", {
            get: function () {
                return this._getOption('groupOperations');
            },
            set: function (value) {
                this._setOption('groupOperations', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "height", {
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "hint", {
            get: function () {
                return this._getOption('hint');
            },
            set: function (value) {
                this._setOption('hint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "hoverStateEnabled", {
            get: function () {
                return this._getOption('hoverStateEnabled');
            },
            set: function (value) {
                this._setOption('hoverStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "maxGroupLevel", {
            get: function () {
                return this._getOption('maxGroupLevel');
            },
            set: function (value) {
                this._setOption('maxGroupLevel', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "onContentReady", {
            get: function () {
                return this._getOption('onContentReady');
            },
            set: function (value) {
                this._setOption('onContentReady', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "onDisposing", {
            get: function () {
                return this._getOption('onDisposing');
            },
            set: function (value) {
                this._setOption('onDisposing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "onEditorPrepared", {
            get: function () {
                return this._getOption('onEditorPrepared');
            },
            set: function (value) {
                this._setOption('onEditorPrepared', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "onEditorPreparing", {
            get: function () {
                return this._getOption('onEditorPreparing');
            },
            set: function (value) {
                this._setOption('onEditorPreparing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "onInitialized", {
            get: function () {
                return this._getOption('onInitialized');
            },
            set: function (value) {
                this._setOption('onInitialized', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "onOptionChanged", {
            get: function () {
                return this._getOption('onOptionChanged');
            },
            set: function (value) {
                this._setOption('onOptionChanged', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "onValueChanged", {
            get: function () {
                return this._getOption('onValueChanged');
            },
            set: function (value) {
                this._setOption('onValueChanged', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "rtlEnabled", {
            get: function () {
                return this._getOption('rtlEnabled');
            },
            set: function (value) {
                this._setOption('rtlEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "tabIndex", {
            get: function () {
                return this._getOption('tabIndex');
            },
            set: function (value) {
                this._setOption('tabIndex', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "value", {
            get: function () {
                return this._getOption('value');
            },
            set: function (value) {
                this._setOption('value', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderOptions.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoFilterBuilderOptions;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFilterBuilderComponent = /** @class */ (function (_super) {
        __extends(DxoFilterBuilderComponent, _super);
        function DxoFilterBuilderComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            _this._createEventEmitters([
                { emit: 'valueChange' }
            ]);
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoFilterBuilderComponent.prototype, "_optionPath", {
            get: function () {
                return 'filterBuilder';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderComponent.prototype, "customOperationsChildren", {
            get: function () {
                return this._getOption('customOperations');
            },
            set: function (value) {
                this.setChildren('customOperations', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterBuilderComponent.prototype, "fieldsChildren", {
            get: function () {
                return this._getOption('fields');
            },
            set: function (value) {
                this.setChildren('fields', value);
            },
            enumerable: true,
            configurable: true
        });
        DxoFilterBuilderComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Output()
        ], DxoFilterBuilderComponent.prototype, "valueChange", void 0);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiCustomOperationComponent; }))
        ], DxoFilterBuilderComponent.prototype, "customOperationsChildren", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiFieldComponent; }))
        ], DxoFilterBuilderComponent.prototype, "fieldsChildren", null);
        DxoFilterBuilderComponent = __decorate([
            core.Component({
                selector: 'dxo-filter-builder',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'accessKey',
                    'activeStateEnabled',
                    'allowHierarchicalFields',
                    'customOperations',
                    'disabled',
                    'elementAttr',
                    'fields',
                    'filterOperationDescriptions',
                    'focusStateEnabled',
                    'groupOperationDescriptions',
                    'groupOperations',
                    'height',
                    'hint',
                    'hoverStateEnabled',
                    'maxGroupLevel',
                    'onContentReady',
                    'onDisposing',
                    'onEditorPrepared',
                    'onEditorPreparing',
                    'onInitialized',
                    'onOptionChanged',
                    'onValueChanged',
                    'rtlEnabled',
                    'tabIndex',
                    'value',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoFilterBuilderComponent);
        return DxoFilterBuilderComponent;
    }(DxoFilterBuilderOptions));
    var DxoFilterBuilderModule = /** @class */ (function () {
        function DxoFilterBuilderModule() {
        }
        DxoFilterBuilderModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoFilterBuilderComponent
                ],
                exports: [
                    DxoFilterBuilderComponent
                ],
            })
        ], DxoFilterBuilderModule);
        return DxoFilterBuilderModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFilterOperationDescriptionsComponent = /** @class */ (function (_super) {
        __extends(DxoFilterOperationDescriptionsComponent, _super);
        function DxoFilterOperationDescriptionsComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "between", {
            get: function () {
                return this._getOption('between');
            },
            set: function (value) {
                this._setOption('between', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "contains", {
            get: function () {
                return this._getOption('contains');
            },
            set: function (value) {
                this._setOption('contains', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "endsWith", {
            get: function () {
                return this._getOption('endsWith');
            },
            set: function (value) {
                this._setOption('endsWith', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "equal", {
            get: function () {
                return this._getOption('equal');
            },
            set: function (value) {
                this._setOption('equal', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "greaterThan", {
            get: function () {
                return this._getOption('greaterThan');
            },
            set: function (value) {
                this._setOption('greaterThan', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "greaterThanOrEqual", {
            get: function () {
                return this._getOption('greaterThanOrEqual');
            },
            set: function (value) {
                this._setOption('greaterThanOrEqual', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "isBlank", {
            get: function () {
                return this._getOption('isBlank');
            },
            set: function (value) {
                this._setOption('isBlank', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "isNotBlank", {
            get: function () {
                return this._getOption('isNotBlank');
            },
            set: function (value) {
                this._setOption('isNotBlank', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "lessThan", {
            get: function () {
                return this._getOption('lessThan');
            },
            set: function (value) {
                this._setOption('lessThan', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "lessThanOrEqual", {
            get: function () {
                return this._getOption('lessThanOrEqual');
            },
            set: function (value) {
                this._setOption('lessThanOrEqual', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "notContains", {
            get: function () {
                return this._getOption('notContains');
            },
            set: function (value) {
                this._setOption('notContains', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "notEqual", {
            get: function () {
                return this._getOption('notEqual');
            },
            set: function (value) {
                this._setOption('notEqual', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "startsWith", {
            get: function () {
                return this._getOption('startsWith');
            },
            set: function (value) {
                this._setOption('startsWith', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterOperationDescriptionsComponent.prototype, "_optionPath", {
            get: function () {
                return 'filterOperationDescriptions';
            },
            enumerable: true,
            configurable: true
        });
        DxoFilterOperationDescriptionsComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoFilterOperationDescriptionsComponent.prototype, "between", null);
        __decorate([
            core.Input()
        ], DxoFilterOperationDescriptionsComponent.prototype, "contains", null);
        __decorate([
            core.Input()
        ], DxoFilterOperationDescriptionsComponent.prototype, "endsWith", null);
        __decorate([
            core.Input()
        ], DxoFilterOperationDescriptionsComponent.prototype, "equal", null);
        __decorate([
            core.Input()
        ], DxoFilterOperationDescriptionsComponent.prototype, "greaterThan", null);
        __decorate([
            core.Input()
        ], DxoFilterOperationDescriptionsComponent.prototype, "greaterThanOrEqual", null);
        __decorate([
            core.Input()
        ], DxoFilterOperationDescriptionsComponent.prototype, "isBlank", null);
        __decorate([
            core.Input()
        ], DxoFilterOperationDescriptionsComponent.prototype, "isNotBlank", null);
        __decorate([
            core.Input()
        ], DxoFilterOperationDescriptionsComponent.prototype, "lessThan", null);
        __decorate([
            core.Input()
        ], DxoFilterOperationDescriptionsComponent.prototype, "lessThanOrEqual", null);
        __decorate([
            core.Input()
        ], DxoFilterOperationDescriptionsComponent.prototype, "notContains", null);
        __decorate([
            core.Input()
        ], DxoFilterOperationDescriptionsComponent.prototype, "notEqual", null);
        __decorate([
            core.Input()
        ], DxoFilterOperationDescriptionsComponent.prototype, "startsWith", null);
        DxoFilterOperationDescriptionsComponent = __decorate([
            core.Component({
                selector: 'dxo-filter-operation-descriptions',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoFilterOperationDescriptionsComponent);
        return DxoFilterOperationDescriptionsComponent;
    }(core$1.NestedOption));
    var DxoFilterOperationDescriptionsModule = /** @class */ (function () {
        function DxoFilterOperationDescriptionsModule() {
        }
        DxoFilterOperationDescriptionsModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoFilterOperationDescriptionsComponent
                ],
                exports: [
                    DxoFilterOperationDescriptionsComponent
                ],
            })
        ], DxoFilterOperationDescriptionsModule);
        return DxoFilterOperationDescriptionsModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFilterPanelComponent = /** @class */ (function (_super) {
        __extends(DxoFilterPanelComponent, _super);
        function DxoFilterPanelComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            _this._createEventEmitters([
                { emit: 'filterEnabledChange' }
            ]);
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoFilterPanelComponent.prototype, "customizeText", {
            get: function () {
                return this._getOption('customizeText');
            },
            set: function (value) {
                this._setOption('customizeText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterPanelComponent.prototype, "filterEnabled", {
            get: function () {
                return this._getOption('filterEnabled');
            },
            set: function (value) {
                this._setOption('filterEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterPanelComponent.prototype, "texts", {
            get: function () {
                return this._getOption('texts');
            },
            set: function (value) {
                this._setOption('texts', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterPanelComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterPanelComponent.prototype, "_optionPath", {
            get: function () {
                return 'filterPanel';
            },
            enumerable: true,
            configurable: true
        });
        DxoFilterPanelComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoFilterPanelComponent.prototype, "customizeText", null);
        __decorate([
            core.Input()
        ], DxoFilterPanelComponent.prototype, "filterEnabled", null);
        __decorate([
            core.Input()
        ], DxoFilterPanelComponent.prototype, "texts", null);
        __decorate([
            core.Input()
        ], DxoFilterPanelComponent.prototype, "visible", null);
        __decorate([
            core.Output()
        ], DxoFilterPanelComponent.prototype, "filterEnabledChange", void 0);
        DxoFilterPanelComponent = __decorate([
            core.Component({
                selector: 'dxo-filter-panel',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoFilterPanelComponent);
        return DxoFilterPanelComponent;
    }(core$1.NestedOption));
    var DxoFilterPanelModule = /** @class */ (function () {
        function DxoFilterPanelModule() {
        }
        DxoFilterPanelModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoFilterPanelComponent
                ],
                exports: [
                    DxoFilterPanelComponent
                ],
            })
        ], DxoFilterPanelModule);
        return DxoFilterPanelModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFilterRowComponent = /** @class */ (function (_super) {
        __extends(DxoFilterRowComponent, _super);
        function DxoFilterRowComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoFilterRowComponent.prototype, "applyFilter", {
            get: function () {
                return this._getOption('applyFilter');
            },
            set: function (value) {
                this._setOption('applyFilter', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterRowComponent.prototype, "applyFilterText", {
            get: function () {
                return this._getOption('applyFilterText');
            },
            set: function (value) {
                this._setOption('applyFilterText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterRowComponent.prototype, "betweenEndText", {
            get: function () {
                return this._getOption('betweenEndText');
            },
            set: function (value) {
                this._setOption('betweenEndText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterRowComponent.prototype, "betweenStartText", {
            get: function () {
                return this._getOption('betweenStartText');
            },
            set: function (value) {
                this._setOption('betweenStartText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterRowComponent.prototype, "operationDescriptions", {
            get: function () {
                return this._getOption('operationDescriptions');
            },
            set: function (value) {
                this._setOption('operationDescriptions', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterRowComponent.prototype, "resetOperationText", {
            get: function () {
                return this._getOption('resetOperationText');
            },
            set: function (value) {
                this._setOption('resetOperationText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterRowComponent.prototype, "showAllText", {
            get: function () {
                return this._getOption('showAllText');
            },
            set: function (value) {
                this._setOption('showAllText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterRowComponent.prototype, "showOperationChooser", {
            get: function () {
                return this._getOption('showOperationChooser');
            },
            set: function (value) {
                this._setOption('showOperationChooser', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterRowComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFilterRowComponent.prototype, "_optionPath", {
            get: function () {
                return 'filterRow';
            },
            enumerable: true,
            configurable: true
        });
        DxoFilterRowComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoFilterRowComponent.prototype, "applyFilter", null);
        __decorate([
            core.Input()
        ], DxoFilterRowComponent.prototype, "applyFilterText", null);
        __decorate([
            core.Input()
        ], DxoFilterRowComponent.prototype, "betweenEndText", null);
        __decorate([
            core.Input()
        ], DxoFilterRowComponent.prototype, "betweenStartText", null);
        __decorate([
            core.Input()
        ], DxoFilterRowComponent.prototype, "operationDescriptions", null);
        __decorate([
            core.Input()
        ], DxoFilterRowComponent.prototype, "resetOperationText", null);
        __decorate([
            core.Input()
        ], DxoFilterRowComponent.prototype, "showAllText", null);
        __decorate([
            core.Input()
        ], DxoFilterRowComponent.prototype, "showOperationChooser", null);
        __decorate([
            core.Input()
        ], DxoFilterRowComponent.prototype, "visible", null);
        DxoFilterRowComponent = __decorate([
            core.Component({
                selector: 'dxo-filter-row',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoFilterRowComponent);
        return DxoFilterRowComponent;
    }(core$1.NestedOption));
    var DxoFilterRowModule = /** @class */ (function () {
        function DxoFilterRowModule() {
        }
        DxoFilterRowModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoFilterRowComponent
                ],
                exports: [
                    DxoFilterRowComponent
                ],
            })
        ], DxoFilterRowModule);
        return DxoFilterRowModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoVizFont = /** @class */ (function (_super) {
        __extends(DxoVizFont, _super);
        function DxoVizFont() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoVizFont.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoVizFont.prototype, "family", {
            get: function () {
                return this._getOption('family');
            },
            set: function (value) {
                this._setOption('family', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoVizFont.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoVizFont.prototype, "size", {
            get: function () {
                return this._getOption('size');
            },
            set: function (value) {
                this._setOption('size', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoVizFont.prototype, "weight", {
            get: function () {
                return this._getOption('weight');
            },
            set: function (value) {
                this._setOption('weight', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoVizFont;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFontComponent = /** @class */ (function (_super) {
        __extends(DxoFontComponent, _super);
        function DxoFontComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoFontComponent.prototype, "_optionPath", {
            get: function () {
                return 'font';
            },
            enumerable: true,
            configurable: true
        });
        DxoFontComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoFontComponent = __decorate([
            core.Component({
                selector: 'dxo-font',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'color',
                    'family',
                    'opacity',
                    'size',
                    'weight'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoFontComponent);
        return DxoFontComponent;
    }(DxoVizFont));
    var DxoFontModule = /** @class */ (function () {
        function DxoFontModule() {
        }
        DxoFontModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoFontComponent
                ],
                exports: [
                    DxoFontComponent
                ],
            })
        ], DxoFontModule);
        return DxoFontModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFormSimpleItem = /** @class */ (function (_super) {
        __extends(DxoFormSimpleItem, _super);
        function DxoFormSimpleItem() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoFormSimpleItem.prototype, "colSpan", {
            get: function () {
                return this._getOption('colSpan');
            },
            set: function (value) {
                this._setOption('colSpan', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormSimpleItem.prototype, "cssClass", {
            get: function () {
                return this._getOption('cssClass');
            },
            set: function (value) {
                this._setOption('cssClass', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormSimpleItem.prototype, "dataField", {
            get: function () {
                return this._getOption('dataField');
            },
            set: function (value) {
                this._setOption('dataField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormSimpleItem.prototype, "editorOptions", {
            get: function () {
                return this._getOption('editorOptions');
            },
            set: function (value) {
                this._setOption('editorOptions', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormSimpleItem.prototype, "editorType", {
            get: function () {
                return this._getOption('editorType');
            },
            set: function (value) {
                this._setOption('editorType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormSimpleItem.prototype, "helpText", {
            get: function () {
                return this._getOption('helpText');
            },
            set: function (value) {
                this._setOption('helpText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormSimpleItem.prototype, "isRequired", {
            get: function () {
                return this._getOption('isRequired');
            },
            set: function (value) {
                this._setOption('isRequired', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormSimpleItem.prototype, "itemType", {
            get: function () {
                return this._getOption('itemType');
            },
            set: function (value) {
                this._setOption('itemType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormSimpleItem.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormSimpleItem.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormSimpleItem.prototype, "template", {
            get: function () {
                return this._getOption('template');
            },
            set: function (value) {
                this._setOption('template', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormSimpleItem.prototype, "validationRules", {
            get: function () {
                return this._getOption('validationRules');
            },
            set: function (value) {
                this._setOption('validationRules', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormSimpleItem.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormSimpleItem.prototype, "visibleIndex", {
            get: function () {
                return this._getOption('visibleIndex');
            },
            set: function (value) {
                this._setOption('visibleIndex', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoFormSimpleItem;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFormItemComponent = /** @class */ (function (_super) {
        __extends(DxoFormItemComponent, _super);
        function DxoFormItemComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoFormItemComponent.prototype, "_optionPath", {
            get: function () {
                return 'formItem';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormItemComponent.prototype, "validationRulesChildren", {
            get: function () {
                return this._getOption('validationRules');
            },
            set: function (value) {
                this.setChildren('validationRules', value);
            },
            enumerable: true,
            configurable: true
        });
        DxoFormItemComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiValidationRuleComponent; }))
        ], DxoFormItemComponent.prototype, "validationRulesChildren", null);
        DxoFormItemComponent = __decorate([
            core.Component({
                selector: 'dxo-form-item',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'colSpan',
                    'cssClass',
                    'dataField',
                    'editorOptions',
                    'editorType',
                    'helpText',
                    'isRequired',
                    'itemType',
                    'label',
                    'name',
                    'template',
                    'validationRules',
                    'visible',
                    'visibleIndex'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoFormItemComponent);
        return DxoFormItemComponent;
    }(DxoFormSimpleItem));
    var DxoFormItemModule = /** @class */ (function () {
        function DxoFormItemModule() {
        }
        DxoFormItemModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoFormItemComponent
                ],
                exports: [
                    DxoFormItemComponent
                ],
            })
        ], DxoFormItemModule);
        return DxoFormItemModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFormOptions = /** @class */ (function (_super) {
        __extends(DxoFormOptions, _super);
        function DxoFormOptions() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoFormOptions.prototype, "accessKey", {
            get: function () {
                return this._getOption('accessKey');
            },
            set: function (value) {
                this._setOption('accessKey', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "activeStateEnabled", {
            get: function () {
                return this._getOption('activeStateEnabled');
            },
            set: function (value) {
                this._setOption('activeStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "alignItemLabels", {
            get: function () {
                return this._getOption('alignItemLabels');
            },
            set: function (value) {
                this._setOption('alignItemLabels', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "alignItemLabelsInAllGroups", {
            get: function () {
                return this._getOption('alignItemLabelsInAllGroups');
            },
            set: function (value) {
                this._setOption('alignItemLabelsInAllGroups', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "colCount", {
            get: function () {
                return this._getOption('colCount');
            },
            set: function (value) {
                this._setOption('colCount', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "colCountByScreen", {
            get: function () {
                return this._getOption('colCountByScreen');
            },
            set: function (value) {
                this._setOption('colCountByScreen', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "customizeItem", {
            get: function () {
                return this._getOption('customizeItem');
            },
            set: function (value) {
                this._setOption('customizeItem', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "disabled", {
            get: function () {
                return this._getOption('disabled');
            },
            set: function (value) {
                this._setOption('disabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "elementAttr", {
            get: function () {
                return this._getOption('elementAttr');
            },
            set: function (value) {
                this._setOption('elementAttr', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "focusStateEnabled", {
            get: function () {
                return this._getOption('focusStateEnabled');
            },
            set: function (value) {
                this._setOption('focusStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "formData", {
            get: function () {
                return this._getOption('formData');
            },
            set: function (value) {
                this._setOption('formData', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "height", {
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "hint", {
            get: function () {
                return this._getOption('hint');
            },
            set: function (value) {
                this._setOption('hint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "hoverStateEnabled", {
            get: function () {
                return this._getOption('hoverStateEnabled');
            },
            set: function (value) {
                this._setOption('hoverStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "items", {
            get: function () {
                return this._getOption('items');
            },
            set: function (value) {
                this._setOption('items', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "labelLocation", {
            get: function () {
                return this._getOption('labelLocation');
            },
            set: function (value) {
                this._setOption('labelLocation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "minColWidth", {
            get: function () {
                return this._getOption('minColWidth');
            },
            set: function (value) {
                this._setOption('minColWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "onContentReady", {
            get: function () {
                return this._getOption('onContentReady');
            },
            set: function (value) {
                this._setOption('onContentReady', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "onDisposing", {
            get: function () {
                return this._getOption('onDisposing');
            },
            set: function (value) {
                this._setOption('onDisposing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "onEditorEnterKey", {
            get: function () {
                return this._getOption('onEditorEnterKey');
            },
            set: function (value) {
                this._setOption('onEditorEnterKey', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "onFieldDataChanged", {
            get: function () {
                return this._getOption('onFieldDataChanged');
            },
            set: function (value) {
                this._setOption('onFieldDataChanged', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "onInitialized", {
            get: function () {
                return this._getOption('onInitialized');
            },
            set: function (value) {
                this._setOption('onInitialized', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "onOptionChanged", {
            get: function () {
                return this._getOption('onOptionChanged');
            },
            set: function (value) {
                this._setOption('onOptionChanged', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "optionalMark", {
            get: function () {
                return this._getOption('optionalMark');
            },
            set: function (value) {
                this._setOption('optionalMark', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "readOnly", {
            get: function () {
                return this._getOption('readOnly');
            },
            set: function (value) {
                this._setOption('readOnly', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "requiredMark", {
            get: function () {
                return this._getOption('requiredMark');
            },
            set: function (value) {
                this._setOption('requiredMark', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "requiredMessage", {
            get: function () {
                return this._getOption('requiredMessage');
            },
            set: function (value) {
                this._setOption('requiredMessage', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "rtlEnabled", {
            get: function () {
                return this._getOption('rtlEnabled');
            },
            set: function (value) {
                this._setOption('rtlEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "screenByWidth", {
            get: function () {
                return this._getOption('screenByWidth');
            },
            set: function (value) {
                this._setOption('screenByWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "scrollingEnabled", {
            get: function () {
                return this._getOption('scrollingEnabled');
            },
            set: function (value) {
                this._setOption('scrollingEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "showColonAfterLabel", {
            get: function () {
                return this._getOption('showColonAfterLabel');
            },
            set: function (value) {
                this._setOption('showColonAfterLabel', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "showOptionalMark", {
            get: function () {
                return this._getOption('showOptionalMark');
            },
            set: function (value) {
                this._setOption('showOptionalMark', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "showRequiredMark", {
            get: function () {
                return this._getOption('showRequiredMark');
            },
            set: function (value) {
                this._setOption('showRequiredMark', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "showValidationSummary", {
            get: function () {
                return this._getOption('showValidationSummary');
            },
            set: function (value) {
                this._setOption('showValidationSummary', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "tabIndex", {
            get: function () {
                return this._getOption('tabIndex');
            },
            set: function (value) {
                this._setOption('tabIndex', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "validationGroup", {
            get: function () {
                return this._getOption('validationGroup');
            },
            set: function (value) {
                this._setOption('validationGroup', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormOptions.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoFormOptions;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFormComponent = /** @class */ (function (_super) {
        __extends(DxoFormComponent, _super);
        function DxoFormComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            _this._createEventEmitters([
                { emit: 'formDataChange' }
            ]);
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoFormComponent.prototype, "_optionPath", {
            get: function () {
                return 'form';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoFormComponent.prototype, "itemsChildren", {
            get: function () {
                return this._getOption('items');
            },
            set: function (value) {
                this.setChildren('items', value);
            },
            enumerable: true,
            configurable: true
        });
        DxoFormComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Output()
        ], DxoFormComponent.prototype, "formDataChange", void 0);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiItemComponent; }))
        ], DxoFormComponent.prototype, "itemsChildren", null);
        DxoFormComponent = __decorate([
            core.Component({
                selector: 'dxo-form',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'accessKey',
                    'activeStateEnabled',
                    'alignItemLabels',
                    'alignItemLabelsInAllGroups',
                    'colCount',
                    'colCountByScreen',
                    'customizeItem',
                    'disabled',
                    'elementAttr',
                    'focusStateEnabled',
                    'formData',
                    'height',
                    'hint',
                    'hoverStateEnabled',
                    'items',
                    'labelLocation',
                    'minColWidth',
                    'onContentReady',
                    'onDisposing',
                    'onEditorEnterKey',
                    'onFieldDataChanged',
                    'onInitialized',
                    'onOptionChanged',
                    'optionalMark',
                    'readOnly',
                    'requiredMark',
                    'requiredMessage',
                    'rtlEnabled',
                    'screenByWidth',
                    'scrollingEnabled',
                    'showColonAfterLabel',
                    'showOptionalMark',
                    'showRequiredMark',
                    'showValidationSummary',
                    'tabIndex',
                    'validationGroup',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoFormComponent);
        return DxoFormComponent;
    }(DxoFormOptions));
    var DxoFormModule = /** @class */ (function () {
        function DxoFormModule() {
        }
        DxoFormModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoFormComponent
                ],
                exports: [
                    DxoFormComponent
                ],
            })
        ], DxoFormModule);
        return DxoFormModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFormatComponent = /** @class */ (function (_super) {
        __extends(DxoFormatComponent, _super);
        function DxoFormatComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoFormatComponent.prototype, "_optionPath", {
            get: function () {
                return 'format';
            },
            enumerable: true,
            configurable: true
        });
        DxoFormatComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoFormatComponent = __decorate([
            core.Component({
                selector: 'dxo-format',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'currency',
                    'formatter',
                    'parser',
                    'precision',
                    'type'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoFormatComponent);
        return DxoFormatComponent;
    }(DxoFormat));
    var DxoFormatModule = /** @class */ (function () {
        function DxoFormatModule() {
        }
        DxoFormatModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoFormatComponent
                ],
                exports: [
                    DxoFormatComponent
                ],
            })
        ], DxoFormatModule);
        return DxoFormatModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFullstackedareaComponent = /** @class */ (function (_super) {
        __extends(DxoFullstackedareaComponent, _super);
        function DxoFullstackedareaComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoFullstackedareaComponent.prototype, "_optionPath", {
            get: function () {
                return 'fullstackedarea';
            },
            enumerable: true,
            configurable: true
        });
        DxoFullstackedareaComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoFullstackedareaComponent = __decorate([
            core.Component({
                selector: 'dxo-fullstackedarea',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoFullstackedareaComponent);
        return DxoFullstackedareaComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoFullstackedareaModule = /** @class */ (function () {
        function DxoFullstackedareaModule() {
        }
        DxoFullstackedareaModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoFullstackedareaComponent
                ],
                exports: [
                    DxoFullstackedareaComponent
                ],
            })
        ], DxoFullstackedareaModule);
        return DxoFullstackedareaModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFullstackedbarComponent = /** @class */ (function (_super) {
        __extends(DxoFullstackedbarComponent, _super);
        function DxoFullstackedbarComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoFullstackedbarComponent.prototype, "_optionPath", {
            get: function () {
                return 'fullstackedbar';
            },
            enumerable: true,
            configurable: true
        });
        DxoFullstackedbarComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoFullstackedbarComponent = __decorate([
            core.Component({
                selector: 'dxo-fullstackedbar',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoFullstackedbarComponent);
        return DxoFullstackedbarComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoFullstackedbarModule = /** @class */ (function () {
        function DxoFullstackedbarModule() {
        }
        DxoFullstackedbarModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoFullstackedbarComponent
                ],
                exports: [
                    DxoFullstackedbarComponent
                ],
            })
        ], DxoFullstackedbarModule);
        return DxoFullstackedbarModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFullstackedlineComponent = /** @class */ (function (_super) {
        __extends(DxoFullstackedlineComponent, _super);
        function DxoFullstackedlineComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoFullstackedlineComponent.prototype, "_optionPath", {
            get: function () {
                return 'fullstackedline';
            },
            enumerable: true,
            configurable: true
        });
        DxoFullstackedlineComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoFullstackedlineComponent = __decorate([
            core.Component({
                selector: 'dxo-fullstackedline',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoFullstackedlineComponent);
        return DxoFullstackedlineComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoFullstackedlineModule = /** @class */ (function () {
        function DxoFullstackedlineModule() {
        }
        DxoFullstackedlineModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoFullstackedlineComponent
                ],
                exports: [
                    DxoFullstackedlineComponent
                ],
            })
        ], DxoFullstackedlineModule);
        return DxoFullstackedlineModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFullstackedsplineComponent = /** @class */ (function (_super) {
        __extends(DxoFullstackedsplineComponent, _super);
        function DxoFullstackedsplineComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoFullstackedsplineComponent.prototype, "_optionPath", {
            get: function () {
                return 'fullstackedspline';
            },
            enumerable: true,
            configurable: true
        });
        DxoFullstackedsplineComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoFullstackedsplineComponent = __decorate([
            core.Component({
                selector: 'dxo-fullstackedspline',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoFullstackedsplineComponent);
        return DxoFullstackedsplineComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoFullstackedsplineModule = /** @class */ (function () {
        function DxoFullstackedsplineModule() {
        }
        DxoFullstackedsplineModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoFullstackedsplineComponent
                ],
                exports: [
                    DxoFullstackedsplineComponent
                ],
            })
        ], DxoFullstackedsplineModule);
        return DxoFullstackedsplineModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoFullstackedsplineareaComponent = /** @class */ (function (_super) {
        __extends(DxoFullstackedsplineareaComponent, _super);
        function DxoFullstackedsplineareaComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoFullstackedsplineareaComponent.prototype, "_optionPath", {
            get: function () {
                return 'fullstackedsplinearea';
            },
            enumerable: true,
            configurable: true
        });
        DxoFullstackedsplineareaComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoFullstackedsplineareaComponent = __decorate([
            core.Component({
                selector: 'dxo-fullstackedsplinearea',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoFullstackedsplineareaComponent);
        return DxoFullstackedsplineareaComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoFullstackedsplineareaModule = /** @class */ (function () {
        function DxoFullstackedsplineareaModule() {
        }
        DxoFullstackedsplineareaModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoFullstackedsplineareaComponent
                ],
                exports: [
                    DxoFullstackedsplineareaComponent
                ],
            })
        ], DxoFullstackedsplineareaModule);
        return DxoFullstackedsplineareaModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoGeometryComponent = /** @class */ (function (_super) {
        __extends(DxoGeometryComponent, _super);
        function DxoGeometryComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoGeometryComponent.prototype, "endAngle", {
            get: function () {
                return this._getOption('endAngle');
            },
            set: function (value) {
                this._setOption('endAngle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGeometryComponent.prototype, "startAngle", {
            get: function () {
                return this._getOption('startAngle');
            },
            set: function (value) {
                this._setOption('startAngle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGeometryComponent.prototype, "orientation", {
            get: function () {
                return this._getOption('orientation');
            },
            set: function (value) {
                this._setOption('orientation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGeometryComponent.prototype, "_optionPath", {
            get: function () {
                return 'geometry';
            },
            enumerable: true,
            configurable: true
        });
        DxoGeometryComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoGeometryComponent.prototype, "endAngle", null);
        __decorate([
            core.Input()
        ], DxoGeometryComponent.prototype, "startAngle", null);
        __decorate([
            core.Input()
        ], DxoGeometryComponent.prototype, "orientation", null);
        DxoGeometryComponent = __decorate([
            core.Component({
                selector: 'dxo-geometry',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoGeometryComponent);
        return DxoGeometryComponent;
    }(core$1.NestedOption));
    var DxoGeometryModule = /** @class */ (function () {
        function DxoGeometryModule() {
        }
        DxoGeometryModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoGeometryComponent
                ],
                exports: [
                    DxoGeometryComponent
                ],
            })
        ], DxoGeometryModule);
        return DxoGeometryModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoGridComponent = /** @class */ (function (_super) {
        __extends(DxoGridComponent, _super);
        function DxoGridComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoGridComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGridComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGridComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGridComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGridComponent.prototype, "_optionPath", {
            get: function () {
                return 'grid';
            },
            enumerable: true,
            configurable: true
        });
        DxoGridComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoGridComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoGridComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxoGridComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxoGridComponent.prototype, "width", null);
        DxoGridComponent = __decorate([
            core.Component({
                selector: 'dxo-grid',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoGridComponent);
        return DxoGridComponent;
    }(core$1.NestedOption));
    var DxoGridModule = /** @class */ (function () {
        function DxoGridModule() {
        }
        DxoGridModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoGridComponent
                ],
                exports: [
                    DxoGridComponent
                ],
            })
        ], DxoGridModule);
        return DxoGridModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiGroupItemComponent = /** @class */ (function (_super) {
        __extends(DxiGroupItemComponent, _super);
        function DxiGroupItemComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiGroupItemComponent.prototype, "alignByColumn", {
            get: function () {
                return this._getOption('alignByColumn');
            },
            set: function (value) {
                this._setOption('alignByColumn', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiGroupItemComponent.prototype, "column", {
            get: function () {
                return this._getOption('column');
            },
            set: function (value) {
                this._setOption('column', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiGroupItemComponent.prototype, "customizeText", {
            get: function () {
                return this._getOption('customizeText');
            },
            set: function (value) {
                this._setOption('customizeText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiGroupItemComponent.prototype, "displayFormat", {
            get: function () {
                return this._getOption('displayFormat');
            },
            set: function (value) {
                this._setOption('displayFormat', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiGroupItemComponent.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiGroupItemComponent.prototype, "showInColumn", {
            get: function () {
                return this._getOption('showInColumn');
            },
            set: function (value) {
                this._setOption('showInColumn', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiGroupItemComponent.prototype, "showInGroupFooter", {
            get: function () {
                return this._getOption('showInGroupFooter');
            },
            set: function (value) {
                this._setOption('showInGroupFooter', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiGroupItemComponent.prototype, "skipEmptyValues", {
            get: function () {
                return this._getOption('skipEmptyValues');
            },
            set: function (value) {
                this._setOption('skipEmptyValues', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiGroupItemComponent.prototype, "summaryType", {
            get: function () {
                return this._getOption('summaryType');
            },
            set: function (value) {
                this._setOption('summaryType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiGroupItemComponent.prototype, "valueFormat", {
            get: function () {
                return this._getOption('valueFormat');
            },
            set: function (value) {
                this._setOption('valueFormat', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiGroupItemComponent.prototype, "_optionPath", {
            get: function () {
                return 'groupItems';
            },
            enumerable: true,
            configurable: true
        });
        DxiGroupItemComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiGroupItemComponent.prototype, "alignByColumn", null);
        __decorate([
            core.Input()
        ], DxiGroupItemComponent.prototype, "column", null);
        __decorate([
            core.Input()
        ], DxiGroupItemComponent.prototype, "customizeText", null);
        __decorate([
            core.Input()
        ], DxiGroupItemComponent.prototype, "displayFormat", null);
        __decorate([
            core.Input()
        ], DxiGroupItemComponent.prototype, "name", null);
        __decorate([
            core.Input()
        ], DxiGroupItemComponent.prototype, "showInColumn", null);
        __decorate([
            core.Input()
        ], DxiGroupItemComponent.prototype, "showInGroupFooter", null);
        __decorate([
            core.Input()
        ], DxiGroupItemComponent.prototype, "skipEmptyValues", null);
        __decorate([
            core.Input()
        ], DxiGroupItemComponent.prototype, "summaryType", null);
        __decorate([
            core.Input()
        ], DxiGroupItemComponent.prototype, "valueFormat", null);
        DxiGroupItemComponent = __decorate([
            core.Component({
                selector: 'dxi-group-item',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiGroupItemComponent);
        return DxiGroupItemComponent;
    }(core$1.CollectionNestedOption));
    var DxiGroupItemModule = /** @class */ (function () {
        function DxiGroupItemModule() {
        }
        DxiGroupItemModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiGroupItemComponent
                ],
                exports: [
                    DxiGroupItemComponent
                ],
            })
        ], DxiGroupItemModule);
        return DxiGroupItemModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoGroupOperationDescriptionsComponent = /** @class */ (function (_super) {
        __extends(DxoGroupOperationDescriptionsComponent, _super);
        function DxoGroupOperationDescriptionsComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoGroupOperationDescriptionsComponent.prototype, "and", {
            get: function () {
                return this._getOption('and');
            },
            set: function (value) {
                this._setOption('and', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupOperationDescriptionsComponent.prototype, "notAnd", {
            get: function () {
                return this._getOption('notAnd');
            },
            set: function (value) {
                this._setOption('notAnd', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupOperationDescriptionsComponent.prototype, "notOr", {
            get: function () {
                return this._getOption('notOr');
            },
            set: function (value) {
                this._setOption('notOr', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupOperationDescriptionsComponent.prototype, "or", {
            get: function () {
                return this._getOption('or');
            },
            set: function (value) {
                this._setOption('or', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupOperationDescriptionsComponent.prototype, "_optionPath", {
            get: function () {
                return 'groupOperationDescriptions';
            },
            enumerable: true,
            configurable: true
        });
        DxoGroupOperationDescriptionsComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoGroupOperationDescriptionsComponent.prototype, "and", null);
        __decorate([
            core.Input()
        ], DxoGroupOperationDescriptionsComponent.prototype, "notAnd", null);
        __decorate([
            core.Input()
        ], DxoGroupOperationDescriptionsComponent.prototype, "notOr", null);
        __decorate([
            core.Input()
        ], DxoGroupOperationDescriptionsComponent.prototype, "or", null);
        DxoGroupOperationDescriptionsComponent = __decorate([
            core.Component({
                selector: 'dxo-group-operation-descriptions',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoGroupOperationDescriptionsComponent);
        return DxoGroupOperationDescriptionsComponent;
    }(core$1.NestedOption));
    var DxoGroupOperationDescriptionsModule = /** @class */ (function () {
        function DxoGroupOperationDescriptionsModule() {
        }
        DxoGroupOperationDescriptionsModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoGroupOperationDescriptionsComponent
                ],
                exports: [
                    DxoGroupOperationDescriptionsComponent
                ],
            })
        ], DxoGroupOperationDescriptionsModule);
        return DxoGroupOperationDescriptionsModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoGroupPanelComponent = /** @class */ (function (_super) {
        __extends(DxoGroupPanelComponent, _super);
        function DxoGroupPanelComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoGroupPanelComponent.prototype, "allowColumnDragging", {
            get: function () {
                return this._getOption('allowColumnDragging');
            },
            set: function (value) {
                this._setOption('allowColumnDragging', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupPanelComponent.prototype, "emptyPanelText", {
            get: function () {
                return this._getOption('emptyPanelText');
            },
            set: function (value) {
                this._setOption('emptyPanelText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupPanelComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupPanelComponent.prototype, "_optionPath", {
            get: function () {
                return 'groupPanel';
            },
            enumerable: true,
            configurable: true
        });
        DxoGroupPanelComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoGroupPanelComponent.prototype, "allowColumnDragging", null);
        __decorate([
            core.Input()
        ], DxoGroupPanelComponent.prototype, "emptyPanelText", null);
        __decorate([
            core.Input()
        ], DxoGroupPanelComponent.prototype, "visible", null);
        DxoGroupPanelComponent = __decorate([
            core.Component({
                selector: 'dxo-group-panel',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoGroupPanelComponent);
        return DxoGroupPanelComponent;
    }(core$1.NestedOption));
    var DxoGroupPanelModule = /** @class */ (function () {
        function DxoGroupPanelModule() {
        }
        DxoGroupPanelModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoGroupPanelComponent
                ],
                exports: [
                    DxoGroupPanelComponent
                ],
            })
        ], DxoGroupPanelModule);
        return DxoGroupPanelModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoGroupComponent = /** @class */ (function (_super) {
        __extends(DxoGroupComponent, _super);
        function DxoGroupComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoGroupComponent.prototype, "border", {
            get: function () {
                return this._getOption('border');
            },
            set: function (value) {
                this._setOption('border', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupComponent.prototype, "headerHeight", {
            get: function () {
                return this._getOption('headerHeight');
            },
            set: function (value) {
                this._setOption('headerHeight', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupComponent.prototype, "hoverEnabled", {
            get: function () {
                return this._getOption('hoverEnabled');
            },
            set: function (value) {
                this._setOption('hoverEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupComponent.prototype, "hoverStyle", {
            get: function () {
                return this._getOption('hoverStyle');
            },
            set: function (value) {
                this._setOption('hoverStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupComponent.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupComponent.prototype, "selectionStyle", {
            get: function () {
                return this._getOption('selectionStyle');
            },
            set: function (value) {
                this._setOption('selectionStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupComponent.prototype, "_optionPath", {
            get: function () {
                return 'group';
            },
            enumerable: true,
            configurable: true
        });
        DxoGroupComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoGroupComponent.prototype, "border", null);
        __decorate([
            core.Input()
        ], DxoGroupComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoGroupComponent.prototype, "headerHeight", null);
        __decorate([
            core.Input()
        ], DxoGroupComponent.prototype, "hoverEnabled", null);
        __decorate([
            core.Input()
        ], DxoGroupComponent.prototype, "hoverStyle", null);
        __decorate([
            core.Input()
        ], DxoGroupComponent.prototype, "label", null);
        __decorate([
            core.Input()
        ], DxoGroupComponent.prototype, "selectionStyle", null);
        DxoGroupComponent = __decorate([
            core.Component({
                selector: 'dxo-group',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoGroupComponent);
        return DxoGroupComponent;
    }(core$1.NestedOption));
    var DxoGroupModule = /** @class */ (function () {
        function DxoGroupModule() {
        }
        DxoGroupModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoGroupComponent
                ],
                exports: [
                    DxoGroupComponent
                ],
            })
        ], DxoGroupModule);
        return DxoGroupModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoGroupingComponent = /** @class */ (function (_super) {
        __extends(DxoGroupingComponent, _super);
        function DxoGroupingComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoGroupingComponent.prototype, "allowCollapsing", {
            get: function () {
                return this._getOption('allowCollapsing');
            },
            set: function (value) {
                this._setOption('allowCollapsing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupingComponent.prototype, "autoExpandAll", {
            get: function () {
                return this._getOption('autoExpandAll');
            },
            set: function (value) {
                this._setOption('autoExpandAll', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupingComponent.prototype, "contextMenuEnabled", {
            get: function () {
                return this._getOption('contextMenuEnabled');
            },
            set: function (value) {
                this._setOption('contextMenuEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupingComponent.prototype, "expandMode", {
            get: function () {
                return this._getOption('expandMode');
            },
            set: function (value) {
                this._setOption('expandMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupingComponent.prototype, "texts", {
            get: function () {
                return this._getOption('texts');
            },
            set: function (value) {
                this._setOption('texts', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGroupingComponent.prototype, "_optionPath", {
            get: function () {
                return 'grouping';
            },
            enumerable: true,
            configurable: true
        });
        DxoGroupingComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoGroupingComponent.prototype, "allowCollapsing", null);
        __decorate([
            core.Input()
        ], DxoGroupingComponent.prototype, "autoExpandAll", null);
        __decorate([
            core.Input()
        ], DxoGroupingComponent.prototype, "contextMenuEnabled", null);
        __decorate([
            core.Input()
        ], DxoGroupingComponent.prototype, "expandMode", null);
        __decorate([
            core.Input()
        ], DxoGroupingComponent.prototype, "texts", null);
        DxoGroupingComponent = __decorate([
            core.Component({
                selector: 'dxo-grouping',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoGroupingComponent);
        return DxoGroupingComponent;
    }(core$1.NestedOption));
    var DxoGroupingModule = /** @class */ (function () {
        function DxoGroupingModule() {
        }
        DxoGroupingModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoGroupingComponent
                ],
                exports: [
                    DxoGroupingComponent
                ],
            })
        ], DxoGroupingModule);
        return DxoGroupingModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoHatchingComponent = /** @class */ (function (_super) {
        __extends(DxoHatchingComponent, _super);
        function DxoHatchingComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoHatchingComponent.prototype, "direction", {
            get: function () {
                return this._getOption('direction');
            },
            set: function (value) {
                this._setOption('direction', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHatchingComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHatchingComponent.prototype, "step", {
            get: function () {
                return this._getOption('step');
            },
            set: function (value) {
                this._setOption('step', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHatchingComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHatchingComponent.prototype, "_optionPath", {
            get: function () {
                return 'hatching';
            },
            enumerable: true,
            configurable: true
        });
        DxoHatchingComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoHatchingComponent.prototype, "direction", null);
        __decorate([
            core.Input()
        ], DxoHatchingComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxoHatchingComponent.prototype, "step", null);
        __decorate([
            core.Input()
        ], DxoHatchingComponent.prototype, "width", null);
        DxoHatchingComponent = __decorate([
            core.Component({
                selector: 'dxo-hatching',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoHatchingComponent);
        return DxoHatchingComponent;
    }(core$1.NestedOption));
    var DxoHatchingModule = /** @class */ (function () {
        function DxoHatchingModule() {
        }
        DxoHatchingModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoHatchingComponent
                ],
                exports: [
                    DxoHatchingComponent
                ],
            })
        ], DxoHatchingModule);
        return DxoHatchingModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoHeaderFilterComponent = /** @class */ (function (_super) {
        __extends(DxoHeaderFilterComponent, _super);
        function DxoHeaderFilterComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoHeaderFilterComponent.prototype, "allowSearch", {
            get: function () {
                return this._getOption('allowSearch');
            },
            set: function (value) {
                this._setOption('allowSearch', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHeaderFilterComponent.prototype, "dataSource", {
            get: function () {
                return this._getOption('dataSource');
            },
            set: function (value) {
                this._setOption('dataSource', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHeaderFilterComponent.prototype, "groupInterval", {
            get: function () {
                return this._getOption('groupInterval');
            },
            set: function (value) {
                this._setOption('groupInterval', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHeaderFilterComponent.prototype, "height", {
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHeaderFilterComponent.prototype, "searchMode", {
            get: function () {
                return this._getOption('searchMode');
            },
            set: function (value) {
                this._setOption('searchMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHeaderFilterComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHeaderFilterComponent.prototype, "searchTimeout", {
            get: function () {
                return this._getOption('searchTimeout');
            },
            set: function (value) {
                this._setOption('searchTimeout', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHeaderFilterComponent.prototype, "texts", {
            get: function () {
                return this._getOption('texts');
            },
            set: function (value) {
                this._setOption('texts', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHeaderFilterComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHeaderFilterComponent.prototype, "showRelevantValues", {
            get: function () {
                return this._getOption('showRelevantValues');
            },
            set: function (value) {
                this._setOption('showRelevantValues', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHeaderFilterComponent.prototype, "_optionPath", {
            get: function () {
                return 'headerFilter';
            },
            enumerable: true,
            configurable: true
        });
        DxoHeaderFilterComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoHeaderFilterComponent.prototype, "allowSearch", null);
        __decorate([
            core.Input()
        ], DxoHeaderFilterComponent.prototype, "dataSource", null);
        __decorate([
            core.Input()
        ], DxoHeaderFilterComponent.prototype, "groupInterval", null);
        __decorate([
            core.Input()
        ], DxoHeaderFilterComponent.prototype, "height", null);
        __decorate([
            core.Input()
        ], DxoHeaderFilterComponent.prototype, "searchMode", null);
        __decorate([
            core.Input()
        ], DxoHeaderFilterComponent.prototype, "width", null);
        __decorate([
            core.Input()
        ], DxoHeaderFilterComponent.prototype, "searchTimeout", null);
        __decorate([
            core.Input()
        ], DxoHeaderFilterComponent.prototype, "texts", null);
        __decorate([
            core.Input()
        ], DxoHeaderFilterComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxoHeaderFilterComponent.prototype, "showRelevantValues", null);
        DxoHeaderFilterComponent = __decorate([
            core.Component({
                selector: 'dxo-header-filter',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoHeaderFilterComponent);
        return DxoHeaderFilterComponent;
    }(core$1.NestedOption));
    var DxoHeaderFilterModule = /** @class */ (function () {
        function DxoHeaderFilterModule() {
        }
        DxoHeaderFilterModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoHeaderFilterComponent
                ],
                exports: [
                    DxoHeaderFilterComponent
                ],
            })
        ], DxoHeaderFilterModule);
        return DxoHeaderFilterModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoHeightComponent = /** @class */ (function (_super) {
        __extends(DxoHeightComponent, _super);
        function DxoHeightComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoHeightComponent.prototype, "rangeMaxPoint", {
            get: function () {
                return this._getOption('rangeMaxPoint');
            },
            set: function (value) {
                this._setOption('rangeMaxPoint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHeightComponent.prototype, "rangeMinPoint", {
            get: function () {
                return this._getOption('rangeMinPoint');
            },
            set: function (value) {
                this._setOption('rangeMinPoint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHeightComponent.prototype, "_optionPath", {
            get: function () {
                return 'height';
            },
            enumerable: true,
            configurable: true
        });
        DxoHeightComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoHeightComponent.prototype, "rangeMaxPoint", null);
        __decorate([
            core.Input()
        ], DxoHeightComponent.prototype, "rangeMinPoint", null);
        DxoHeightComponent = __decorate([
            core.Component({
                selector: 'dxo-height',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoHeightComponent);
        return DxoHeightComponent;
    }(core$1.NestedOption));
    var DxoHeightModule = /** @class */ (function () {
        function DxoHeightModule() {
        }
        DxoHeightModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoHeightComponent
                ],
                exports: [
                    DxoHeightComponent
                ],
            })
        ], DxoHeightModule);
        return DxoHeightModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoHideEventComponent = /** @class */ (function (_super) {
        __extends(DxoHideEventComponent, _super);
        function DxoHideEventComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoHideEventComponent.prototype, "delay", {
            get: function () {
                return this._getOption('delay');
            },
            set: function (value) {
                this._setOption('delay', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHideEventComponent.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHideEventComponent.prototype, "_optionPath", {
            get: function () {
                return 'hideEvent';
            },
            enumerable: true,
            configurable: true
        });
        DxoHideEventComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoHideEventComponent.prototype, "delay", null);
        __decorate([
            core.Input()
        ], DxoHideEventComponent.prototype, "name", null);
        DxoHideEventComponent = __decorate([
            core.Component({
                selector: 'dxo-hide-event',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoHideEventComponent);
        return DxoHideEventComponent;
    }(core$1.NestedOption));
    var DxoHideEventModule = /** @class */ (function () {
        function DxoHideEventModule() {
        }
        DxoHideEventModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoHideEventComponent
                ],
                exports: [
                    DxoHideEventComponent
                ],
            })
        ], DxoHideEventModule);
        return DxoHideEventModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoHideComponent = /** @class */ (function (_super) {
        __extends(DxoHideComponent, _super);
        function DxoHideComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoHideComponent.prototype, "_optionPath", {
            get: function () {
                return 'hide';
            },
            enumerable: true,
            configurable: true
        });
        DxoHideComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoHideComponent = __decorate([
            core.Component({
                selector: 'dxo-hide',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'complete',
                    'delay',
                    'direction',
                    'duration',
                    'easing',
                    'from',
                    'staggerDelay',
                    'start',
                    'to',
                    'type'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoHideComponent);
        return DxoHideComponent;
    }(DxoAnimationConfig));
    var DxoHideModule = /** @class */ (function () {
        function DxoHideModule() {
        }
        DxoHideModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoHideComponent
                ],
                exports: [
                    DxoHideComponent
                ],
            })
        ], DxoHideModule);
        return DxoHideModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoHorizontalLineComponent = /** @class */ (function (_super) {
        __extends(DxoHorizontalLineComponent, _super);
        function DxoHorizontalLineComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoHorizontalLineComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHorizontalLineComponent.prototype, "dashStyle", {
            get: function () {
                return this._getOption('dashStyle');
            },
            set: function (value) {
                this._setOption('dashStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHorizontalLineComponent.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHorizontalLineComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHorizontalLineComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHorizontalLineComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHorizontalLineComponent.prototype, "_optionPath", {
            get: function () {
                return 'horizontalLine';
            },
            enumerable: true,
            configurable: true
        });
        DxoHorizontalLineComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoHorizontalLineComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoHorizontalLineComponent.prototype, "dashStyle", null);
        __decorate([
            core.Input()
        ], DxoHorizontalLineComponent.prototype, "label", null);
        __decorate([
            core.Input()
        ], DxoHorizontalLineComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxoHorizontalLineComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxoHorizontalLineComponent.prototype, "width", null);
        DxoHorizontalLineComponent = __decorate([
            core.Component({
                selector: 'dxo-horizontal-line',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoHorizontalLineComponent);
        return DxoHorizontalLineComponent;
    }(core$1.NestedOption));
    var DxoHorizontalLineModule = /** @class */ (function () {
        function DxoHorizontalLineModule() {
        }
        DxoHorizontalLineModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoHorizontalLineComponent
                ],
                exports: [
                    DxoHorizontalLineComponent
                ],
            })
        ], DxoHorizontalLineModule);
        return DxoHorizontalLineModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoHoverStyleComponent = /** @class */ (function (_super) {
        __extends(DxoHoverStyleComponent, _super);
        function DxoHoverStyleComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoHoverStyleComponent.prototype, "border", {
            get: function () {
                return this._getOption('border');
            },
            set: function (value) {
                this._setOption('border', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHoverStyleComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHoverStyleComponent.prototype, "dashStyle", {
            get: function () {
                return this._getOption('dashStyle');
            },
            set: function (value) {
                this._setOption('dashStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHoverStyleComponent.prototype, "hatching", {
            get: function () {
                return this._getOption('hatching');
            },
            set: function (value) {
                this._setOption('hatching', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHoverStyleComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHoverStyleComponent.prototype, "size", {
            get: function () {
                return this._getOption('size');
            },
            set: function (value) {
                this._setOption('size', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHoverStyleComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHoverStyleComponent.prototype, "_optionPath", {
            get: function () {
                return 'hoverStyle';
            },
            enumerable: true,
            configurable: true
        });
        DxoHoverStyleComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoHoverStyleComponent.prototype, "border", null);
        __decorate([
            core.Input()
        ], DxoHoverStyleComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoHoverStyleComponent.prototype, "dashStyle", null);
        __decorate([
            core.Input()
        ], DxoHoverStyleComponent.prototype, "hatching", null);
        __decorate([
            core.Input()
        ], DxoHoverStyleComponent.prototype, "width", null);
        __decorate([
            core.Input()
        ], DxoHoverStyleComponent.prototype, "size", null);
        __decorate([
            core.Input()
        ], DxoHoverStyleComponent.prototype, "opacity", null);
        DxoHoverStyleComponent = __decorate([
            core.Component({
                selector: 'dxo-hover-style',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoHoverStyleComponent);
        return DxoHoverStyleComponent;
    }(core$1.NestedOption));
    var DxoHoverStyleModule = /** @class */ (function () {
        function DxoHoverStyleModule() {
        }
        DxoHoverStyleModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoHoverStyleComponent
                ],
                exports: [
                    DxoHoverStyleComponent
                ],
            })
        ], DxoHoverStyleModule);
        return DxoHoverStyleModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoImageComponent = /** @class */ (function (_super) {
        __extends(DxoImageComponent, _super);
        function DxoImageComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoImageComponent.prototype, "height", {
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoImageComponent.prototype, "url", {
            get: function () {
                return this._getOption('url');
            },
            set: function (value) {
                this._setOption('url', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoImageComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoImageComponent.prototype, "location", {
            get: function () {
                return this._getOption('location');
            },
            set: function (value) {
                this._setOption('location', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoImageComponent.prototype, "_optionPath", {
            get: function () {
                return 'image';
            },
            enumerable: true,
            configurable: true
        });
        DxoImageComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoImageComponent.prototype, "height", null);
        __decorate([
            core.Input()
        ], DxoImageComponent.prototype, "url", null);
        __decorate([
            core.Input()
        ], DxoImageComponent.prototype, "width", null);
        __decorate([
            core.Input()
        ], DxoImageComponent.prototype, "location", null);
        DxoImageComponent = __decorate([
            core.Component({
                selector: 'dxo-image',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoImageComponent);
        return DxoImageComponent;
    }(core$1.NestedOption));
    var DxoImageModule = /** @class */ (function () {
        function DxoImageModule() {
        }
        DxoImageModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoImageComponent
                ],
                exports: [
                    DxoImageComponent
                ],
            })
        ], DxoImageModule);
        return DxoImageModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoIndentComponent = /** @class */ (function (_super) {
        __extends(DxoIndentComponent, _super);
        function DxoIndentComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoIndentComponent.prototype, "left", {
            get: function () {
                return this._getOption('left');
            },
            set: function (value) {
                this._setOption('left', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoIndentComponent.prototype, "right", {
            get: function () {
                return this._getOption('right');
            },
            set: function (value) {
                this._setOption('right', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoIndentComponent.prototype, "_optionPath", {
            get: function () {
                return 'indent';
            },
            enumerable: true,
            configurable: true
        });
        DxoIndentComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoIndentComponent.prototype, "left", null);
        __decorate([
            core.Input()
        ], DxoIndentComponent.prototype, "right", null);
        DxoIndentComponent = __decorate([
            core.Component({
                selector: 'dxo-indent',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoIndentComponent);
        return DxoIndentComponent;
    }(core$1.NestedOption));
    var DxoIndentModule = /** @class */ (function () {
        function DxoIndentModule() {
        }
        DxoIndentModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoIndentComponent
                ],
                exports: [
                    DxoIndentComponent
                ],
            })
        ], DxoIndentModule);
        return DxoIndentModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoItemTextFormatComponent = /** @class */ (function (_super) {
        __extends(DxoItemTextFormatComponent, _super);
        function DxoItemTextFormatComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoItemTextFormatComponent.prototype, "_optionPath", {
            get: function () {
                return 'itemTextFormat';
            },
            enumerable: true,
            configurable: true
        });
        DxoItemTextFormatComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoItemTextFormatComponent = __decorate([
            core.Component({
                selector: 'dxo-item-text-format',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'currency',
                    'formatter',
                    'parser',
                    'precision',
                    'type'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoItemTextFormatComponent);
        return DxoItemTextFormatComponent;
    }(DxoFormat));
    var DxoItemTextFormatModule = /** @class */ (function () {
        function DxoItemTextFormatModule() {
        }
        DxoItemTextFormatModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoItemTextFormatComponent
                ],
                exports: [
                    DxoItemTextFormatComponent
                ],
            })
        ], DxoItemTextFormatModule);
        return DxoItemTextFormatModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoItemComponent = /** @class */ (function (_super) {
        __extends(DxoItemComponent, _super);
        function DxoItemComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoItemComponent.prototype, "border", {
            get: function () {
                return this._getOption('border');
            },
            set: function (value) {
                this._setOption('border', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoItemComponent.prototype, "hoverStyle", {
            get: function () {
                return this._getOption('hoverStyle');
            },
            set: function (value) {
                this._setOption('hoverStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoItemComponent.prototype, "selectionStyle", {
            get: function () {
                return this._getOption('selectionStyle');
            },
            set: function (value) {
                this._setOption('selectionStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoItemComponent.prototype, "_optionPath", {
            get: function () {
                return 'item';
            },
            enumerable: true,
            configurable: true
        });
        DxoItemComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoItemComponent.prototype, "border", null);
        __decorate([
            core.Input()
        ], DxoItemComponent.prototype, "hoverStyle", null);
        __decorate([
            core.Input()
        ], DxoItemComponent.prototype, "selectionStyle", null);
        DxoItemComponent = __decorate([
            core.Component({
                selector: 'dxo-item',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoItemComponent);
        return DxoItemComponent;
    }(core$1.NestedOption));
    var DxoItemModule = /** @class */ (function () {
        function DxoItemModule() {
        }
        DxoItemModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoItemComponent
                ],
                exports: [
                    DxoItemComponent
                ],
            })
        ], DxoItemModule);
        return DxoItemModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoKeyComponent = /** @class */ (function (_super) {
        __extends(DxoKeyComponent, _super);
        function DxoKeyComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoKeyComponent.prototype, "bing", {
            get: function () {
                return this._getOption('bing');
            },
            set: function (value) {
                this._setOption('bing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoKeyComponent.prototype, "google", {
            get: function () {
                return this._getOption('google');
            },
            set: function (value) {
                this._setOption('google', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoKeyComponent.prototype, "googleStatic", {
            get: function () {
                return this._getOption('googleStatic');
            },
            set: function (value) {
                this._setOption('googleStatic', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoKeyComponent.prototype, "_optionPath", {
            get: function () {
                return 'key';
            },
            enumerable: true,
            configurable: true
        });
        DxoKeyComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoKeyComponent.prototype, "bing", null);
        __decorate([
            core.Input()
        ], DxoKeyComponent.prototype, "google", null);
        __decorate([
            core.Input()
        ], DxoKeyComponent.prototype, "googleStatic", null);
        DxoKeyComponent = __decorate([
            core.Component({
                selector: 'dxo-key',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoKeyComponent);
        return DxoKeyComponent;
    }(core$1.NestedOption));
    var DxoKeyModule = /** @class */ (function () {
        function DxoKeyModule() {
        }
        DxoKeyModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoKeyComponent
                ],
                exports: [
                    DxoKeyComponent
                ],
            })
        ], DxoKeyModule);
        return DxoKeyModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoKeyboardNavigationComponent = /** @class */ (function (_super) {
        __extends(DxoKeyboardNavigationComponent, _super);
        function DxoKeyboardNavigationComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoKeyboardNavigationComponent.prototype, "editOnKeyPress", {
            get: function () {
                return this._getOption('editOnKeyPress');
            },
            set: function (value) {
                this._setOption('editOnKeyPress', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoKeyboardNavigationComponent.prototype, "enterKeyAction", {
            get: function () {
                return this._getOption('enterKeyAction');
            },
            set: function (value) {
                this._setOption('enterKeyAction', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoKeyboardNavigationComponent.prototype, "enterKeyDirection", {
            get: function () {
                return this._getOption('enterKeyDirection');
            },
            set: function (value) {
                this._setOption('enterKeyDirection', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoKeyboardNavigationComponent.prototype, "_optionPath", {
            get: function () {
                return 'keyboardNavigation';
            },
            enumerable: true,
            configurable: true
        });
        DxoKeyboardNavigationComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoKeyboardNavigationComponent.prototype, "editOnKeyPress", null);
        __decorate([
            core.Input()
        ], DxoKeyboardNavigationComponent.prototype, "enterKeyAction", null);
        __decorate([
            core.Input()
        ], DxoKeyboardNavigationComponent.prototype, "enterKeyDirection", null);
        DxoKeyboardNavigationComponent = __decorate([
            core.Component({
                selector: 'dxo-keyboard-navigation',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoKeyboardNavigationComponent);
        return DxoKeyboardNavigationComponent;
    }(core$1.NestedOption));
    var DxoKeyboardNavigationModule = /** @class */ (function () {
        function DxoKeyboardNavigationModule() {
        }
        DxoKeyboardNavigationModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoKeyboardNavigationComponent
                ],
                exports: [
                    DxoKeyboardNavigationComponent
                ],
            })
        ], DxoKeyboardNavigationModule);
        return DxoKeyboardNavigationModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoLabelComponent = /** @class */ (function (_super) {
        __extends(DxoLabelComponent, _super);
        function DxoLabelComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoLabelComponent.prototype, "connectorColor", {
            get: function () {
                return this._getOption('connectorColor');
            },
            set: function (value) {
                this._setOption('connectorColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "connectorWidth", {
            get: function () {
                return this._getOption('connectorWidth');
            },
            set: function (value) {
                this._setOption('connectorWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "customizeText", {
            get: function () {
                return this._getOption('customizeText');
            },
            set: function (value) {
                this._setOption('customizeText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "font", {
            get: function () {
                return this._getOption('font');
            },
            set: function (value) {
                this._setOption('font', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "format", {
            get: function () {
                return this._getOption('format');
            },
            set: function (value) {
                this._setOption('format', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "indent", {
            get: function () {
                return this._getOption('indent');
            },
            set: function (value) {
                this._setOption('indent', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "horizontalAlignment", {
            get: function () {
                return this._getOption('horizontalAlignment');
            },
            set: function (value) {
                this._setOption('horizontalAlignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "position", {
            get: function () {
                return this._getOption('position');
            },
            set: function (value) {
                this._setOption('position', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "text", {
            get: function () {
                return this._getOption('text');
            },
            set: function (value) {
                this._setOption('text', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "verticalAlignment", {
            get: function () {
                return this._getOption('verticalAlignment');
            },
            set: function (value) {
                this._setOption('verticalAlignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "alignment", {
            get: function () {
                return this._getOption('alignment');
            },
            set: function (value) {
                this._setOption('alignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "customizeHint", {
            get: function () {
                return this._getOption('customizeHint');
            },
            set: function (value) {
                this._setOption('customizeHint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "displayMode", {
            get: function () {
                return this._getOption('displayMode');
            },
            set: function (value) {
                this._setOption('displayMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "indentFromAxis", {
            get: function () {
                return this._getOption('indentFromAxis');
            },
            set: function (value) {
                this._setOption('indentFromAxis', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "overlappingBehavior", {
            get: function () {
                return this._getOption('overlappingBehavior');
            },
            set: function (value) {
                this._setOption('overlappingBehavior', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "rotationAngle", {
            get: function () {
                return this._getOption('rotationAngle');
            },
            set: function (value) {
                this._setOption('rotationAngle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "staggeringSpacing", {
            get: function () {
                return this._getOption('staggeringSpacing');
            },
            set: function (value) {
                this._setOption('staggeringSpacing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "textOverflow", {
            get: function () {
                return this._getOption('textOverflow');
            },
            set: function (value) {
                this._setOption('textOverflow', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "wordWrap", {
            get: function () {
                return this._getOption('wordWrap');
            },
            set: function (value) {
                this._setOption('wordWrap', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "argumentFormat", {
            get: function () {
                return this._getOption('argumentFormat');
            },
            set: function (value) {
                this._setOption('argumentFormat', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "backgroundColor", {
            get: function () {
                return this._getOption('backgroundColor');
            },
            set: function (value) {
                this._setOption('backgroundColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "border", {
            get: function () {
                return this._getOption('border');
            },
            set: function (value) {
                this._setOption('border', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "connector", {
            get: function () {
                return this._getOption('connector');
            },
            set: function (value) {
                this._setOption('connector', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "horizontalOffset", {
            get: function () {
                return this._getOption('horizontalOffset');
            },
            set: function (value) {
                this._setOption('horizontalOffset', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "showForZeroValues", {
            get: function () {
                return this._getOption('showForZeroValues');
            },
            set: function (value) {
                this._setOption('showForZeroValues', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "verticalOffset", {
            get: function () {
                return this._getOption('verticalOffset');
            },
            set: function (value) {
                this._setOption('verticalOffset', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "hideFirstOrLast", {
            get: function () {
                return this._getOption('hideFirstOrLast');
            },
            set: function (value) {
                this._setOption('hideFirstOrLast', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "indentFromTick", {
            get: function () {
                return this._getOption('indentFromTick');
            },
            set: function (value) {
                this._setOption('indentFromTick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "useRangeColors", {
            get: function () {
                return this._getOption('useRangeColors');
            },
            set: function (value) {
                this._setOption('useRangeColors', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "location", {
            get: function () {
                return this._getOption('location');
            },
            set: function (value) {
                this._setOption('location', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "showColon", {
            get: function () {
                return this._getOption('showColon');
            },
            set: function (value) {
                this._setOption('showColon', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "radialOffset", {
            get: function () {
                return this._getOption('radialOffset');
            },
            set: function (value) {
                this._setOption('radialOffset', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "topIndent", {
            get: function () {
                return this._getOption('topIndent');
            },
            set: function (value) {
                this._setOption('topIndent', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "shadow", {
            get: function () {
                return this._getOption('shadow');
            },
            set: function (value) {
                this._setOption('shadow', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "useNodeColors", {
            get: function () {
                return this._getOption('useNodeColors');
            },
            set: function (value) {
                this._setOption('useNodeColors', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "dataField", {
            get: function () {
                return this._getOption('dataField');
            },
            set: function (value) {
                this._setOption('dataField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "enabled", {
            get: function () {
                return this._getOption('enabled');
            },
            set: function (value) {
                this._setOption('enabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLabelComponent.prototype, "_optionPath", {
            get: function () {
                return 'label';
            },
            enumerable: true,
            configurable: true
        });
        DxoLabelComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "connectorColor", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "connectorWidth", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "customizeText", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "font", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "format", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "indent", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "horizontalAlignment", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "position", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "text", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "verticalAlignment", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "alignment", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "customizeHint", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "displayMode", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "indentFromAxis", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "overlappingBehavior", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "rotationAngle", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "staggeringSpacing", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "textOverflow", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "wordWrap", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "argumentFormat", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "backgroundColor", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "border", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "connector", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "horizontalOffset", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "showForZeroValues", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "verticalOffset", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "hideFirstOrLast", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "indentFromTick", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "useRangeColors", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "location", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "showColon", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "radialOffset", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "topIndent", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "shadow", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "useNodeColors", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "dataField", null);
        __decorate([
            core.Input()
        ], DxoLabelComponent.prototype, "enabled", null);
        DxoLabelComponent = __decorate([
            core.Component({
                selector: 'dxo-label',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoLabelComponent);
        return DxoLabelComponent;
    }(core$1.NestedOption));
    var DxoLabelModule = /** @class */ (function () {
        function DxoLabelModule() {
        }
        DxoLabelModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoLabelComponent
                ],
                exports: [
                    DxoLabelComponent
                ],
            })
        ], DxoLabelModule);
        return DxoLabelModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiLayerComponent = /** @class */ (function (_super) {
        __extends(DxiLayerComponent, _super);
        function DxiLayerComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiLayerComponent.prototype, "borderColor", {
            get: function () {
                return this._getOption('borderColor');
            },
            set: function (value) {
                this._setOption('borderColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "borderWidth", {
            get: function () {
                return this._getOption('borderWidth');
            },
            set: function (value) {
                this._setOption('borderWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "colorGroupingField", {
            get: function () {
                return this._getOption('colorGroupingField');
            },
            set: function (value) {
                this._setOption('colorGroupingField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "colorGroups", {
            get: function () {
                return this._getOption('colorGroups');
            },
            set: function (value) {
                this._setOption('colorGroups', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "customize", {
            get: function () {
                return this._getOption('customize');
            },
            set: function (value) {
                this._setOption('customize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "dataField", {
            get: function () {
                return this._getOption('dataField');
            },
            set: function (value) {
                this._setOption('dataField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "dataSource", {
            get: function () {
                return this._getOption('dataSource');
            },
            set: function (value) {
                this._setOption('dataSource', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "elementType", {
            get: function () {
                return this._getOption('elementType');
            },
            set: function (value) {
                this._setOption('elementType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "hoveredBorderColor", {
            get: function () {
                return this._getOption('hoveredBorderColor');
            },
            set: function (value) {
                this._setOption('hoveredBorderColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "hoveredBorderWidth", {
            get: function () {
                return this._getOption('hoveredBorderWidth');
            },
            set: function (value) {
                this._setOption('hoveredBorderWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "hoveredColor", {
            get: function () {
                return this._getOption('hoveredColor');
            },
            set: function (value) {
                this._setOption('hoveredColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "hoverEnabled", {
            get: function () {
                return this._getOption('hoverEnabled');
            },
            set: function (value) {
                this._setOption('hoverEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "maxSize", {
            get: function () {
                return this._getOption('maxSize');
            },
            set: function (value) {
                this._setOption('maxSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "minSize", {
            get: function () {
                return this._getOption('minSize');
            },
            set: function (value) {
                this._setOption('minSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "palette", {
            get: function () {
                return this._getOption('palette');
            },
            set: function (value) {
                this._setOption('palette', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "paletteSize", {
            get: function () {
                return this._getOption('paletteSize');
            },
            set: function (value) {
                this._setOption('paletteSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "selectedBorderColor", {
            get: function () {
                return this._getOption('selectedBorderColor');
            },
            set: function (value) {
                this._setOption('selectedBorderColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "selectedBorderWidth", {
            get: function () {
                return this._getOption('selectedBorderWidth');
            },
            set: function (value) {
                this._setOption('selectedBorderWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "selectedColor", {
            get: function () {
                return this._getOption('selectedColor');
            },
            set: function (value) {
                this._setOption('selectedColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "selectionMode", {
            get: function () {
                return this._getOption('selectionMode');
            },
            set: function (value) {
                this._setOption('selectionMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "size", {
            get: function () {
                return this._getOption('size');
            },
            set: function (value) {
                this._setOption('size', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "sizeGroupingField", {
            get: function () {
                return this._getOption('sizeGroupingField');
            },
            set: function (value) {
                this._setOption('sizeGroupingField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "sizeGroups", {
            get: function () {
                return this._getOption('sizeGroups');
            },
            set: function (value) {
                this._setOption('sizeGroups', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLayerComponent.prototype, "_optionPath", {
            get: function () {
                return 'layers';
            },
            enumerable: true,
            configurable: true
        });
        DxiLayerComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "borderColor", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "borderWidth", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "colorGroupingField", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "colorGroups", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "customize", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "dataField", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "dataSource", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "elementType", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "hoveredBorderColor", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "hoveredBorderWidth", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "hoveredColor", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "hoverEnabled", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "label", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "maxSize", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "minSize", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "name", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "palette", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "paletteSize", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "selectedBorderColor", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "selectedBorderWidth", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "selectedColor", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "selectionMode", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "size", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "sizeGroupingField", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "sizeGroups", null);
        __decorate([
            core.Input()
        ], DxiLayerComponent.prototype, "type", null);
        DxiLayerComponent = __decorate([
            core.Component({
                selector: 'dxi-layer',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiLayerComponent);
        return DxiLayerComponent;
    }(core$1.CollectionNestedOption));
    var DxiLayerModule = /** @class */ (function () {
        function DxiLayerModule() {
        }
        DxiLayerModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiLayerComponent
                ],
                exports: [
                    DxiLayerComponent
                ],
            })
        ], DxiLayerModule);
        return DxiLayerModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiLegendComponent = /** @class */ (function (_super) {
        __extends(DxiLegendComponent, _super);
        function DxiLegendComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiLegendComponent.prototype, "backgroundColor", {
            get: function () {
                return this._getOption('backgroundColor');
            },
            set: function (value) {
                this._setOption('backgroundColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "border", {
            get: function () {
                return this._getOption('border');
            },
            set: function (value) {
                this._setOption('border', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "columnCount", {
            get: function () {
                return this._getOption('columnCount');
            },
            set: function (value) {
                this._setOption('columnCount', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "columnItemSpacing", {
            get: function () {
                return this._getOption('columnItemSpacing');
            },
            set: function (value) {
                this._setOption('columnItemSpacing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "customizeHint", {
            get: function () {
                return this._getOption('customizeHint');
            },
            set: function (value) {
                this._setOption('customizeHint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "customizeItems", {
            get: function () {
                return this._getOption('customizeItems');
            },
            set: function (value) {
                this._setOption('customizeItems', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "customizeText", {
            get: function () {
                return this._getOption('customizeText');
            },
            set: function (value) {
                this._setOption('customizeText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "font", {
            get: function () {
                return this._getOption('font');
            },
            set: function (value) {
                this._setOption('font', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "horizontalAlignment", {
            get: function () {
                return this._getOption('horizontalAlignment');
            },
            set: function (value) {
                this._setOption('horizontalAlignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "itemsAlignment", {
            get: function () {
                return this._getOption('itemsAlignment');
            },
            set: function (value) {
                this._setOption('itemsAlignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "itemTextPosition", {
            get: function () {
                return this._getOption('itemTextPosition');
            },
            set: function (value) {
                this._setOption('itemTextPosition', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "margin", {
            get: function () {
                return this._getOption('margin');
            },
            set: function (value) {
                this._setOption('margin', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "markerColor", {
            get: function () {
                return this._getOption('markerColor');
            },
            set: function (value) {
                this._setOption('markerColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "markerShape", {
            get: function () {
                return this._getOption('markerShape');
            },
            set: function (value) {
                this._setOption('markerShape', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "markerSize", {
            get: function () {
                return this._getOption('markerSize');
            },
            set: function (value) {
                this._setOption('markerSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "orientation", {
            get: function () {
                return this._getOption('orientation');
            },
            set: function (value) {
                this._setOption('orientation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "paddingLeftRight", {
            get: function () {
                return this._getOption('paddingLeftRight');
            },
            set: function (value) {
                this._setOption('paddingLeftRight', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "paddingTopBottom", {
            get: function () {
                return this._getOption('paddingTopBottom');
            },
            set: function (value) {
                this._setOption('paddingTopBottom', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "rowCount", {
            get: function () {
                return this._getOption('rowCount');
            },
            set: function (value) {
                this._setOption('rowCount', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "rowItemSpacing", {
            get: function () {
                return this._getOption('rowItemSpacing');
            },
            set: function (value) {
                this._setOption('rowItemSpacing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "source", {
            get: function () {
                return this._getOption('source');
            },
            set: function (value) {
                this._setOption('source', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "title", {
            get: function () {
                return this._getOption('title');
            },
            set: function (value) {
                this._setOption('title', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "verticalAlignment", {
            get: function () {
                return this._getOption('verticalAlignment');
            },
            set: function (value) {
                this._setOption('verticalAlignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiLegendComponent.prototype, "_optionPath", {
            get: function () {
                return 'legends';
            },
            enumerable: true,
            configurable: true
        });
        DxiLegendComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "backgroundColor", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "border", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "columnCount", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "columnItemSpacing", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "customizeHint", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "customizeItems", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "customizeText", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "font", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "horizontalAlignment", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "itemsAlignment", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "itemTextPosition", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "margin", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "markerColor", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "markerShape", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "markerSize", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "orientation", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "paddingLeftRight", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "paddingTopBottom", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "rowCount", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "rowItemSpacing", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "source", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "title", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "verticalAlignment", null);
        __decorate([
            core.Input()
        ], DxiLegendComponent.prototype, "visible", null);
        DxiLegendComponent = __decorate([
            core.Component({
                selector: 'dxi-legend',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiLegendComponent);
        return DxiLegendComponent;
    }(core$1.CollectionNestedOption));
    var DxiLegendModule = /** @class */ (function () {
        function DxiLegendModule() {
        }
        DxiLegendModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiLegendComponent
                ],
                exports: [
                    DxiLegendComponent
                ],
            })
        ], DxiLegendModule);
        return DxiLegendModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoLegendComponent = /** @class */ (function (_super) {
        __extends(DxoLegendComponent, _super);
        function DxoLegendComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoLegendComponent.prototype, "backgroundColor", {
            get: function () {
                return this._getOption('backgroundColor');
            },
            set: function (value) {
                this._setOption('backgroundColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "border", {
            get: function () {
                return this._getOption('border');
            },
            set: function (value) {
                this._setOption('border', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "columnCount", {
            get: function () {
                return this._getOption('columnCount');
            },
            set: function (value) {
                this._setOption('columnCount', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "columnItemSpacing", {
            get: function () {
                return this._getOption('columnItemSpacing');
            },
            set: function (value) {
                this._setOption('columnItemSpacing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "customizeHint", {
            get: function () {
                return this._getOption('customizeHint');
            },
            set: function (value) {
                this._setOption('customizeHint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "customizeItems", {
            get: function () {
                return this._getOption('customizeItems');
            },
            set: function (value) {
                this._setOption('customizeItems', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "customizeText", {
            get: function () {
                return this._getOption('customizeText');
            },
            set: function (value) {
                this._setOption('customizeText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "font", {
            get: function () {
                return this._getOption('font');
            },
            set: function (value) {
                this._setOption('font', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "horizontalAlignment", {
            get: function () {
                return this._getOption('horizontalAlignment');
            },
            set: function (value) {
                this._setOption('horizontalAlignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "itemsAlignment", {
            get: function () {
                return this._getOption('itemsAlignment');
            },
            set: function (value) {
                this._setOption('itemsAlignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "itemTextFormat", {
            get: function () {
                return this._getOption('itemTextFormat');
            },
            set: function (value) {
                this._setOption('itemTextFormat', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "itemTextPosition", {
            get: function () {
                return this._getOption('itemTextPosition');
            },
            set: function (value) {
                this._setOption('itemTextPosition', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "margin", {
            get: function () {
                return this._getOption('margin');
            },
            set: function (value) {
                this._setOption('margin', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "markerSize", {
            get: function () {
                return this._getOption('markerSize');
            },
            set: function (value) {
                this._setOption('markerSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "orientation", {
            get: function () {
                return this._getOption('orientation');
            },
            set: function (value) {
                this._setOption('orientation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "paddingLeftRight", {
            get: function () {
                return this._getOption('paddingLeftRight');
            },
            set: function (value) {
                this._setOption('paddingLeftRight', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "paddingTopBottom", {
            get: function () {
                return this._getOption('paddingTopBottom');
            },
            set: function (value) {
                this._setOption('paddingTopBottom', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "rowCount", {
            get: function () {
                return this._getOption('rowCount');
            },
            set: function (value) {
                this._setOption('rowCount', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "rowItemSpacing", {
            get: function () {
                return this._getOption('rowItemSpacing');
            },
            set: function (value) {
                this._setOption('rowItemSpacing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "title", {
            get: function () {
                return this._getOption('title');
            },
            set: function (value) {
                this._setOption('title', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "verticalAlignment", {
            get: function () {
                return this._getOption('verticalAlignment');
            },
            set: function (value) {
                this._setOption('verticalAlignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "hoverMode", {
            get: function () {
                return this._getOption('hoverMode');
            },
            set: function (value) {
                this._setOption('hoverMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "position", {
            get: function () {
                return this._getOption('position');
            },
            set: function (value) {
                this._setOption('position', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLegendComponent.prototype, "_optionPath", {
            get: function () {
                return 'legend';
            },
            enumerable: true,
            configurable: true
        });
        DxoLegendComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "backgroundColor", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "border", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "columnCount", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "columnItemSpacing", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "customizeHint", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "customizeItems", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "customizeText", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "font", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "horizontalAlignment", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "itemsAlignment", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "itemTextFormat", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "itemTextPosition", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "margin", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "markerSize", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "orientation", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "paddingLeftRight", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "paddingTopBottom", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "rowCount", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "rowItemSpacing", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "title", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "verticalAlignment", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "hoverMode", null);
        __decorate([
            core.Input()
        ], DxoLegendComponent.prototype, "position", null);
        DxoLegendComponent = __decorate([
            core.Component({
                selector: 'dxo-legend',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoLegendComponent);
        return DxoLegendComponent;
    }(core$1.NestedOption));
    var DxoLegendModule = /** @class */ (function () {
        function DxoLegendModule() {
        }
        DxoLegendModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoLegendComponent
                ],
                exports: [
                    DxoLegendComponent
                ],
            })
        ], DxoLegendModule);
        return DxoLegendModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoLineComponent = /** @class */ (function (_super) {
        __extends(DxoLineComponent, _super);
        function DxoLineComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoLineComponent.prototype, "_optionPath", {
            get: function () {
                return 'line';
            },
            enumerable: true,
            configurable: true
        });
        DxoLineComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoLineComponent = __decorate([
            core.Component({
                selector: 'dxo-line',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width',
                    'closed'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoLineComponent);
        return DxoLineComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoLineModule = /** @class */ (function () {
        function DxoLineModule() {
        }
        DxoLineModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoLineComponent
                ],
                exports: [
                    DxoLineComponent
                ],
            })
        ], DxoLineModule);
        return DxoLineModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoLinkComponent = /** @class */ (function (_super) {
        __extends(DxoLinkComponent, _super);
        function DxoLinkComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoLinkComponent.prototype, "border", {
            get: function () {
                return this._getOption('border');
            },
            set: function (value) {
                this._setOption('border', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLinkComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLinkComponent.prototype, "colorMode", {
            get: function () {
                return this._getOption('colorMode');
            },
            set: function (value) {
                this._setOption('colorMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLinkComponent.prototype, "hoverStyle", {
            get: function () {
                return this._getOption('hoverStyle');
            },
            set: function (value) {
                this._setOption('hoverStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLinkComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLinkComponent.prototype, "_optionPath", {
            get: function () {
                return 'link';
            },
            enumerable: true,
            configurable: true
        });
        DxoLinkComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoLinkComponent.prototype, "border", null);
        __decorate([
            core.Input()
        ], DxoLinkComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoLinkComponent.prototype, "colorMode", null);
        __decorate([
            core.Input()
        ], DxoLinkComponent.prototype, "hoverStyle", null);
        __decorate([
            core.Input()
        ], DxoLinkComponent.prototype, "opacity", null);
        DxoLinkComponent = __decorate([
            core.Component({
                selector: 'dxo-link',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoLinkComponent);
        return DxoLinkComponent;
    }(core$1.NestedOption));
    var DxoLinkModule = /** @class */ (function () {
        function DxoLinkModule() {
        }
        DxoLinkModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoLinkComponent
                ],
                exports: [
                    DxoLinkComponent
                ],
            })
        ], DxoLinkModule);
        return DxoLinkModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoLoadPanelComponent = /** @class */ (function (_super) {
        __extends(DxoLoadPanelComponent, _super);
        function DxoLoadPanelComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoLoadPanelComponent.prototype, "enabled", {
            get: function () {
                return this._getOption('enabled');
            },
            set: function (value) {
                this._setOption('enabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLoadPanelComponent.prototype, "height", {
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLoadPanelComponent.prototype, "indicatorSrc", {
            get: function () {
                return this._getOption('indicatorSrc');
            },
            set: function (value) {
                this._setOption('indicatorSrc', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLoadPanelComponent.prototype, "shading", {
            get: function () {
                return this._getOption('shading');
            },
            set: function (value) {
                this._setOption('shading', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLoadPanelComponent.prototype, "shadingColor", {
            get: function () {
                return this._getOption('shadingColor');
            },
            set: function (value) {
                this._setOption('shadingColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLoadPanelComponent.prototype, "showIndicator", {
            get: function () {
                return this._getOption('showIndicator');
            },
            set: function (value) {
                this._setOption('showIndicator', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLoadPanelComponent.prototype, "showPane", {
            get: function () {
                return this._getOption('showPane');
            },
            set: function (value) {
                this._setOption('showPane', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLoadPanelComponent.prototype, "text", {
            get: function () {
                return this._getOption('text');
            },
            set: function (value) {
                this._setOption('text', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLoadPanelComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLoadPanelComponent.prototype, "_optionPath", {
            get: function () {
                return 'loadPanel';
            },
            enumerable: true,
            configurable: true
        });
        DxoLoadPanelComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoLoadPanelComponent.prototype, "enabled", null);
        __decorate([
            core.Input()
        ], DxoLoadPanelComponent.prototype, "height", null);
        __decorate([
            core.Input()
        ], DxoLoadPanelComponent.prototype, "indicatorSrc", null);
        __decorate([
            core.Input()
        ], DxoLoadPanelComponent.prototype, "shading", null);
        __decorate([
            core.Input()
        ], DxoLoadPanelComponent.prototype, "shadingColor", null);
        __decorate([
            core.Input()
        ], DxoLoadPanelComponent.prototype, "showIndicator", null);
        __decorate([
            core.Input()
        ], DxoLoadPanelComponent.prototype, "showPane", null);
        __decorate([
            core.Input()
        ], DxoLoadPanelComponent.prototype, "text", null);
        __decorate([
            core.Input()
        ], DxoLoadPanelComponent.prototype, "width", null);
        DxoLoadPanelComponent = __decorate([
            core.Component({
                selector: 'dxo-load-panel',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoLoadPanelComponent);
        return DxoLoadPanelComponent;
    }(core$1.NestedOption));
    var DxoLoadPanelModule = /** @class */ (function () {
        function DxoLoadPanelModule() {
        }
        DxoLoadPanelModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoLoadPanelComponent
                ],
                exports: [
                    DxoLoadPanelComponent
                ],
            })
        ], DxoLoadPanelModule);
        return DxoLoadPanelModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoLoadingIndicatorComponent = /** @class */ (function (_super) {
        __extends(DxoLoadingIndicatorComponent, _super);
        function DxoLoadingIndicatorComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            _this._createEventEmitters([
                { emit: 'showChange' }
            ]);
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoLoadingIndicatorComponent.prototype, "backgroundColor", {
            get: function () {
                return this._getOption('backgroundColor');
            },
            set: function (value) {
                this._setOption('backgroundColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLoadingIndicatorComponent.prototype, "font", {
            get: function () {
                return this._getOption('font');
            },
            set: function (value) {
                this._setOption('font', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLoadingIndicatorComponent.prototype, "show", {
            get: function () {
                return this._getOption('show');
            },
            set: function (value) {
                this._setOption('show', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLoadingIndicatorComponent.prototype, "text", {
            get: function () {
                return this._getOption('text');
            },
            set: function (value) {
                this._setOption('text', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLoadingIndicatorComponent.prototype, "enabled", {
            get: function () {
                return this._getOption('enabled');
            },
            set: function (value) {
                this._setOption('enabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLoadingIndicatorComponent.prototype, "_optionPath", {
            get: function () {
                return 'loadingIndicator';
            },
            enumerable: true,
            configurable: true
        });
        DxoLoadingIndicatorComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoLoadingIndicatorComponent.prototype, "backgroundColor", null);
        __decorate([
            core.Input()
        ], DxoLoadingIndicatorComponent.prototype, "font", null);
        __decorate([
            core.Input()
        ], DxoLoadingIndicatorComponent.prototype, "show", null);
        __decorate([
            core.Input()
        ], DxoLoadingIndicatorComponent.prototype, "text", null);
        __decorate([
            core.Input()
        ], DxoLoadingIndicatorComponent.prototype, "enabled", null);
        __decorate([
            core.Output()
        ], DxoLoadingIndicatorComponent.prototype, "showChange", void 0);
        DxoLoadingIndicatorComponent = __decorate([
            core.Component({
                selector: 'dxo-loading-indicator',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoLoadingIndicatorComponent);
        return DxoLoadingIndicatorComponent;
    }(core$1.NestedOption));
    var DxoLoadingIndicatorModule = /** @class */ (function () {
        function DxoLoadingIndicatorModule() {
        }
        DxoLoadingIndicatorModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoLoadingIndicatorComponent
                ],
                exports: [
                    DxoLoadingIndicatorComponent
                ],
            })
        ], DxoLoadingIndicatorModule);
        return DxoLoadingIndicatorModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoLookupComponent = /** @class */ (function (_super) {
        __extends(DxoLookupComponent, _super);
        function DxoLookupComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoLookupComponent.prototype, "allowClearing", {
            get: function () {
                return this._getOption('allowClearing');
            },
            set: function (value) {
                this._setOption('allowClearing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLookupComponent.prototype, "dataSource", {
            get: function () {
                return this._getOption('dataSource');
            },
            set: function (value) {
                this._setOption('dataSource', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLookupComponent.prototype, "displayExpr", {
            get: function () {
                return this._getOption('displayExpr');
            },
            set: function (value) {
                this._setOption('displayExpr', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLookupComponent.prototype, "valueExpr", {
            get: function () {
                return this._getOption('valueExpr');
            },
            set: function (value) {
                this._setOption('valueExpr', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoLookupComponent.prototype, "_optionPath", {
            get: function () {
                return 'lookup';
            },
            enumerable: true,
            configurable: true
        });
        DxoLookupComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoLookupComponent.prototype, "allowClearing", null);
        __decorate([
            core.Input()
        ], DxoLookupComponent.prototype, "dataSource", null);
        __decorate([
            core.Input()
        ], DxoLookupComponent.prototype, "displayExpr", null);
        __decorate([
            core.Input()
        ], DxoLookupComponent.prototype, "valueExpr", null);
        DxoLookupComponent = __decorate([
            core.Component({
                selector: 'dxo-lookup',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoLookupComponent);
        return DxoLookupComponent;
    }(core$1.NestedOption));
    var DxoLookupModule = /** @class */ (function () {
        function DxoLookupModule() {
        }
        DxoLookupModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoLookupComponent
                ],
                exports: [
                    DxoLookupComponent
                ],
            })
        ], DxoLookupModule);
        return DxoLookupModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoMarginComponent = /** @class */ (function (_super) {
        __extends(DxoMarginComponent, _super);
        function DxoMarginComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoMarginComponent.prototype, "bottom", {
            get: function () {
                return this._getOption('bottom');
            },
            set: function (value) {
                this._setOption('bottom', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMarginComponent.prototype, "left", {
            get: function () {
                return this._getOption('left');
            },
            set: function (value) {
                this._setOption('left', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMarginComponent.prototype, "right", {
            get: function () {
                return this._getOption('right');
            },
            set: function (value) {
                this._setOption('right', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMarginComponent.prototype, "top", {
            get: function () {
                return this._getOption('top');
            },
            set: function (value) {
                this._setOption('top', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMarginComponent.prototype, "_optionPath", {
            get: function () {
                return 'margin';
            },
            enumerable: true,
            configurable: true
        });
        DxoMarginComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoMarginComponent.prototype, "bottom", null);
        __decorate([
            core.Input()
        ], DxoMarginComponent.prototype, "left", null);
        __decorate([
            core.Input()
        ], DxoMarginComponent.prototype, "right", null);
        __decorate([
            core.Input()
        ], DxoMarginComponent.prototype, "top", null);
        DxoMarginComponent = __decorate([
            core.Component({
                selector: 'dxo-margin',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoMarginComponent);
        return DxoMarginComponent;
    }(core$1.NestedOption));
    var DxoMarginModule = /** @class */ (function () {
        function DxoMarginModule() {
        }
        DxoMarginModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoMarginComponent
                ],
                exports: [
                    DxoMarginComponent
                ],
            })
        ], DxoMarginModule);
        return DxoMarginModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiMarkerComponent = /** @class */ (function (_super) {
        __extends(DxiMarkerComponent, _super);
        function DxiMarkerComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiMarkerComponent.prototype, "iconSrc", {
            get: function () {
                return this._getOption('iconSrc');
            },
            set: function (value) {
                this._setOption('iconSrc', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiMarkerComponent.prototype, "location", {
            get: function () {
                return this._getOption('location');
            },
            set: function (value) {
                this._setOption('location', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiMarkerComponent.prototype, "onClick", {
            get: function () {
                return this._getOption('onClick');
            },
            set: function (value) {
                this._setOption('onClick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiMarkerComponent.prototype, "tooltip", {
            get: function () {
                return this._getOption('tooltip');
            },
            set: function (value) {
                this._setOption('tooltip', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiMarkerComponent.prototype, "_optionPath", {
            get: function () {
                return 'markers';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiMarkerComponent.prototype, "locationChildren", {
            get: function () {
                return this._getOption('location');
            },
            set: function (value) {
                this.setChildren('location', value);
            },
            enumerable: true,
            configurable: true
        });
        DxiMarkerComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiMarkerComponent.prototype, "iconSrc", null);
        __decorate([
            core.Input()
        ], DxiMarkerComponent.prototype, "location", null);
        __decorate([
            core.Input()
        ], DxiMarkerComponent.prototype, "onClick", null);
        __decorate([
            core.Input()
        ], DxiMarkerComponent.prototype, "tooltip", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiLocationComponent; }))
        ], DxiMarkerComponent.prototype, "locationChildren", null);
        DxiMarkerComponent = __decorate([
            core.Component({
                selector: 'dxi-marker',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiMarkerComponent);
        return DxiMarkerComponent;
    }(core$1.CollectionNestedOption));
    var DxiMarkerModule = /** @class */ (function () {
        function DxiMarkerModule() {
        }
        DxiMarkerModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiMarkerComponent
                ],
                exports: [
                    DxiMarkerComponent
                ],
            })
        ], DxiMarkerModule);
        return DxiMarkerModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoMarkerComponent = /** @class */ (function (_super) {
        __extends(DxoMarkerComponent, _super);
        function DxoMarkerComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoMarkerComponent.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMarkerComponent.prototype, "separatorHeight", {
            get: function () {
                return this._getOption('separatorHeight');
            },
            set: function (value) {
                this._setOption('separatorHeight', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMarkerComponent.prototype, "textLeftIndent", {
            get: function () {
                return this._getOption('textLeftIndent');
            },
            set: function (value) {
                this._setOption('textLeftIndent', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMarkerComponent.prototype, "textTopIndent", {
            get: function () {
                return this._getOption('textTopIndent');
            },
            set: function (value) {
                this._setOption('textTopIndent', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMarkerComponent.prototype, "topIndent", {
            get: function () {
                return this._getOption('topIndent');
            },
            set: function (value) {
                this._setOption('topIndent', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMarkerComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMarkerComponent.prototype, "_optionPath", {
            get: function () {
                return 'marker';
            },
            enumerable: true,
            configurable: true
        });
        DxoMarkerComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoMarkerComponent.prototype, "label", null);
        __decorate([
            core.Input()
        ], DxoMarkerComponent.prototype, "separatorHeight", null);
        __decorate([
            core.Input()
        ], DxoMarkerComponent.prototype, "textLeftIndent", null);
        __decorate([
            core.Input()
        ], DxoMarkerComponent.prototype, "textTopIndent", null);
        __decorate([
            core.Input()
        ], DxoMarkerComponent.prototype, "topIndent", null);
        __decorate([
            core.Input()
        ], DxoMarkerComponent.prototype, "visible", null);
        DxoMarkerComponent = __decorate([
            core.Component({
                selector: 'dxo-marker',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoMarkerComponent);
        return DxoMarkerComponent;
    }(core$1.NestedOption));
    var DxoMarkerModule = /** @class */ (function () {
        function DxoMarkerModule() {
        }
        DxoMarkerModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoMarkerComponent
                ],
                exports: [
                    DxoMarkerComponent
                ],
            })
        ], DxoMarkerModule);
        return DxoMarkerModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoMasterDetailComponent = /** @class */ (function (_super) {
        __extends(DxoMasterDetailComponent, _super);
        function DxoMasterDetailComponent(parentOptionHost, optionHost, renderer, document, templateHost, element) {
            var _this = _super.call(this) || this;
            _this.renderer = renderer;
            _this.document = document;
            _this.element = element;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            templateHost.setHost(_this);
            return _this;
        }
        Object.defineProperty(DxoMasterDetailComponent.prototype, "autoExpandAll", {
            get: function () {
                return this._getOption('autoExpandAll');
            },
            set: function (value) {
                this._setOption('autoExpandAll', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMasterDetailComponent.prototype, "enabled", {
            get: function () {
                return this._getOption('enabled');
            },
            set: function (value) {
                this._setOption('enabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMasterDetailComponent.prototype, "template", {
            get: function () {
                return this._getOption('template');
            },
            set: function (value) {
                this._setOption('template', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMasterDetailComponent.prototype, "_optionPath", {
            get: function () {
                return 'masterDetail';
            },
            enumerable: true,
            configurable: true
        });
        DxoMasterDetailComponent.prototype.setTemplate = function (template) {
            this.template = template;
        };
        DxoMasterDetailComponent.prototype.ngAfterViewInit = function () {
            core$1.extractTemplate(this, this.element, this.renderer, this.document);
        };
        DxoMasterDetailComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] },
            { type: core.Renderer2 },
            { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] },
            { type: core$1.DxTemplateHost, decorators: [{ type: core.Host }] },
            { type: core.ElementRef }
        ]; };
        __decorate([
            core.Input()
        ], DxoMasterDetailComponent.prototype, "autoExpandAll", null);
        __decorate([
            core.Input()
        ], DxoMasterDetailComponent.prototype, "enabled", null);
        __decorate([
            core.Input()
        ], DxoMasterDetailComponent.prototype, "template", null);
        DxoMasterDetailComponent = __decorate([
            core.Component({
                selector: 'dxo-master-detail',
                template: '<ng-content></ng-content>',
                providers: [core$1.NestedOptionHost, core$1.DxTemplateHost],
                styles: [':host { display: block; }']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host()),
            __param(3, core.Inject(common.DOCUMENT)),
            __param(4, core.Host())
        ], DxoMasterDetailComponent);
        return DxoMasterDetailComponent;
    }(core$1.NestedOption));
    var DxoMasterDetailModule = /** @class */ (function () {
        function DxoMasterDetailModule() {
        }
        DxoMasterDetailModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoMasterDetailComponent
                ],
                exports: [
                    DxoMasterDetailComponent
                ],
            })
        ], DxoMasterDetailModule);
        return DxoMasterDetailModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoMaxRangeComponent = /** @class */ (function (_super) {
        __extends(DxoMaxRangeComponent, _super);
        function DxoMaxRangeComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoMaxRangeComponent.prototype, "days", {
            get: function () {
                return this._getOption('days');
            },
            set: function (value) {
                this._setOption('days', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMaxRangeComponent.prototype, "hours", {
            get: function () {
                return this._getOption('hours');
            },
            set: function (value) {
                this._setOption('hours', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMaxRangeComponent.prototype, "milliseconds", {
            get: function () {
                return this._getOption('milliseconds');
            },
            set: function (value) {
                this._setOption('milliseconds', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMaxRangeComponent.prototype, "minutes", {
            get: function () {
                return this._getOption('minutes');
            },
            set: function (value) {
                this._setOption('minutes', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMaxRangeComponent.prototype, "months", {
            get: function () {
                return this._getOption('months');
            },
            set: function (value) {
                this._setOption('months', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMaxRangeComponent.prototype, "quarters", {
            get: function () {
                return this._getOption('quarters');
            },
            set: function (value) {
                this._setOption('quarters', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMaxRangeComponent.prototype, "seconds", {
            get: function () {
                return this._getOption('seconds');
            },
            set: function (value) {
                this._setOption('seconds', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMaxRangeComponent.prototype, "weeks", {
            get: function () {
                return this._getOption('weeks');
            },
            set: function (value) {
                this._setOption('weeks', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMaxRangeComponent.prototype, "years", {
            get: function () {
                return this._getOption('years');
            },
            set: function (value) {
                this._setOption('years', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMaxRangeComponent.prototype, "_optionPath", {
            get: function () {
                return 'maxRange';
            },
            enumerable: true,
            configurable: true
        });
        DxoMaxRangeComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoMaxRangeComponent.prototype, "days", null);
        __decorate([
            core.Input()
        ], DxoMaxRangeComponent.prototype, "hours", null);
        __decorate([
            core.Input()
        ], DxoMaxRangeComponent.prototype, "milliseconds", null);
        __decorate([
            core.Input()
        ], DxoMaxRangeComponent.prototype, "minutes", null);
        __decorate([
            core.Input()
        ], DxoMaxRangeComponent.prototype, "months", null);
        __decorate([
            core.Input()
        ], DxoMaxRangeComponent.prototype, "quarters", null);
        __decorate([
            core.Input()
        ], DxoMaxRangeComponent.prototype, "seconds", null);
        __decorate([
            core.Input()
        ], DxoMaxRangeComponent.prototype, "weeks", null);
        __decorate([
            core.Input()
        ], DxoMaxRangeComponent.prototype, "years", null);
        DxoMaxRangeComponent = __decorate([
            core.Component({
                selector: 'dxo-max-range',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoMaxRangeComponent);
        return DxoMaxRangeComponent;
    }(core$1.NestedOption));
    var DxoMaxRangeModule = /** @class */ (function () {
        function DxoMaxRangeModule() {
        }
        DxoMaxRangeModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoMaxRangeComponent
                ],
                exports: [
                    DxoMaxRangeComponent
                ],
            })
        ], DxoMaxRangeModule);
        return DxoMaxRangeModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoHtmlEditorMediaResizing = /** @class */ (function (_super) {
        __extends(DxoHtmlEditorMediaResizing, _super);
        function DxoHtmlEditorMediaResizing() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoHtmlEditorMediaResizing.prototype, "allowedTargets", {
            get: function () {
                return this._getOption('allowedTargets');
            },
            set: function (value) {
                this._setOption('allowedTargets', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHtmlEditorMediaResizing.prototype, "enabled", {
            get: function () {
                return this._getOption('enabled');
            },
            set: function (value) {
                this._setOption('enabled', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoHtmlEditorMediaResizing;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoMediaResizingComponent = /** @class */ (function (_super) {
        __extends(DxoMediaResizingComponent, _super);
        function DxoMediaResizingComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoMediaResizingComponent.prototype, "_optionPath", {
            get: function () {
                return 'mediaResizing';
            },
            enumerable: true,
            configurable: true
        });
        DxoMediaResizingComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoMediaResizingComponent = __decorate([
            core.Component({
                selector: 'dxo-media-resizing',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'allowedTargets',
                    'enabled'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoMediaResizingComponent);
        return DxoMediaResizingComponent;
    }(DxoHtmlEditorMediaResizing));
    var DxoMediaResizingModule = /** @class */ (function () {
        function DxoMediaResizingModule() {
        }
        DxoMediaResizingModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoMediaResizingComponent
                ],
                exports: [
                    DxoMediaResizingComponent
                ],
            })
        ], DxoMediaResizingModule);
        return DxoMediaResizingModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiHtmlEditorMention = /** @class */ (function (_super) {
        __extends(DxiHtmlEditorMention, _super);
        function DxiHtmlEditorMention() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxiHtmlEditorMention.prototype, "dataSource", {
            get: function () {
                return this._getOption('dataSource');
            },
            set: function (value) {
                this._setOption('dataSource', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiHtmlEditorMention.prototype, "displayExpr", {
            get: function () {
                return this._getOption('displayExpr');
            },
            set: function (value) {
                this._setOption('displayExpr', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiHtmlEditorMention.prototype, "itemTemplate", {
            get: function () {
                return this._getOption('itemTemplate');
            },
            set: function (value) {
                this._setOption('itemTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiHtmlEditorMention.prototype, "marker", {
            get: function () {
                return this._getOption('marker');
            },
            set: function (value) {
                this._setOption('marker', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiHtmlEditorMention.prototype, "minSearchLength", {
            get: function () {
                return this._getOption('minSearchLength');
            },
            set: function (value) {
                this._setOption('minSearchLength', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiHtmlEditorMention.prototype, "searchExpr", {
            get: function () {
                return this._getOption('searchExpr');
            },
            set: function (value) {
                this._setOption('searchExpr', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiHtmlEditorMention.prototype, "searchTimeout", {
            get: function () {
                return this._getOption('searchTimeout');
            },
            set: function (value) {
                this._setOption('searchTimeout', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiHtmlEditorMention.prototype, "template", {
            get: function () {
                return this._getOption('template');
            },
            set: function (value) {
                this._setOption('template', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiHtmlEditorMention.prototype, "valueExpr", {
            get: function () {
                return this._getOption('valueExpr');
            },
            set: function (value) {
                this._setOption('valueExpr', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxiHtmlEditorMention;
    }(core$1.CollectionNestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiMentionComponent = /** @class */ (function (_super) {
        __extends(DxiMentionComponent, _super);
        function DxiMentionComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiMentionComponent.prototype, "_optionPath", {
            get: function () {
                return 'mentions';
            },
            enumerable: true,
            configurable: true
        });
        DxiMentionComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxiMentionComponent = __decorate([
            core.Component({
                selector: 'dxi-mention',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'dataSource',
                    'displayExpr',
                    'itemTemplate',
                    'marker',
                    'minSearchLength',
                    'searchExpr',
                    'searchTimeout',
                    'template',
                    'valueExpr'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiMentionComponent);
        return DxiMentionComponent;
    }(DxiHtmlEditorMention));
    var DxiMentionModule = /** @class */ (function () {
        function DxiMentionModule() {
        }
        DxiMentionModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiMentionComponent
                ],
                exports: [
                    DxiMentionComponent
                ],
            })
        ], DxiMentionModule);
        return DxiMentionModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiMenuItemComponent = /** @class */ (function (_super) {
        __extends(DxiMenuItemComponent, _super);
        function DxiMenuItemComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiMenuItemComponent.prototype, "action", {
            get: function () {
                return this._getOption('action');
            },
            set: function (value) {
                this._setOption('action', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiMenuItemComponent.prototype, "text", {
            get: function () {
                return this._getOption('text');
            },
            set: function (value) {
                this._setOption('text', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiMenuItemComponent.prototype, "_optionPath", {
            get: function () {
                return 'menuItems';
            },
            enumerable: true,
            configurable: true
        });
        DxiMenuItemComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiMenuItemComponent.prototype, "action", null);
        __decorate([
            core.Input()
        ], DxiMenuItemComponent.prototype, "text", null);
        DxiMenuItemComponent = __decorate([
            core.Component({
                selector: 'dxi-menu-item',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiMenuItemComponent);
        return DxiMenuItemComponent;
    }(core$1.CollectionNestedOption));
    var DxiMenuItemModule = /** @class */ (function () {
        function DxiMenuItemModule() {
        }
        DxiMenuItemModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiMenuItemComponent
                ],
                exports: [
                    DxiMenuItemComponent
                ],
            })
        ], DxiMenuItemModule);
        return DxiMenuItemModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoMinRangeComponent = /** @class */ (function (_super) {
        __extends(DxoMinRangeComponent, _super);
        function DxoMinRangeComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoMinRangeComponent.prototype, "days", {
            get: function () {
                return this._getOption('days');
            },
            set: function (value) {
                this._setOption('days', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinRangeComponent.prototype, "hours", {
            get: function () {
                return this._getOption('hours');
            },
            set: function (value) {
                this._setOption('hours', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinRangeComponent.prototype, "milliseconds", {
            get: function () {
                return this._getOption('milliseconds');
            },
            set: function (value) {
                this._setOption('milliseconds', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinRangeComponent.prototype, "minutes", {
            get: function () {
                return this._getOption('minutes');
            },
            set: function (value) {
                this._setOption('minutes', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinRangeComponent.prototype, "months", {
            get: function () {
                return this._getOption('months');
            },
            set: function (value) {
                this._setOption('months', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinRangeComponent.prototype, "quarters", {
            get: function () {
                return this._getOption('quarters');
            },
            set: function (value) {
                this._setOption('quarters', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinRangeComponent.prototype, "seconds", {
            get: function () {
                return this._getOption('seconds');
            },
            set: function (value) {
                this._setOption('seconds', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinRangeComponent.prototype, "weeks", {
            get: function () {
                return this._getOption('weeks');
            },
            set: function (value) {
                this._setOption('weeks', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinRangeComponent.prototype, "years", {
            get: function () {
                return this._getOption('years');
            },
            set: function (value) {
                this._setOption('years', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinRangeComponent.prototype, "_optionPath", {
            get: function () {
                return 'minRange';
            },
            enumerable: true,
            configurable: true
        });
        DxoMinRangeComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoMinRangeComponent.prototype, "days", null);
        __decorate([
            core.Input()
        ], DxoMinRangeComponent.prototype, "hours", null);
        __decorate([
            core.Input()
        ], DxoMinRangeComponent.prototype, "milliseconds", null);
        __decorate([
            core.Input()
        ], DxoMinRangeComponent.prototype, "minutes", null);
        __decorate([
            core.Input()
        ], DxoMinRangeComponent.prototype, "months", null);
        __decorate([
            core.Input()
        ], DxoMinRangeComponent.prototype, "quarters", null);
        __decorate([
            core.Input()
        ], DxoMinRangeComponent.prototype, "seconds", null);
        __decorate([
            core.Input()
        ], DxoMinRangeComponent.prototype, "weeks", null);
        __decorate([
            core.Input()
        ], DxoMinRangeComponent.prototype, "years", null);
        DxoMinRangeComponent = __decorate([
            core.Component({
                selector: 'dxo-min-range',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoMinRangeComponent);
        return DxoMinRangeComponent;
    }(core$1.NestedOption));
    var DxoMinRangeModule = /** @class */ (function () {
        function DxoMinRangeModule() {
        }
        DxoMinRangeModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoMinRangeComponent
                ],
                exports: [
                    DxoMinRangeComponent
                ],
            })
        ], DxoMinRangeModule);
        return DxoMinRangeModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoMinVisualRangeLengthComponent = /** @class */ (function (_super) {
        __extends(DxoMinVisualRangeLengthComponent, _super);
        function DxoMinVisualRangeLengthComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "days", {
            get: function () {
                return this._getOption('days');
            },
            set: function (value) {
                this._setOption('days', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "hours", {
            get: function () {
                return this._getOption('hours');
            },
            set: function (value) {
                this._setOption('hours', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "milliseconds", {
            get: function () {
                return this._getOption('milliseconds');
            },
            set: function (value) {
                this._setOption('milliseconds', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "minutes", {
            get: function () {
                return this._getOption('minutes');
            },
            set: function (value) {
                this._setOption('minutes', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "months", {
            get: function () {
                return this._getOption('months');
            },
            set: function (value) {
                this._setOption('months', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "quarters", {
            get: function () {
                return this._getOption('quarters');
            },
            set: function (value) {
                this._setOption('quarters', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "seconds", {
            get: function () {
                return this._getOption('seconds');
            },
            set: function (value) {
                this._setOption('seconds', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "weeks", {
            get: function () {
                return this._getOption('weeks');
            },
            set: function (value) {
                this._setOption('weeks', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "years", {
            get: function () {
                return this._getOption('years');
            },
            set: function (value) {
                this._setOption('years', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinVisualRangeLengthComponent.prototype, "_optionPath", {
            get: function () {
                return 'minVisualRangeLength';
            },
            enumerable: true,
            configurable: true
        });
        DxoMinVisualRangeLengthComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoMinVisualRangeLengthComponent.prototype, "days", null);
        __decorate([
            core.Input()
        ], DxoMinVisualRangeLengthComponent.prototype, "hours", null);
        __decorate([
            core.Input()
        ], DxoMinVisualRangeLengthComponent.prototype, "milliseconds", null);
        __decorate([
            core.Input()
        ], DxoMinVisualRangeLengthComponent.prototype, "minutes", null);
        __decorate([
            core.Input()
        ], DxoMinVisualRangeLengthComponent.prototype, "months", null);
        __decorate([
            core.Input()
        ], DxoMinVisualRangeLengthComponent.prototype, "quarters", null);
        __decorate([
            core.Input()
        ], DxoMinVisualRangeLengthComponent.prototype, "seconds", null);
        __decorate([
            core.Input()
        ], DxoMinVisualRangeLengthComponent.prototype, "weeks", null);
        __decorate([
            core.Input()
        ], DxoMinVisualRangeLengthComponent.prototype, "years", null);
        DxoMinVisualRangeLengthComponent = __decorate([
            core.Component({
                selector: 'dxo-min-visual-range-length',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoMinVisualRangeLengthComponent);
        return DxoMinVisualRangeLengthComponent;
    }(core$1.NestedOption));
    var DxoMinVisualRangeLengthModule = /** @class */ (function () {
        function DxoMinVisualRangeLengthModule() {
        }
        DxoMinVisualRangeLengthModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoMinVisualRangeLengthComponent
                ],
                exports: [
                    DxoMinVisualRangeLengthComponent
                ],
            })
        ], DxoMinVisualRangeLengthModule);
        return DxoMinVisualRangeLengthModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoMinorGridComponent = /** @class */ (function (_super) {
        __extends(DxoMinorGridComponent, _super);
        function DxoMinorGridComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoMinorGridComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorGridComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorGridComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorGridComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorGridComponent.prototype, "_optionPath", {
            get: function () {
                return 'minorGrid';
            },
            enumerable: true,
            configurable: true
        });
        DxoMinorGridComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoMinorGridComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoMinorGridComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxoMinorGridComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxoMinorGridComponent.prototype, "width", null);
        DxoMinorGridComponent = __decorate([
            core.Component({
                selector: 'dxo-minor-grid',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoMinorGridComponent);
        return DxoMinorGridComponent;
    }(core$1.NestedOption));
    var DxoMinorGridModule = /** @class */ (function () {
        function DxoMinorGridModule() {
        }
        DxoMinorGridModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoMinorGridComponent
                ],
                exports: [
                    DxoMinorGridComponent
                ],
            })
        ], DxoMinorGridModule);
        return DxoMinorGridModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoMinorTickIntervalComponent = /** @class */ (function (_super) {
        __extends(DxoMinorTickIntervalComponent, _super);
        function DxoMinorTickIntervalComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "days", {
            get: function () {
                return this._getOption('days');
            },
            set: function (value) {
                this._setOption('days', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "hours", {
            get: function () {
                return this._getOption('hours');
            },
            set: function (value) {
                this._setOption('hours', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "milliseconds", {
            get: function () {
                return this._getOption('milliseconds');
            },
            set: function (value) {
                this._setOption('milliseconds', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "minutes", {
            get: function () {
                return this._getOption('minutes');
            },
            set: function (value) {
                this._setOption('minutes', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "months", {
            get: function () {
                return this._getOption('months');
            },
            set: function (value) {
                this._setOption('months', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "quarters", {
            get: function () {
                return this._getOption('quarters');
            },
            set: function (value) {
                this._setOption('quarters', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "seconds", {
            get: function () {
                return this._getOption('seconds');
            },
            set: function (value) {
                this._setOption('seconds', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "weeks", {
            get: function () {
                return this._getOption('weeks');
            },
            set: function (value) {
                this._setOption('weeks', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "years", {
            get: function () {
                return this._getOption('years');
            },
            set: function (value) {
                this._setOption('years', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorTickIntervalComponent.prototype, "_optionPath", {
            get: function () {
                return 'minorTickInterval';
            },
            enumerable: true,
            configurable: true
        });
        DxoMinorTickIntervalComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoMinorTickIntervalComponent.prototype, "days", null);
        __decorate([
            core.Input()
        ], DxoMinorTickIntervalComponent.prototype, "hours", null);
        __decorate([
            core.Input()
        ], DxoMinorTickIntervalComponent.prototype, "milliseconds", null);
        __decorate([
            core.Input()
        ], DxoMinorTickIntervalComponent.prototype, "minutes", null);
        __decorate([
            core.Input()
        ], DxoMinorTickIntervalComponent.prototype, "months", null);
        __decorate([
            core.Input()
        ], DxoMinorTickIntervalComponent.prototype, "quarters", null);
        __decorate([
            core.Input()
        ], DxoMinorTickIntervalComponent.prototype, "seconds", null);
        __decorate([
            core.Input()
        ], DxoMinorTickIntervalComponent.prototype, "weeks", null);
        __decorate([
            core.Input()
        ], DxoMinorTickIntervalComponent.prototype, "years", null);
        DxoMinorTickIntervalComponent = __decorate([
            core.Component({
                selector: 'dxo-minor-tick-interval',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoMinorTickIntervalComponent);
        return DxoMinorTickIntervalComponent;
    }(core$1.NestedOption));
    var DxoMinorTickIntervalModule = /** @class */ (function () {
        function DxoMinorTickIntervalModule() {
        }
        DxoMinorTickIntervalModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoMinorTickIntervalComponent
                ],
                exports: [
                    DxoMinorTickIntervalComponent
                ],
            })
        ], DxoMinorTickIntervalModule);
        return DxoMinorTickIntervalModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoMinorTickComponent = /** @class */ (function (_super) {
        __extends(DxoMinorTickComponent, _super);
        function DxoMinorTickComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoMinorTickComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorTickComponent.prototype, "length", {
            get: function () {
                return this._getOption('length');
            },
            set: function (value) {
                this._setOption('length', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorTickComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorTickComponent.prototype, "shift", {
            get: function () {
                return this._getOption('shift');
            },
            set: function (value) {
                this._setOption('shift', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorTickComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorTickComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMinorTickComponent.prototype, "_optionPath", {
            get: function () {
                return 'minorTick';
            },
            enumerable: true,
            configurable: true
        });
        DxoMinorTickComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoMinorTickComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoMinorTickComponent.prototype, "length", null);
        __decorate([
            core.Input()
        ], DxoMinorTickComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxoMinorTickComponent.prototype, "shift", null);
        __decorate([
            core.Input()
        ], DxoMinorTickComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxoMinorTickComponent.prototype, "width", null);
        DxoMinorTickComponent = __decorate([
            core.Component({
                selector: 'dxo-minor-tick',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoMinorTickComponent);
        return DxoMinorTickComponent;
    }(core$1.NestedOption));
    var DxoMinorTickModule = /** @class */ (function () {
        function DxoMinorTickModule() {
        }
        DxoMinorTickModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoMinorTickComponent
                ],
                exports: [
                    DxoMinorTickComponent
                ],
            })
        ], DxoMinorTickModule);
        return DxoMinorTickModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoMyComponent = /** @class */ (function (_super) {
        __extends(DxoMyComponent, _super);
        function DxoMyComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoMyComponent.prototype, "x", {
            get: function () {
                return this._getOption('x');
            },
            set: function (value) {
                this._setOption('x', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMyComponent.prototype, "y", {
            get: function () {
                return this._getOption('y');
            },
            set: function (value) {
                this._setOption('y', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoMyComponent.prototype, "_optionPath", {
            get: function () {
                return 'my';
            },
            enumerable: true,
            configurable: true
        });
        DxoMyComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoMyComponent.prototype, "x", null);
        __decorate([
            core.Input()
        ], DxoMyComponent.prototype, "y", null);
        DxoMyComponent = __decorate([
            core.Component({
                selector: 'dxo-my',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoMyComponent);
        return DxoMyComponent;
    }(core$1.NestedOption));
    var DxoMyModule = /** @class */ (function () {
        function DxoMyModule() {
        }
        DxoMyModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoMyComponent
                ],
                exports: [
                    DxoMyComponent
                ],
            })
        ], DxoMyModule);
        return DxoMyModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoNodeComponent = /** @class */ (function (_super) {
        __extends(DxoNodeComponent, _super);
        function DxoNodeComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoNodeComponent.prototype, "border", {
            get: function () {
                return this._getOption('border');
            },
            set: function (value) {
                this._setOption('border', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoNodeComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoNodeComponent.prototype, "hoverStyle", {
            get: function () {
                return this._getOption('hoverStyle');
            },
            set: function (value) {
                this._setOption('hoverStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoNodeComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoNodeComponent.prototype, "padding", {
            get: function () {
                return this._getOption('padding');
            },
            set: function (value) {
                this._setOption('padding', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoNodeComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoNodeComponent.prototype, "_optionPath", {
            get: function () {
                return 'node';
            },
            enumerable: true,
            configurable: true
        });
        DxoNodeComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoNodeComponent.prototype, "border", null);
        __decorate([
            core.Input()
        ], DxoNodeComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoNodeComponent.prototype, "hoverStyle", null);
        __decorate([
            core.Input()
        ], DxoNodeComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxoNodeComponent.prototype, "padding", null);
        __decorate([
            core.Input()
        ], DxoNodeComponent.prototype, "width", null);
        DxoNodeComponent = __decorate([
            core.Component({
                selector: 'dxo-node',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoNodeComponent);
        return DxoNodeComponent;
    }(core$1.NestedOption));
    var DxoNodeModule = /** @class */ (function () {
        function DxoNodeModule() {
        }
        DxoNodeModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoNodeComponent
                ],
                exports: [
                    DxoNodeComponent
                ],
            })
        ], DxoNodeModule);
        return DxoNodeModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoOffsetComponent = /** @class */ (function (_super) {
        __extends(DxoOffsetComponent, _super);
        function DxoOffsetComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoOffsetComponent.prototype, "x", {
            get: function () {
                return this._getOption('x');
            },
            set: function (value) {
                this._setOption('x', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoOffsetComponent.prototype, "y", {
            get: function () {
                return this._getOption('y');
            },
            set: function (value) {
                this._setOption('y', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoOffsetComponent.prototype, "_optionPath", {
            get: function () {
                return 'offset';
            },
            enumerable: true,
            configurable: true
        });
        DxoOffsetComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoOffsetComponent.prototype, "x", null);
        __decorate([
            core.Input()
        ], DxoOffsetComponent.prototype, "y", null);
        DxoOffsetComponent = __decorate([
            core.Component({
                selector: 'dxo-offset',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoOffsetComponent);
        return DxoOffsetComponent;
    }(core$1.NestedOption));
    var DxoOffsetModule = /** @class */ (function () {
        function DxoOffsetModule() {
        }
        DxoOffsetModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoOffsetComponent
                ],
                exports: [
                    DxoOffsetComponent
                ],
            })
        ], DxoOffsetModule);
        return DxoOffsetModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoOperationDescriptionsComponent = /** @class */ (function (_super) {
        __extends(DxoOperationDescriptionsComponent, _super);
        function DxoOperationDescriptionsComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "between", {
            get: function () {
                return this._getOption('between');
            },
            set: function (value) {
                this._setOption('between', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "contains", {
            get: function () {
                return this._getOption('contains');
            },
            set: function (value) {
                this._setOption('contains', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "endsWith", {
            get: function () {
                return this._getOption('endsWith');
            },
            set: function (value) {
                this._setOption('endsWith', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "equal", {
            get: function () {
                return this._getOption('equal');
            },
            set: function (value) {
                this._setOption('equal', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "greaterThan", {
            get: function () {
                return this._getOption('greaterThan');
            },
            set: function (value) {
                this._setOption('greaterThan', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "greaterThanOrEqual", {
            get: function () {
                return this._getOption('greaterThanOrEqual');
            },
            set: function (value) {
                this._setOption('greaterThanOrEqual', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "lessThan", {
            get: function () {
                return this._getOption('lessThan');
            },
            set: function (value) {
                this._setOption('lessThan', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "lessThanOrEqual", {
            get: function () {
                return this._getOption('lessThanOrEqual');
            },
            set: function (value) {
                this._setOption('lessThanOrEqual', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "notContains", {
            get: function () {
                return this._getOption('notContains');
            },
            set: function (value) {
                this._setOption('notContains', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "notEqual", {
            get: function () {
                return this._getOption('notEqual');
            },
            set: function (value) {
                this._setOption('notEqual', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "startsWith", {
            get: function () {
                return this._getOption('startsWith');
            },
            set: function (value) {
                this._setOption('startsWith', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoOperationDescriptionsComponent.prototype, "_optionPath", {
            get: function () {
                return 'operationDescriptions';
            },
            enumerable: true,
            configurable: true
        });
        DxoOperationDescriptionsComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoOperationDescriptionsComponent.prototype, "between", null);
        __decorate([
            core.Input()
        ], DxoOperationDescriptionsComponent.prototype, "contains", null);
        __decorate([
            core.Input()
        ], DxoOperationDescriptionsComponent.prototype, "endsWith", null);
        __decorate([
            core.Input()
        ], DxoOperationDescriptionsComponent.prototype, "equal", null);
        __decorate([
            core.Input()
        ], DxoOperationDescriptionsComponent.prototype, "greaterThan", null);
        __decorate([
            core.Input()
        ], DxoOperationDescriptionsComponent.prototype, "greaterThanOrEqual", null);
        __decorate([
            core.Input()
        ], DxoOperationDescriptionsComponent.prototype, "lessThan", null);
        __decorate([
            core.Input()
        ], DxoOperationDescriptionsComponent.prototype, "lessThanOrEqual", null);
        __decorate([
            core.Input()
        ], DxoOperationDescriptionsComponent.prototype, "notContains", null);
        __decorate([
            core.Input()
        ], DxoOperationDescriptionsComponent.prototype, "notEqual", null);
        __decorate([
            core.Input()
        ], DxoOperationDescriptionsComponent.prototype, "startsWith", null);
        DxoOperationDescriptionsComponent = __decorate([
            core.Component({
                selector: 'dxo-operation-descriptions',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoOperationDescriptionsComponent);
        return DxoOperationDescriptionsComponent;
    }(core$1.NestedOption));
    var DxoOperationDescriptionsModule = /** @class */ (function () {
        function DxoOperationDescriptionsModule() {
        }
        DxoOperationDescriptionsModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoOperationDescriptionsComponent
                ],
                exports: [
                    DxoOperationDescriptionsComponent
                ],
            })
        ], DxoOperationDescriptionsModule);
        return DxoOperationDescriptionsModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoOptionsComponent = /** @class */ (function (_super) {
        __extends(DxoOptionsComponent, _super);
        function DxoOptionsComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoOptionsComponent.prototype, "_optionPath", {
            get: function () {
                return 'options';
            },
            enumerable: true,
            configurable: true
        });
        DxoOptionsComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoOptionsComponent = __decorate([
            core.Component({
                selector: 'dxo-options',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'accessKey',
                    'activeStateEnabled',
                    'disabled',
                    'elementAttr',
                    'focusStateEnabled',
                    'height',
                    'hint',
                    'hoverStateEnabled',
                    'icon',
                    'onClick',
                    'onContentReady',
                    'onDisposing',
                    'onInitialized',
                    'onOptionChanged',
                    'rtlEnabled',
                    'stylingMode',
                    'tabIndex',
                    'template',
                    'text',
                    'type',
                    'useSubmitBehavior',
                    'validationGroup',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoOptionsComponent);
        return DxoOptionsComponent;
    }(DxoButtonOptions));
    var DxoOptionsModule = /** @class */ (function () {
        function DxoOptionsModule() {
        }
        DxoOptionsModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoOptionsComponent
                ],
                exports: [
                    DxoOptionsComponent
                ],
            })
        ], DxoOptionsModule);
        return DxoOptionsModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoPagerComponent = /** @class */ (function (_super) {
        __extends(DxoPagerComponent, _super);
        function DxoPagerComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoPagerComponent.prototype, "allowedPageSizes", {
            get: function () {
                return this._getOption('allowedPageSizes');
            },
            set: function (value) {
                this._setOption('allowedPageSizes', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPagerComponent.prototype, "infoText", {
            get: function () {
                return this._getOption('infoText');
            },
            set: function (value) {
                this._setOption('infoText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPagerComponent.prototype, "showInfo", {
            get: function () {
                return this._getOption('showInfo');
            },
            set: function (value) {
                this._setOption('showInfo', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPagerComponent.prototype, "showNavigationButtons", {
            get: function () {
                return this._getOption('showNavigationButtons');
            },
            set: function (value) {
                this._setOption('showNavigationButtons', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPagerComponent.prototype, "showPageSizeSelector", {
            get: function () {
                return this._getOption('showPageSizeSelector');
            },
            set: function (value) {
                this._setOption('showPageSizeSelector', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPagerComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPagerComponent.prototype, "_optionPath", {
            get: function () {
                return 'pager';
            },
            enumerable: true,
            configurable: true
        });
        DxoPagerComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoPagerComponent.prototype, "allowedPageSizes", null);
        __decorate([
            core.Input()
        ], DxoPagerComponent.prototype, "infoText", null);
        __decorate([
            core.Input()
        ], DxoPagerComponent.prototype, "showInfo", null);
        __decorate([
            core.Input()
        ], DxoPagerComponent.prototype, "showNavigationButtons", null);
        __decorate([
            core.Input()
        ], DxoPagerComponent.prototype, "showPageSizeSelector", null);
        __decorate([
            core.Input()
        ], DxoPagerComponent.prototype, "visible", null);
        DxoPagerComponent = __decorate([
            core.Component({
                selector: 'dxo-pager',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoPagerComponent);
        return DxoPagerComponent;
    }(core$1.NestedOption));
    var DxoPagerModule = /** @class */ (function () {
        function DxoPagerModule() {
        }
        DxoPagerModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoPagerComponent
                ],
                exports: [
                    DxoPagerComponent
                ],
            })
        ], DxoPagerModule);
        return DxoPagerModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoPagingComponent = /** @class */ (function (_super) {
        __extends(DxoPagingComponent, _super);
        function DxoPagingComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            _this._createEventEmitters([
                { emit: 'pageIndexChange' },
                { emit: 'pageSizeChange' }
            ]);
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoPagingComponent.prototype, "enabled", {
            get: function () {
                return this._getOption('enabled');
            },
            set: function (value) {
                this._setOption('enabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPagingComponent.prototype, "pageIndex", {
            get: function () {
                return this._getOption('pageIndex');
            },
            set: function (value) {
                this._setOption('pageIndex', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPagingComponent.prototype, "pageSize", {
            get: function () {
                return this._getOption('pageSize');
            },
            set: function (value) {
                this._setOption('pageSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPagingComponent.prototype, "_optionPath", {
            get: function () {
                return 'paging';
            },
            enumerable: true,
            configurable: true
        });
        DxoPagingComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoPagingComponent.prototype, "enabled", null);
        __decorate([
            core.Input()
        ], DxoPagingComponent.prototype, "pageIndex", null);
        __decorate([
            core.Input()
        ], DxoPagingComponent.prototype, "pageSize", null);
        __decorate([
            core.Output()
        ], DxoPagingComponent.prototype, "pageIndexChange", void 0);
        __decorate([
            core.Output()
        ], DxoPagingComponent.prototype, "pageSizeChange", void 0);
        DxoPagingComponent = __decorate([
            core.Component({
                selector: 'dxo-paging',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoPagingComponent);
        return DxoPagingComponent;
    }(core$1.NestedOption));
    var DxoPagingModule = /** @class */ (function () {
        function DxoPagingModule() {
        }
        DxoPagingModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoPagingComponent
                ],
                exports: [
                    DxoPagingComponent
                ],
            })
        ], DxoPagingModule);
        return DxoPagingModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiPaneComponent = /** @class */ (function (_super) {
        __extends(DxiPaneComponent, _super);
        function DxiPaneComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiPaneComponent.prototype, "backgroundColor", {
            get: function () {
                return this._getOption('backgroundColor');
            },
            set: function (value) {
                this._setOption('backgroundColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiPaneComponent.prototype, "border", {
            get: function () {
                return this._getOption('border');
            },
            set: function (value) {
                this._setOption('border', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiPaneComponent.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiPaneComponent.prototype, "_optionPath", {
            get: function () {
                return 'panes';
            },
            enumerable: true,
            configurable: true
        });
        DxiPaneComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiPaneComponent.prototype, "backgroundColor", null);
        __decorate([
            core.Input()
        ], DxiPaneComponent.prototype, "border", null);
        __decorate([
            core.Input()
        ], DxiPaneComponent.prototype, "name", null);
        DxiPaneComponent = __decorate([
            core.Component({
                selector: 'dxi-pane',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiPaneComponent);
        return DxiPaneComponent;
    }(core$1.CollectionNestedOption));
    var DxiPaneModule = /** @class */ (function () {
        function DxiPaneModule() {
        }
        DxiPaneModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiPaneComponent
                ],
                exports: [
                    DxiPaneComponent
                ],
            })
        ], DxiPaneModule);
        return DxiPaneModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoPointComponent = /** @class */ (function (_super) {
        __extends(DxoPointComponent, _super);
        function DxoPointComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoPointComponent.prototype, "border", {
            get: function () {
                return this._getOption('border');
            },
            set: function (value) {
                this._setOption('border', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPointComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPointComponent.prototype, "hoverMode", {
            get: function () {
                return this._getOption('hoverMode');
            },
            set: function (value) {
                this._setOption('hoverMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPointComponent.prototype, "hoverStyle", {
            get: function () {
                return this._getOption('hoverStyle');
            },
            set: function (value) {
                this._setOption('hoverStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPointComponent.prototype, "image", {
            get: function () {
                return this._getOption('image');
            },
            set: function (value) {
                this._setOption('image', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPointComponent.prototype, "selectionMode", {
            get: function () {
                return this._getOption('selectionMode');
            },
            set: function (value) {
                this._setOption('selectionMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPointComponent.prototype, "selectionStyle", {
            get: function () {
                return this._getOption('selectionStyle');
            },
            set: function (value) {
                this._setOption('selectionStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPointComponent.prototype, "size", {
            get: function () {
                return this._getOption('size');
            },
            set: function (value) {
                this._setOption('size', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPointComponent.prototype, "symbol", {
            get: function () {
                return this._getOption('symbol');
            },
            set: function (value) {
                this._setOption('symbol', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPointComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPointComponent.prototype, "_optionPath", {
            get: function () {
                return 'point';
            },
            enumerable: true,
            configurable: true
        });
        DxoPointComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoPointComponent.prototype, "border", null);
        __decorate([
            core.Input()
        ], DxoPointComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoPointComponent.prototype, "hoverMode", null);
        __decorate([
            core.Input()
        ], DxoPointComponent.prototype, "hoverStyle", null);
        __decorate([
            core.Input()
        ], DxoPointComponent.prototype, "image", null);
        __decorate([
            core.Input()
        ], DxoPointComponent.prototype, "selectionMode", null);
        __decorate([
            core.Input()
        ], DxoPointComponent.prototype, "selectionStyle", null);
        __decorate([
            core.Input()
        ], DxoPointComponent.prototype, "size", null);
        __decorate([
            core.Input()
        ], DxoPointComponent.prototype, "symbol", null);
        __decorate([
            core.Input()
        ], DxoPointComponent.prototype, "visible", null);
        DxoPointComponent = __decorate([
            core.Component({
                selector: 'dxo-point',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoPointComponent);
        return DxoPointComponent;
    }(core$1.NestedOption));
    var DxoPointModule = /** @class */ (function () {
        function DxoPointModule() {
        }
        DxoPointModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoPointComponent
                ],
                exports: [
                    DxoPointComponent
                ],
            })
        ], DxoPointModule);
        return DxoPointModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoPopupComponent = /** @class */ (function (_super) {
        __extends(DxoPopupComponent, _super);
        function DxoPopupComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            _this._createEventEmitters([
                { emit: 'heightChange' },
                { emit: 'positionChange' },
                { emit: 'visibleChange' },
                { emit: 'widthChange' }
            ]);
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoPopupComponent.prototype, "_optionPath", {
            get: function () {
                return 'popup';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPopupComponent.prototype, "toolbarItemsChildren", {
            get: function () {
                return this._getOption('toolbarItems');
            },
            set: function (value) {
                this.setChildren('toolbarItems', value);
            },
            enumerable: true,
            configurable: true
        });
        DxoPopupComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Output()
        ], DxoPopupComponent.prototype, "heightChange", void 0);
        __decorate([
            core.Output()
        ], DxoPopupComponent.prototype, "positionChange", void 0);
        __decorate([
            core.Output()
        ], DxoPopupComponent.prototype, "visibleChange", void 0);
        __decorate([
            core.Output()
        ], DxoPopupComponent.prototype, "widthChange", void 0);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiToolbarItemComponent; }))
        ], DxoPopupComponent.prototype, "toolbarItemsChildren", null);
        DxoPopupComponent = __decorate([
            core.Component({
                selector: 'dxo-popup',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'accessKey',
                    'animation',
                    'closeOnBackButton',
                    'closeOnOutsideClick',
                    'container',
                    'contentTemplate',
                    'deferRendering',
                    'disabled',
                    'dragEnabled',
                    'elementAttr',
                    'focusStateEnabled',
                    'fullScreen',
                    'height',
                    'hint',
                    'hoverStateEnabled',
                    'maxHeight',
                    'maxWidth',
                    'minHeight',
                    'minWidth',
                    'onContentReady',
                    'onDisposing',
                    'onHidden',
                    'onHiding',
                    'onInitialized',
                    'onOptionChanged',
                    'onResize',
                    'onResizeEnd',
                    'onResizeStart',
                    'onShowing',
                    'onShown',
                    'onTitleRendered',
                    'position',
                    'resizeEnabled',
                    'rtlEnabled',
                    'shading',
                    'shadingColor',
                    'showCloseButton',
                    'showTitle',
                    'tabIndex',
                    'title',
                    'titleTemplate',
                    'toolbarItems',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoPopupComponent);
        return DxoPopupComponent;
    }(DxoPopupOptions));
    var DxoPopupModule = /** @class */ (function () {
        function DxoPopupModule() {
        }
        DxoPopupModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoPopupComponent
                ],
                exports: [
                    DxoPopupComponent
                ],
            })
        ], DxoPopupModule);
        return DxoPopupModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoPositionConfig = /** @class */ (function (_super) {
        __extends(DxoPositionConfig, _super);
        function DxoPositionConfig() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoPositionConfig.prototype, "at", {
            get: function () {
                return this._getOption('at');
            },
            set: function (value) {
                this._setOption('at', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPositionConfig.prototype, "boundary", {
            get: function () {
                return this._getOption('boundary');
            },
            set: function (value) {
                this._setOption('boundary', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPositionConfig.prototype, "boundaryOffset", {
            get: function () {
                return this._getOption('boundaryOffset');
            },
            set: function (value) {
                this._setOption('boundaryOffset', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPositionConfig.prototype, "collision", {
            get: function () {
                return this._getOption('collision');
            },
            set: function (value) {
                this._setOption('collision', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPositionConfig.prototype, "my", {
            get: function () {
                return this._getOption('my');
            },
            set: function (value) {
                this._setOption('my', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPositionConfig.prototype, "of", {
            get: function () {
                return this._getOption('of');
            },
            set: function (value) {
                this._setOption('of', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoPositionConfig.prototype, "offset", {
            get: function () {
                return this._getOption('offset');
            },
            set: function (value) {
                this._setOption('offset', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoPositionConfig;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoPositionComponent = /** @class */ (function (_super) {
        __extends(DxoPositionComponent, _super);
        function DxoPositionComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoPositionComponent.prototype, "_optionPath", {
            get: function () {
                return 'position';
            },
            enumerable: true,
            configurable: true
        });
        DxoPositionComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoPositionComponent = __decorate([
            core.Component({
                selector: 'dxo-position',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'at',
                    'boundary',
                    'boundaryOffset',
                    'collision',
                    'my',
                    'of',
                    'offset'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoPositionComponent);
        return DxoPositionComponent;
    }(DxoPositionConfig));
    var DxoPositionModule = /** @class */ (function () {
        function DxoPositionModule() {
        }
        DxoPositionModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoPositionComponent
                ],
                exports: [
                    DxoPositionComponent
                ],
            })
        ], DxoPositionModule);
        return DxoPositionModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiRangeComponent = /** @class */ (function (_super) {
        __extends(DxiRangeComponent, _super);
        function DxiRangeComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiRangeComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiRangeComponent.prototype, "endValue", {
            get: function () {
                return this._getOption('endValue');
            },
            set: function (value) {
                this._setOption('endValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiRangeComponent.prototype, "startValue", {
            get: function () {
                return this._getOption('startValue');
            },
            set: function (value) {
                this._setOption('startValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiRangeComponent.prototype, "_optionPath", {
            get: function () {
                return 'ranges';
            },
            enumerable: true,
            configurable: true
        });
        DxiRangeComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiRangeComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxiRangeComponent.prototype, "endValue", null);
        __decorate([
            core.Input()
        ], DxiRangeComponent.prototype, "startValue", null);
        DxiRangeComponent = __decorate([
            core.Component({
                selector: 'dxi-range',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiRangeComponent);
        return DxiRangeComponent;
    }(core$1.CollectionNestedOption));
    var DxiRangeModule = /** @class */ (function () {
        function DxiRangeModule() {
        }
        DxiRangeModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiRangeComponent
                ],
                exports: [
                    DxiRangeComponent
                ],
            })
        ], DxiRangeModule);
        return DxiRangeModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoRangeContainerComponent = /** @class */ (function (_super) {
        __extends(DxoRangeContainerComponent, _super);
        function DxoRangeContainerComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoRangeContainerComponent.prototype, "backgroundColor", {
            get: function () {
                return this._getOption('backgroundColor');
            },
            set: function (value) {
                this._setOption('backgroundColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoRangeContainerComponent.prototype, "offset", {
            get: function () {
                return this._getOption('offset');
            },
            set: function (value) {
                this._setOption('offset', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoRangeContainerComponent.prototype, "orientation", {
            get: function () {
                return this._getOption('orientation');
            },
            set: function (value) {
                this._setOption('orientation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoRangeContainerComponent.prototype, "palette", {
            get: function () {
                return this._getOption('palette');
            },
            set: function (value) {
                this._setOption('palette', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoRangeContainerComponent.prototype, "paletteExtensionMode", {
            get: function () {
                return this._getOption('paletteExtensionMode');
            },
            set: function (value) {
                this._setOption('paletteExtensionMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoRangeContainerComponent.prototype, "ranges", {
            get: function () {
                return this._getOption('ranges');
            },
            set: function (value) {
                this._setOption('ranges', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoRangeContainerComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoRangeContainerComponent.prototype, "horizontalOrientation", {
            get: function () {
                return this._getOption('horizontalOrientation');
            },
            set: function (value) {
                this._setOption('horizontalOrientation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoRangeContainerComponent.prototype, "verticalOrientation", {
            get: function () {
                return this._getOption('verticalOrientation');
            },
            set: function (value) {
                this._setOption('verticalOrientation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoRangeContainerComponent.prototype, "_optionPath", {
            get: function () {
                return 'rangeContainer';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoRangeContainerComponent.prototype, "rangesChildren", {
            get: function () {
                return this._getOption('ranges');
            },
            set: function (value) {
                this.setChildren('ranges', value);
            },
            enumerable: true,
            configurable: true
        });
        DxoRangeContainerComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoRangeContainerComponent.prototype, "backgroundColor", null);
        __decorate([
            core.Input()
        ], DxoRangeContainerComponent.prototype, "offset", null);
        __decorate([
            core.Input()
        ], DxoRangeContainerComponent.prototype, "orientation", null);
        __decorate([
            core.Input()
        ], DxoRangeContainerComponent.prototype, "palette", null);
        __decorate([
            core.Input()
        ], DxoRangeContainerComponent.prototype, "paletteExtensionMode", null);
        __decorate([
            core.Input()
        ], DxoRangeContainerComponent.prototype, "ranges", null);
        __decorate([
            core.Input()
        ], DxoRangeContainerComponent.prototype, "width", null);
        __decorate([
            core.Input()
        ], DxoRangeContainerComponent.prototype, "horizontalOrientation", null);
        __decorate([
            core.Input()
        ], DxoRangeContainerComponent.prototype, "verticalOrientation", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiRangeComponent; }))
        ], DxoRangeContainerComponent.prototype, "rangesChildren", null);
        DxoRangeContainerComponent = __decorate([
            core.Component({
                selector: 'dxo-range-container',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoRangeContainerComponent);
        return DxoRangeContainerComponent;
    }(core$1.NestedOption));
    var DxoRangeContainerModule = /** @class */ (function () {
        function DxoRangeContainerModule() {
        }
        DxoRangeContainerModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoRangeContainerComponent
                ],
                exports: [
                    DxoRangeContainerComponent
                ],
            })
        ], DxoRangeContainerModule);
        return DxoRangeContainerModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoRangeareaComponent = /** @class */ (function (_super) {
        __extends(DxoRangeareaComponent, _super);
        function DxoRangeareaComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoRangeareaComponent.prototype, "_optionPath", {
            get: function () {
                return 'rangearea';
            },
            enumerable: true,
            configurable: true
        });
        DxoRangeareaComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoRangeareaComponent = __decorate([
            core.Component({
                selector: 'dxo-rangearea',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoRangeareaComponent);
        return DxoRangeareaComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoRangeareaModule = /** @class */ (function () {
        function DxoRangeareaModule() {
        }
        DxoRangeareaModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoRangeareaComponent
                ],
                exports: [
                    DxoRangeareaComponent
                ],
            })
        ], DxoRangeareaModule);
        return DxoRangeareaModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoRangebarComponent = /** @class */ (function (_super) {
        __extends(DxoRangebarComponent, _super);
        function DxoRangebarComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoRangebarComponent.prototype, "_optionPath", {
            get: function () {
                return 'rangebar';
            },
            enumerable: true,
            configurable: true
        });
        DxoRangebarComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoRangebarComponent = __decorate([
            core.Component({
                selector: 'dxo-rangebar',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoRangebarComponent);
        return DxoRangebarComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoRangebarModule = /** @class */ (function () {
        function DxoRangebarModule() {
        }
        DxoRangebarModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoRangebarComponent
                ],
                exports: [
                    DxoRangebarComponent
                ],
            })
        ], DxoRangebarModule);
        return DxoRangebarModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoReductionComponent = /** @class */ (function (_super) {
        __extends(DxoReductionComponent, _super);
        function DxoReductionComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoReductionComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoReductionComponent.prototype, "level", {
            get: function () {
                return this._getOption('level');
            },
            set: function (value) {
                this._setOption('level', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoReductionComponent.prototype, "_optionPath", {
            get: function () {
                return 'reduction';
            },
            enumerable: true,
            configurable: true
        });
        DxoReductionComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoReductionComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoReductionComponent.prototype, "level", null);
        DxoReductionComponent = __decorate([
            core.Component({
                selector: 'dxo-reduction',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoReductionComponent);
        return DxoReductionComponent;
    }(core$1.NestedOption));
    var DxoReductionModule = /** @class */ (function () {
        function DxoReductionModule() {
        }
        DxoReductionModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoReductionComponent
                ],
                exports: [
                    DxoReductionComponent
                ],
            })
        ], DxoReductionModule);
        return DxoReductionModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoRemoteOperationsComponent = /** @class */ (function (_super) {
        __extends(DxoRemoteOperationsComponent, _super);
        function DxoRemoteOperationsComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoRemoteOperationsComponent.prototype, "filtering", {
            get: function () {
                return this._getOption('filtering');
            },
            set: function (value) {
                this._setOption('filtering', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoRemoteOperationsComponent.prototype, "grouping", {
            get: function () {
                return this._getOption('grouping');
            },
            set: function (value) {
                this._setOption('grouping', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoRemoteOperationsComponent.prototype, "groupPaging", {
            get: function () {
                return this._getOption('groupPaging');
            },
            set: function (value) {
                this._setOption('groupPaging', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoRemoteOperationsComponent.prototype, "paging", {
            get: function () {
                return this._getOption('paging');
            },
            set: function (value) {
                this._setOption('paging', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoRemoteOperationsComponent.prototype, "sorting", {
            get: function () {
                return this._getOption('sorting');
            },
            set: function (value) {
                this._setOption('sorting', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoRemoteOperationsComponent.prototype, "summary", {
            get: function () {
                return this._getOption('summary');
            },
            set: function (value) {
                this._setOption('summary', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoRemoteOperationsComponent.prototype, "_optionPath", {
            get: function () {
                return 'remoteOperations';
            },
            enumerable: true,
            configurable: true
        });
        DxoRemoteOperationsComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoRemoteOperationsComponent.prototype, "filtering", null);
        __decorate([
            core.Input()
        ], DxoRemoteOperationsComponent.prototype, "grouping", null);
        __decorate([
            core.Input()
        ], DxoRemoteOperationsComponent.prototype, "groupPaging", null);
        __decorate([
            core.Input()
        ], DxoRemoteOperationsComponent.prototype, "paging", null);
        __decorate([
            core.Input()
        ], DxoRemoteOperationsComponent.prototype, "sorting", null);
        __decorate([
            core.Input()
        ], DxoRemoteOperationsComponent.prototype, "summary", null);
        DxoRemoteOperationsComponent = __decorate([
            core.Component({
                selector: 'dxo-remote-operations',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoRemoteOperationsComponent);
        return DxoRemoteOperationsComponent;
    }(core$1.NestedOption));
    var DxoRemoteOperationsModule = /** @class */ (function () {
        function DxoRemoteOperationsModule() {
        }
        DxoRemoteOperationsModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoRemoteOperationsComponent
                ],
                exports: [
                    DxoRemoteOperationsComponent
                ],
            })
        ], DxoRemoteOperationsModule);
        return DxoRemoteOperationsModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiResourceComponent = /** @class */ (function (_super) {
        __extends(DxiResourceComponent, _super);
        function DxiResourceComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiResourceComponent.prototype, "allowMultiple", {
            get: function () {
                return this._getOption('allowMultiple');
            },
            set: function (value) {
                this._setOption('allowMultiple', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiResourceComponent.prototype, "colorExpr", {
            get: function () {
                return this._getOption('colorExpr');
            },
            set: function (value) {
                this._setOption('colorExpr', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiResourceComponent.prototype, "dataSource", {
            get: function () {
                return this._getOption('dataSource');
            },
            set: function (value) {
                this._setOption('dataSource', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiResourceComponent.prototype, "displayExpr", {
            get: function () {
                return this._getOption('displayExpr');
            },
            set: function (value) {
                this._setOption('displayExpr', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiResourceComponent.prototype, "fieldExpr", {
            get: function () {
                return this._getOption('fieldExpr');
            },
            set: function (value) {
                this._setOption('fieldExpr', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiResourceComponent.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiResourceComponent.prototype, "useColorAsDefault", {
            get: function () {
                return this._getOption('useColorAsDefault');
            },
            set: function (value) {
                this._setOption('useColorAsDefault', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiResourceComponent.prototype, "valueExpr", {
            get: function () {
                return this._getOption('valueExpr');
            },
            set: function (value) {
                this._setOption('valueExpr', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiResourceComponent.prototype, "_optionPath", {
            get: function () {
                return 'resources';
            },
            enumerable: true,
            configurable: true
        });
        DxiResourceComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiResourceComponent.prototype, "allowMultiple", null);
        __decorate([
            core.Input()
        ], DxiResourceComponent.prototype, "colorExpr", null);
        __decorate([
            core.Input()
        ], DxiResourceComponent.prototype, "dataSource", null);
        __decorate([
            core.Input()
        ], DxiResourceComponent.prototype, "displayExpr", null);
        __decorate([
            core.Input()
        ], DxiResourceComponent.prototype, "fieldExpr", null);
        __decorate([
            core.Input()
        ], DxiResourceComponent.prototype, "label", null);
        __decorate([
            core.Input()
        ], DxiResourceComponent.prototype, "useColorAsDefault", null);
        __decorate([
            core.Input()
        ], DxiResourceComponent.prototype, "valueExpr", null);
        DxiResourceComponent = __decorate([
            core.Component({
                selector: 'dxi-resource',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiResourceComponent);
        return DxiResourceComponent;
    }(core$1.CollectionNestedOption));
    var DxiResourceModule = /** @class */ (function () {
        function DxiResourceModule() {
        }
        DxiResourceModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiResourceComponent
                ],
                exports: [
                    DxiResourceComponent
                ],
            })
        ], DxiResourceModule);
        return DxiResourceModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiRouteComponent = /** @class */ (function (_super) {
        __extends(DxiRouteComponent, _super);
        function DxiRouteComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiRouteComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiRouteComponent.prototype, "locations", {
            get: function () {
                return this._getOption('locations');
            },
            set: function (value) {
                this._setOption('locations', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiRouteComponent.prototype, "mode", {
            get: function () {
                return this._getOption('mode');
            },
            set: function (value) {
                this._setOption('mode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiRouteComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiRouteComponent.prototype, "weight", {
            get: function () {
                return this._getOption('weight');
            },
            set: function (value) {
                this._setOption('weight', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiRouteComponent.prototype, "_optionPath", {
            get: function () {
                return 'routes';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiRouteComponent.prototype, "locationsChildren", {
            get: function () {
                return this._getOption('locations');
            },
            set: function (value) {
                this.setChildren('locations', value);
            },
            enumerable: true,
            configurable: true
        });
        DxiRouteComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiRouteComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxiRouteComponent.prototype, "locations", null);
        __decorate([
            core.Input()
        ], DxiRouteComponent.prototype, "mode", null);
        __decorate([
            core.Input()
        ], DxiRouteComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxiRouteComponent.prototype, "weight", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiLocationComponent; }))
        ], DxiRouteComponent.prototype, "locationsChildren", null);
        DxiRouteComponent = __decorate([
            core.Component({
                selector: 'dxi-route',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiRouteComponent);
        return DxiRouteComponent;
    }(core$1.CollectionNestedOption));
    var DxiRouteModule = /** @class */ (function () {
        function DxiRouteModule() {
        }
        DxiRouteModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiRouteComponent
                ],
                exports: [
                    DxiRouteComponent
                ],
            })
        ], DxiRouteModule);
        return DxiRouteModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiRowComponent = /** @class */ (function (_super) {
        __extends(DxiRowComponent, _super);
        function DxiRowComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiRowComponent.prototype, "baseSize", {
            get: function () {
                return this._getOption('baseSize');
            },
            set: function (value) {
                this._setOption('baseSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiRowComponent.prototype, "ratio", {
            get: function () {
                return this._getOption('ratio');
            },
            set: function (value) {
                this._setOption('ratio', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiRowComponent.prototype, "screen", {
            get: function () {
                return this._getOption('screen');
            },
            set: function (value) {
                this._setOption('screen', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiRowComponent.prototype, "shrink", {
            get: function () {
                return this._getOption('shrink');
            },
            set: function (value) {
                this._setOption('shrink', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiRowComponent.prototype, "_optionPath", {
            get: function () {
                return 'rows';
            },
            enumerable: true,
            configurable: true
        });
        DxiRowComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiRowComponent.prototype, "baseSize", null);
        __decorate([
            core.Input()
        ], DxiRowComponent.prototype, "ratio", null);
        __decorate([
            core.Input()
        ], DxiRowComponent.prototype, "screen", null);
        __decorate([
            core.Input()
        ], DxiRowComponent.prototype, "shrink", null);
        DxiRowComponent = __decorate([
            core.Component({
                selector: 'dxi-row',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiRowComponent);
        return DxiRowComponent;
    }(core$1.CollectionNestedOption));
    var DxiRowModule = /** @class */ (function () {
        function DxiRowModule() {
        }
        DxiRowModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiRowComponent
                ],
                exports: [
                    DxiRowComponent
                ],
            })
        ], DxiRowModule);
        return DxiRowModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoScaleComponent = /** @class */ (function (_super) {
        __extends(DxoScaleComponent, _super);
        function DxoScaleComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoScaleComponent.prototype, "allowDecimals", {
            get: function () {
                return this._getOption('allowDecimals');
            },
            set: function (value) {
                this._setOption('allowDecimals', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "customMinorTicks", {
            get: function () {
                return this._getOption('customMinorTicks');
            },
            set: function (value) {
                this._setOption('customMinorTicks', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "customTicks", {
            get: function () {
                return this._getOption('customTicks');
            },
            set: function (value) {
                this._setOption('customTicks', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "endValue", {
            get: function () {
                return this._getOption('endValue');
            },
            set: function (value) {
                this._setOption('endValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "minorTick", {
            get: function () {
                return this._getOption('minorTick');
            },
            set: function (value) {
                this._setOption('minorTick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "minorTickInterval", {
            get: function () {
                return this._getOption('minorTickInterval');
            },
            set: function (value) {
                this._setOption('minorTickInterval', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "orientation", {
            get: function () {
                return this._getOption('orientation');
            },
            set: function (value) {
                this._setOption('orientation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "scaleDivisionFactor", {
            get: function () {
                return this._getOption('scaleDivisionFactor');
            },
            set: function (value) {
                this._setOption('scaleDivisionFactor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "startValue", {
            get: function () {
                return this._getOption('startValue');
            },
            set: function (value) {
                this._setOption('startValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "tick", {
            get: function () {
                return this._getOption('tick');
            },
            set: function (value) {
                this._setOption('tick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "tickInterval", {
            get: function () {
                return this._getOption('tickInterval');
            },
            set: function (value) {
                this._setOption('tickInterval', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "horizontalOrientation", {
            get: function () {
                return this._getOption('horizontalOrientation');
            },
            set: function (value) {
                this._setOption('horizontalOrientation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "verticalOrientation", {
            get: function () {
                return this._getOption('verticalOrientation');
            },
            set: function (value) {
                this._setOption('verticalOrientation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "aggregationGroupWidth", {
            get: function () {
                return this._getOption('aggregationGroupWidth');
            },
            set: function (value) {
                this._setOption('aggregationGroupWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "aggregationInterval", {
            get: function () {
                return this._getOption('aggregationInterval');
            },
            set: function (value) {
                this._setOption('aggregationInterval', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "breaks", {
            get: function () {
                return this._getOption('breaks');
            },
            set: function (value) {
                this._setOption('breaks', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "breakStyle", {
            get: function () {
                return this._getOption('breakStyle');
            },
            set: function (value) {
                this._setOption('breakStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "categories", {
            get: function () {
                return this._getOption('categories');
            },
            set: function (value) {
                this._setOption('categories', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "endOnTick", {
            get: function () {
                return this._getOption('endOnTick');
            },
            set: function (value) {
                this._setOption('endOnTick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "holidays", {
            get: function () {
                return this._getOption('holidays');
            },
            set: function (value) {
                this._setOption('holidays', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "logarithmBase", {
            get: function () {
                return this._getOption('logarithmBase');
            },
            set: function (value) {
                this._setOption('logarithmBase', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "marker", {
            get: function () {
                return this._getOption('marker');
            },
            set: function (value) {
                this._setOption('marker', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "maxRange", {
            get: function () {
                return this._getOption('maxRange');
            },
            set: function (value) {
                this._setOption('maxRange', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "minorTickCount", {
            get: function () {
                return this._getOption('minorTickCount');
            },
            set: function (value) {
                this._setOption('minorTickCount', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "minRange", {
            get: function () {
                return this._getOption('minRange');
            },
            set: function (value) {
                this._setOption('minRange', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "placeholderHeight", {
            get: function () {
                return this._getOption('placeholderHeight');
            },
            set: function (value) {
                this._setOption('placeholderHeight', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "showCustomBoundaryTicks", {
            get: function () {
                return this._getOption('showCustomBoundaryTicks');
            },
            set: function (value) {
                this._setOption('showCustomBoundaryTicks', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "singleWorkdays", {
            get: function () {
                return this._getOption('singleWorkdays');
            },
            set: function (value) {
                this._setOption('singleWorkdays', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "valueType", {
            get: function () {
                return this._getOption('valueType');
            },
            set: function (value) {
                this._setOption('valueType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "workdaysOnly", {
            get: function () {
                return this._getOption('workdaysOnly');
            },
            set: function (value) {
                this._setOption('workdaysOnly', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "workWeek", {
            get: function () {
                return this._getOption('workWeek');
            },
            set: function (value) {
                this._setOption('workWeek', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "_optionPath", {
            get: function () {
                return 'scale';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScaleComponent.prototype, "breaksChildren", {
            get: function () {
                return this._getOption('breaks');
            },
            set: function (value) {
                this.setChildren('breaks', value);
            },
            enumerable: true,
            configurable: true
        });
        DxoScaleComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "allowDecimals", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "customMinorTicks", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "customTicks", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "endValue", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "label", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "minorTick", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "minorTickInterval", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "orientation", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "scaleDivisionFactor", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "startValue", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "tick", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "tickInterval", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "horizontalOrientation", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "verticalOrientation", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "aggregationGroupWidth", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "aggregationInterval", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "breaks", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "breakStyle", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "categories", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "endOnTick", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "holidays", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "logarithmBase", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "marker", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "maxRange", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "minorTickCount", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "minRange", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "placeholderHeight", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "showCustomBoundaryTicks", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "singleWorkdays", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "type", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "valueType", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "workdaysOnly", null);
        __decorate([
            core.Input()
        ], DxoScaleComponent.prototype, "workWeek", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiBreakComponent; }))
        ], DxoScaleComponent.prototype, "breaksChildren", null);
        DxoScaleComponent = __decorate([
            core.Component({
                selector: 'dxo-scale',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoScaleComponent);
        return DxoScaleComponent;
    }(core$1.NestedOption));
    var DxoScaleModule = /** @class */ (function () {
        function DxoScaleModule() {
        }
        DxoScaleModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoScaleComponent
                ],
                exports: [
                    DxoScaleComponent
                ],
            })
        ], DxoScaleModule);
        return DxoScaleModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoScatterComponent = /** @class */ (function (_super) {
        __extends(DxoScatterComponent, _super);
        function DxoScatterComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoScatterComponent.prototype, "_optionPath", {
            get: function () {
                return 'scatter';
            },
            enumerable: true,
            configurable: true
        });
        DxoScatterComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoScatterComponent = __decorate([
            core.Component({
                selector: 'dxo-scatter',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width',
                    'closed'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoScatterComponent);
        return DxoScatterComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoScatterModule = /** @class */ (function () {
        function DxoScatterModule() {
        }
        DxoScatterModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoScatterComponent
                ],
                exports: [
                    DxoScatterComponent
                ],
            })
        ], DxoScatterModule);
        return DxoScatterModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoScrollBarComponent = /** @class */ (function (_super) {
        __extends(DxoScrollBarComponent, _super);
        function DxoScrollBarComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoScrollBarComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScrollBarComponent.prototype, "offset", {
            get: function () {
                return this._getOption('offset');
            },
            set: function (value) {
                this._setOption('offset', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScrollBarComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScrollBarComponent.prototype, "position", {
            get: function () {
                return this._getOption('position');
            },
            set: function (value) {
                this._setOption('position', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScrollBarComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScrollBarComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScrollBarComponent.prototype, "_optionPath", {
            get: function () {
                return 'scrollBar';
            },
            enumerable: true,
            configurable: true
        });
        DxoScrollBarComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoScrollBarComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoScrollBarComponent.prototype, "offset", null);
        __decorate([
            core.Input()
        ], DxoScrollBarComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxoScrollBarComponent.prototype, "position", null);
        __decorate([
            core.Input()
        ], DxoScrollBarComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxoScrollBarComponent.prototype, "width", null);
        DxoScrollBarComponent = __decorate([
            core.Component({
                selector: 'dxo-scroll-bar',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoScrollBarComponent);
        return DxoScrollBarComponent;
    }(core$1.NestedOption));
    var DxoScrollBarModule = /** @class */ (function () {
        function DxoScrollBarModule() {
        }
        DxoScrollBarModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoScrollBarComponent
                ],
                exports: [
                    DxoScrollBarComponent
                ],
            })
        ], DxoScrollBarModule);
        return DxoScrollBarModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoScrollingComponent = /** @class */ (function (_super) {
        __extends(DxoScrollingComponent, _super);
        function DxoScrollingComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoScrollingComponent.prototype, "columnRenderingMode", {
            get: function () {
                return this._getOption('columnRenderingMode');
            },
            set: function (value) {
                this._setOption('columnRenderingMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScrollingComponent.prototype, "mode", {
            get: function () {
                return this._getOption('mode');
            },
            set: function (value) {
                this._setOption('mode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScrollingComponent.prototype, "preloadEnabled", {
            get: function () {
                return this._getOption('preloadEnabled');
            },
            set: function (value) {
                this._setOption('preloadEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScrollingComponent.prototype, "rowRenderingMode", {
            get: function () {
                return this._getOption('rowRenderingMode');
            },
            set: function (value) {
                this._setOption('rowRenderingMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScrollingComponent.prototype, "scrollByContent", {
            get: function () {
                return this._getOption('scrollByContent');
            },
            set: function (value) {
                this._setOption('scrollByContent', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScrollingComponent.prototype, "scrollByThumb", {
            get: function () {
                return this._getOption('scrollByThumb');
            },
            set: function (value) {
                this._setOption('scrollByThumb', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScrollingComponent.prototype, "showScrollbar", {
            get: function () {
                return this._getOption('showScrollbar');
            },
            set: function (value) {
                this._setOption('showScrollbar', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScrollingComponent.prototype, "useNative", {
            get: function () {
                return this._getOption('useNative');
            },
            set: function (value) {
                this._setOption('useNative', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoScrollingComponent.prototype, "_optionPath", {
            get: function () {
                return 'scrolling';
            },
            enumerable: true,
            configurable: true
        });
        DxoScrollingComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoScrollingComponent.prototype, "columnRenderingMode", null);
        __decorate([
            core.Input()
        ], DxoScrollingComponent.prototype, "mode", null);
        __decorate([
            core.Input()
        ], DxoScrollingComponent.prototype, "preloadEnabled", null);
        __decorate([
            core.Input()
        ], DxoScrollingComponent.prototype, "rowRenderingMode", null);
        __decorate([
            core.Input()
        ], DxoScrollingComponent.prototype, "scrollByContent", null);
        __decorate([
            core.Input()
        ], DxoScrollingComponent.prototype, "scrollByThumb", null);
        __decorate([
            core.Input()
        ], DxoScrollingComponent.prototype, "showScrollbar", null);
        __decorate([
            core.Input()
        ], DxoScrollingComponent.prototype, "useNative", null);
        DxoScrollingComponent = __decorate([
            core.Component({
                selector: 'dxo-scrolling',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoScrollingComponent);
        return DxoScrollingComponent;
    }(core$1.NestedOption));
    var DxoScrollingModule = /** @class */ (function () {
        function DxoScrollingModule() {
        }
        DxoScrollingModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoScrollingComponent
                ],
                exports: [
                    DxoScrollingComponent
                ],
            })
        ], DxoScrollingModule);
        return DxoScrollingModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoTextBoxOptions = /** @class */ (function (_super) {
        __extends(DxoTextBoxOptions, _super);
        function DxoTextBoxOptions() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoTextBoxOptions.prototype, "accessKey", {
            get: function () {
                return this._getOption('accessKey');
            },
            set: function (value) {
                this._setOption('accessKey', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "activeStateEnabled", {
            get: function () {
                return this._getOption('activeStateEnabled');
            },
            set: function (value) {
                this._setOption('activeStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "buttons", {
            get: function () {
                return this._getOption('buttons');
            },
            set: function (value) {
                this._setOption('buttons', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "disabled", {
            get: function () {
                return this._getOption('disabled');
            },
            set: function (value) {
                this._setOption('disabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "elementAttr", {
            get: function () {
                return this._getOption('elementAttr');
            },
            set: function (value) {
                this._setOption('elementAttr', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "focusStateEnabled", {
            get: function () {
                return this._getOption('focusStateEnabled');
            },
            set: function (value) {
                this._setOption('focusStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "height", {
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "hint", {
            get: function () {
                return this._getOption('hint');
            },
            set: function (value) {
                this._setOption('hint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "hoverStateEnabled", {
            get: function () {
                return this._getOption('hoverStateEnabled');
            },
            set: function (value) {
                this._setOption('hoverStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "inputAttr", {
            get: function () {
                return this._getOption('inputAttr');
            },
            set: function (value) {
                this._setOption('inputAttr', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "isValid", {
            get: function () {
                return this._getOption('isValid');
            },
            set: function (value) {
                this._setOption('isValid', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "mask", {
            get: function () {
                return this._getOption('mask');
            },
            set: function (value) {
                this._setOption('mask', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "maskChar", {
            get: function () {
                return this._getOption('maskChar');
            },
            set: function (value) {
                this._setOption('maskChar', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "maskInvalidMessage", {
            get: function () {
                return this._getOption('maskInvalidMessage');
            },
            set: function (value) {
                this._setOption('maskInvalidMessage', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "maskRules", {
            get: function () {
                return this._getOption('maskRules');
            },
            set: function (value) {
                this._setOption('maskRules', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "maxLength", {
            get: function () {
                return this._getOption('maxLength');
            },
            set: function (value) {
                this._setOption('maxLength', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "mode", {
            get: function () {
                return this._getOption('mode');
            },
            set: function (value) {
                this._setOption('mode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "onChange", {
            get: function () {
                return this._getOption('onChange');
            },
            set: function (value) {
                this._setOption('onChange', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "onContentReady", {
            get: function () {
                return this._getOption('onContentReady');
            },
            set: function (value) {
                this._setOption('onContentReady', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "onCopy", {
            get: function () {
                return this._getOption('onCopy');
            },
            set: function (value) {
                this._setOption('onCopy', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "onCut", {
            get: function () {
                return this._getOption('onCut');
            },
            set: function (value) {
                this._setOption('onCut', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "onDisposing", {
            get: function () {
                return this._getOption('onDisposing');
            },
            set: function (value) {
                this._setOption('onDisposing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "onEnterKey", {
            get: function () {
                return this._getOption('onEnterKey');
            },
            set: function (value) {
                this._setOption('onEnterKey', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "onFocusIn", {
            get: function () {
                return this._getOption('onFocusIn');
            },
            set: function (value) {
                this._setOption('onFocusIn', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "onFocusOut", {
            get: function () {
                return this._getOption('onFocusOut');
            },
            set: function (value) {
                this._setOption('onFocusOut', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "onInitialized", {
            get: function () {
                return this._getOption('onInitialized');
            },
            set: function (value) {
                this._setOption('onInitialized', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "onInput", {
            get: function () {
                return this._getOption('onInput');
            },
            set: function (value) {
                this._setOption('onInput', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "onKeyDown", {
            get: function () {
                return this._getOption('onKeyDown');
            },
            set: function (value) {
                this._setOption('onKeyDown', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "onKeyPress", {
            get: function () {
                return this._getOption('onKeyPress');
            },
            set: function (value) {
                this._setOption('onKeyPress', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "onKeyUp", {
            get: function () {
                return this._getOption('onKeyUp');
            },
            set: function (value) {
                this._setOption('onKeyUp', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "onOptionChanged", {
            get: function () {
                return this._getOption('onOptionChanged');
            },
            set: function (value) {
                this._setOption('onOptionChanged', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "onPaste", {
            get: function () {
                return this._getOption('onPaste');
            },
            set: function (value) {
                this._setOption('onPaste', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "onValueChanged", {
            get: function () {
                return this._getOption('onValueChanged');
            },
            set: function (value) {
                this._setOption('onValueChanged', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "placeholder", {
            get: function () {
                return this._getOption('placeholder');
            },
            set: function (value) {
                this._setOption('placeholder', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "readOnly", {
            get: function () {
                return this._getOption('readOnly');
            },
            set: function (value) {
                this._setOption('readOnly', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "rtlEnabled", {
            get: function () {
                return this._getOption('rtlEnabled');
            },
            set: function (value) {
                this._setOption('rtlEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "showClearButton", {
            get: function () {
                return this._getOption('showClearButton');
            },
            set: function (value) {
                this._setOption('showClearButton', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "showMaskMode", {
            get: function () {
                return this._getOption('showMaskMode');
            },
            set: function (value) {
                this._setOption('showMaskMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "spellcheck", {
            get: function () {
                return this._getOption('spellcheck');
            },
            set: function (value) {
                this._setOption('spellcheck', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "stylingMode", {
            get: function () {
                return this._getOption('stylingMode');
            },
            set: function (value) {
                this._setOption('stylingMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "tabIndex", {
            get: function () {
                return this._getOption('tabIndex');
            },
            set: function (value) {
                this._setOption('tabIndex', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "text", {
            get: function () {
                return this._getOption('text');
            },
            set: function (value) {
                this._setOption('text', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "useMaskedValue", {
            get: function () {
                return this._getOption('useMaskedValue');
            },
            set: function (value) {
                this._setOption('useMaskedValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "validationError", {
            get: function () {
                return this._getOption('validationError');
            },
            set: function (value) {
                this._setOption('validationError', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "validationMessageMode", {
            get: function () {
                return this._getOption('validationMessageMode');
            },
            set: function (value) {
                this._setOption('validationMessageMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "value", {
            get: function () {
                return this._getOption('value');
            },
            set: function (value) {
                this._setOption('value', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "valueChangeEvent", {
            get: function () {
                return this._getOption('valueChangeEvent');
            },
            set: function (value) {
                this._setOption('valueChangeEvent', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextBoxOptions.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoTextBoxOptions;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoSearchEditorOptionsComponent = /** @class */ (function (_super) {
        __extends(DxoSearchEditorOptionsComponent, _super);
        function DxoSearchEditorOptionsComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            _this._createEventEmitters([
                { emit: 'textChange' },
                { emit: 'valueChange' }
            ]);
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoSearchEditorOptionsComponent.prototype, "_optionPath", {
            get: function () {
                return 'searchEditorOptions';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSearchEditorOptionsComponent.prototype, "buttonsChildren", {
            get: function () {
                return this._getOption('buttons');
            },
            set: function (value) {
                this.setChildren('buttons', value);
            },
            enumerable: true,
            configurable: true
        });
        DxoSearchEditorOptionsComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Output()
        ], DxoSearchEditorOptionsComponent.prototype, "textChange", void 0);
        __decorate([
            core.Output()
        ], DxoSearchEditorOptionsComponent.prototype, "valueChange", void 0);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiButtonComponent; }))
        ], DxoSearchEditorOptionsComponent.prototype, "buttonsChildren", null);
        DxoSearchEditorOptionsComponent = __decorate([
            core.Component({
                selector: 'dxo-search-editor-options',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'accessKey',
                    'activeStateEnabled',
                    'buttons',
                    'disabled',
                    'elementAttr',
                    'focusStateEnabled',
                    'height',
                    'hint',
                    'hoverStateEnabled',
                    'inputAttr',
                    'isValid',
                    'mask',
                    'maskChar',
                    'maskInvalidMessage',
                    'maskRules',
                    'maxLength',
                    'mode',
                    'name',
                    'onChange',
                    'onContentReady',
                    'onCopy',
                    'onCut',
                    'onDisposing',
                    'onEnterKey',
                    'onFocusIn',
                    'onFocusOut',
                    'onInitialized',
                    'onInput',
                    'onKeyDown',
                    'onKeyPress',
                    'onKeyUp',
                    'onOptionChanged',
                    'onPaste',
                    'onValueChanged',
                    'placeholder',
                    'readOnly',
                    'rtlEnabled',
                    'showClearButton',
                    'showMaskMode',
                    'spellcheck',
                    'stylingMode',
                    'tabIndex',
                    'text',
                    'useMaskedValue',
                    'validationError',
                    'validationMessageMode',
                    'value',
                    'valueChangeEvent',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoSearchEditorOptionsComponent);
        return DxoSearchEditorOptionsComponent;
    }(DxoTextBoxOptions));
    var DxoSearchEditorOptionsModule = /** @class */ (function () {
        function DxoSearchEditorOptionsModule() {
        }
        DxoSearchEditorOptionsModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoSearchEditorOptionsComponent
                ],
                exports: [
                    DxoSearchEditorOptionsComponent
                ],
            })
        ], DxoSearchEditorOptionsModule);
        return DxoSearchEditorOptionsModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoSearchPanelComponent = /** @class */ (function (_super) {
        __extends(DxoSearchPanelComponent, _super);
        function DxoSearchPanelComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            _this._createEventEmitters([
                { emit: 'textChange' }
            ]);
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoSearchPanelComponent.prototype, "highlightCaseSensitive", {
            get: function () {
                return this._getOption('highlightCaseSensitive');
            },
            set: function (value) {
                this._setOption('highlightCaseSensitive', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSearchPanelComponent.prototype, "highlightSearchText", {
            get: function () {
                return this._getOption('highlightSearchText');
            },
            set: function (value) {
                this._setOption('highlightSearchText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSearchPanelComponent.prototype, "placeholder", {
            get: function () {
                return this._getOption('placeholder');
            },
            set: function (value) {
                this._setOption('placeholder', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSearchPanelComponent.prototype, "searchVisibleColumnsOnly", {
            get: function () {
                return this._getOption('searchVisibleColumnsOnly');
            },
            set: function (value) {
                this._setOption('searchVisibleColumnsOnly', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSearchPanelComponent.prototype, "text", {
            get: function () {
                return this._getOption('text');
            },
            set: function (value) {
                this._setOption('text', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSearchPanelComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSearchPanelComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSearchPanelComponent.prototype, "_optionPath", {
            get: function () {
                return 'searchPanel';
            },
            enumerable: true,
            configurable: true
        });
        DxoSearchPanelComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoSearchPanelComponent.prototype, "highlightCaseSensitive", null);
        __decorate([
            core.Input()
        ], DxoSearchPanelComponent.prototype, "highlightSearchText", null);
        __decorate([
            core.Input()
        ], DxoSearchPanelComponent.prototype, "placeholder", null);
        __decorate([
            core.Input()
        ], DxoSearchPanelComponent.prototype, "searchVisibleColumnsOnly", null);
        __decorate([
            core.Input()
        ], DxoSearchPanelComponent.prototype, "text", null);
        __decorate([
            core.Input()
        ], DxoSearchPanelComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxoSearchPanelComponent.prototype, "width", null);
        __decorate([
            core.Output()
        ], DxoSearchPanelComponent.prototype, "textChange", void 0);
        DxoSearchPanelComponent = __decorate([
            core.Component({
                selector: 'dxo-search-panel',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoSearchPanelComponent);
        return DxoSearchPanelComponent;
    }(core$1.NestedOption));
    var DxoSearchPanelModule = /** @class */ (function () {
        function DxoSearchPanelModule() {
        }
        DxoSearchPanelModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoSearchPanelComponent
                ],
                exports: [
                    DxoSearchPanelComponent
                ],
            })
        ], DxoSearchPanelModule);
        return DxoSearchPanelModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoSelectionStyleComponent = /** @class */ (function (_super) {
        __extends(DxoSelectionStyleComponent, _super);
        function DxoSelectionStyleComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoSelectionStyleComponent.prototype, "border", {
            get: function () {
                return this._getOption('border');
            },
            set: function (value) {
                this._setOption('border', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSelectionStyleComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSelectionStyleComponent.prototype, "size", {
            get: function () {
                return this._getOption('size');
            },
            set: function (value) {
                this._setOption('size', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSelectionStyleComponent.prototype, "dashStyle", {
            get: function () {
                return this._getOption('dashStyle');
            },
            set: function (value) {
                this._setOption('dashStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSelectionStyleComponent.prototype, "hatching", {
            get: function () {
                return this._getOption('hatching');
            },
            set: function (value) {
                this._setOption('hatching', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSelectionStyleComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSelectionStyleComponent.prototype, "_optionPath", {
            get: function () {
                return 'selectionStyle';
            },
            enumerable: true,
            configurable: true
        });
        DxoSelectionStyleComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoSelectionStyleComponent.prototype, "border", null);
        __decorate([
            core.Input()
        ], DxoSelectionStyleComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoSelectionStyleComponent.prototype, "size", null);
        __decorate([
            core.Input()
        ], DxoSelectionStyleComponent.prototype, "dashStyle", null);
        __decorate([
            core.Input()
        ], DxoSelectionStyleComponent.prototype, "hatching", null);
        __decorate([
            core.Input()
        ], DxoSelectionStyleComponent.prototype, "width", null);
        DxoSelectionStyleComponent = __decorate([
            core.Component({
                selector: 'dxo-selection-style',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoSelectionStyleComponent);
        return DxoSelectionStyleComponent;
    }(core$1.NestedOption));
    var DxoSelectionStyleModule = /** @class */ (function () {
        function DxoSelectionStyleModule() {
        }
        DxoSelectionStyleModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoSelectionStyleComponent
                ],
                exports: [
                    DxoSelectionStyleComponent
                ],
            })
        ], DxoSelectionStyleModule);
        return DxoSelectionStyleModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoSelectionComponent = /** @class */ (function (_super) {
        __extends(DxoSelectionComponent, _super);
        function DxoSelectionComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoSelectionComponent.prototype, "allowSelectAll", {
            get: function () {
                return this._getOption('allowSelectAll');
            },
            set: function (value) {
                this._setOption('allowSelectAll', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSelectionComponent.prototype, "deferred", {
            get: function () {
                return this._getOption('deferred');
            },
            set: function (value) {
                this._setOption('deferred', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSelectionComponent.prototype, "mode", {
            get: function () {
                return this._getOption('mode');
            },
            set: function (value) {
                this._setOption('mode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSelectionComponent.prototype, "selectAllMode", {
            get: function () {
                return this._getOption('selectAllMode');
            },
            set: function (value) {
                this._setOption('selectAllMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSelectionComponent.prototype, "showCheckBoxesMode", {
            get: function () {
                return this._getOption('showCheckBoxesMode');
            },
            set: function (value) {
                this._setOption('showCheckBoxesMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSelectionComponent.prototype, "recursive", {
            get: function () {
                return this._getOption('recursive');
            },
            set: function (value) {
                this._setOption('recursive', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSelectionComponent.prototype, "_optionPath", {
            get: function () {
                return 'selection';
            },
            enumerable: true,
            configurable: true
        });
        DxoSelectionComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoSelectionComponent.prototype, "allowSelectAll", null);
        __decorate([
            core.Input()
        ], DxoSelectionComponent.prototype, "deferred", null);
        __decorate([
            core.Input()
        ], DxoSelectionComponent.prototype, "mode", null);
        __decorate([
            core.Input()
        ], DxoSelectionComponent.prototype, "selectAllMode", null);
        __decorate([
            core.Input()
        ], DxoSelectionComponent.prototype, "showCheckBoxesMode", null);
        __decorate([
            core.Input()
        ], DxoSelectionComponent.prototype, "recursive", null);
        DxoSelectionComponent = __decorate([
            core.Component({
                selector: 'dxo-selection',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoSelectionComponent);
        return DxoSelectionComponent;
    }(core$1.NestedOption));
    var DxoSelectionModule = /** @class */ (function () {
        function DxoSelectionModule() {
        }
        DxoSelectionModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoSelectionComponent
                ],
                exports: [
                    DxoSelectionComponent
                ],
            })
        ], DxoSelectionModule);
        return DxoSelectionModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoSeriesTemplateComponent = /** @class */ (function (_super) {
        __extends(DxoSeriesTemplateComponent, _super);
        function DxoSeriesTemplateComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoSeriesTemplateComponent.prototype, "customizeSeries", {
            get: function () {
                return this._getOption('customizeSeries');
            },
            set: function (value) {
                this._setOption('customizeSeries', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSeriesTemplateComponent.prototype, "nameField", {
            get: function () {
                return this._getOption('nameField');
            },
            set: function (value) {
                this._setOption('nameField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSeriesTemplateComponent.prototype, "_optionPath", {
            get: function () {
                return 'seriesTemplate';
            },
            enumerable: true,
            configurable: true
        });
        DxoSeriesTemplateComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoSeriesTemplateComponent.prototype, "customizeSeries", null);
        __decorate([
            core.Input()
        ], DxoSeriesTemplateComponent.prototype, "nameField", null);
        DxoSeriesTemplateComponent = __decorate([
            core.Component({
                selector: 'dxo-series-template',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoSeriesTemplateComponent);
        return DxoSeriesTemplateComponent;
    }(core$1.NestedOption));
    var DxoSeriesTemplateModule = /** @class */ (function () {
        function DxoSeriesTemplateModule() {
        }
        DxoSeriesTemplateModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoSeriesTemplateComponent
                ],
                exports: [
                    DxoSeriesTemplateComponent
                ],
            })
        ], DxoSeriesTemplateModule);
        return DxoSeriesTemplateModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoShadowComponent = /** @class */ (function (_super) {
        __extends(DxoShadowComponent, _super);
        function DxoShadowComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoShadowComponent.prototype, "blur", {
            get: function () {
                return this._getOption('blur');
            },
            set: function (value) {
                this._setOption('blur', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoShadowComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoShadowComponent.prototype, "offsetX", {
            get: function () {
                return this._getOption('offsetX');
            },
            set: function (value) {
                this._setOption('offsetX', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoShadowComponent.prototype, "offsetY", {
            get: function () {
                return this._getOption('offsetY');
            },
            set: function (value) {
                this._setOption('offsetY', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoShadowComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoShadowComponent.prototype, "_optionPath", {
            get: function () {
                return 'shadow';
            },
            enumerable: true,
            configurable: true
        });
        DxoShadowComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoShadowComponent.prototype, "blur", null);
        __decorate([
            core.Input()
        ], DxoShadowComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoShadowComponent.prototype, "offsetX", null);
        __decorate([
            core.Input()
        ], DxoShadowComponent.prototype, "offsetY", null);
        __decorate([
            core.Input()
        ], DxoShadowComponent.prototype, "opacity", null);
        DxoShadowComponent = __decorate([
            core.Component({
                selector: 'dxo-shadow',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoShadowComponent);
        return DxoShadowComponent;
    }(core$1.NestedOption));
    var DxoShadowModule = /** @class */ (function () {
        function DxoShadowModule() {
        }
        DxoShadowModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoShadowComponent
                ],
                exports: [
                    DxoShadowComponent
                ],
            })
        ], DxoShadowModule);
        return DxoShadowModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoShowEventComponent = /** @class */ (function (_super) {
        __extends(DxoShowEventComponent, _super);
        function DxoShowEventComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoShowEventComponent.prototype, "delay", {
            get: function () {
                return this._getOption('delay');
            },
            set: function (value) {
                this._setOption('delay', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoShowEventComponent.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoShowEventComponent.prototype, "_optionPath", {
            get: function () {
                return 'showEvent';
            },
            enumerable: true,
            configurable: true
        });
        DxoShowEventComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoShowEventComponent.prototype, "delay", null);
        __decorate([
            core.Input()
        ], DxoShowEventComponent.prototype, "name", null);
        DxoShowEventComponent = __decorate([
            core.Component({
                selector: 'dxo-show-event',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoShowEventComponent);
        return DxoShowEventComponent;
    }(core$1.NestedOption));
    var DxoShowEventModule = /** @class */ (function () {
        function DxoShowEventModule() {
        }
        DxoShowEventModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoShowEventComponent
                ],
                exports: [
                    DxoShowEventComponent
                ],
            })
        ], DxoShowEventModule);
        return DxoShowEventModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoShowFirstSubmenuModeComponent = /** @class */ (function (_super) {
        __extends(DxoShowFirstSubmenuModeComponent, _super);
        function DxoShowFirstSubmenuModeComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoShowFirstSubmenuModeComponent.prototype, "delay", {
            get: function () {
                return this._getOption('delay');
            },
            set: function (value) {
                this._setOption('delay', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoShowFirstSubmenuModeComponent.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoShowFirstSubmenuModeComponent.prototype, "_optionPath", {
            get: function () {
                return 'showFirstSubmenuMode';
            },
            enumerable: true,
            configurable: true
        });
        DxoShowFirstSubmenuModeComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoShowFirstSubmenuModeComponent.prototype, "delay", null);
        __decorate([
            core.Input()
        ], DxoShowFirstSubmenuModeComponent.prototype, "name", null);
        DxoShowFirstSubmenuModeComponent = __decorate([
            core.Component({
                selector: 'dxo-show-first-submenu-mode',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoShowFirstSubmenuModeComponent);
        return DxoShowFirstSubmenuModeComponent;
    }(core$1.NestedOption));
    var DxoShowFirstSubmenuModeModule = /** @class */ (function () {
        function DxoShowFirstSubmenuModeModule() {
        }
        DxoShowFirstSubmenuModeModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoShowFirstSubmenuModeComponent
                ],
                exports: [
                    DxoShowFirstSubmenuModeComponent
                ],
            })
        ], DxoShowFirstSubmenuModeModule);
        return DxoShowFirstSubmenuModeModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoShowSubmenuModeComponent = /** @class */ (function (_super) {
        __extends(DxoShowSubmenuModeComponent, _super);
        function DxoShowSubmenuModeComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoShowSubmenuModeComponent.prototype, "delay", {
            get: function () {
                return this._getOption('delay');
            },
            set: function (value) {
                this._setOption('delay', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoShowSubmenuModeComponent.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoShowSubmenuModeComponent.prototype, "_optionPath", {
            get: function () {
                return 'showSubmenuMode';
            },
            enumerable: true,
            configurable: true
        });
        DxoShowSubmenuModeComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoShowSubmenuModeComponent.prototype, "delay", null);
        __decorate([
            core.Input()
        ], DxoShowSubmenuModeComponent.prototype, "name", null);
        DxoShowSubmenuModeComponent = __decorate([
            core.Component({
                selector: 'dxo-show-submenu-mode',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoShowSubmenuModeComponent);
        return DxoShowSubmenuModeComponent;
    }(core$1.NestedOption));
    var DxoShowSubmenuModeModule = /** @class */ (function () {
        function DxoShowSubmenuModeModule() {
        }
        DxoShowSubmenuModeModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoShowSubmenuModeComponent
                ],
                exports: [
                    DxoShowSubmenuModeComponent
                ],
            })
        ], DxoShowSubmenuModeModule);
        return DxoShowSubmenuModeModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoShowComponent = /** @class */ (function (_super) {
        __extends(DxoShowComponent, _super);
        function DxoShowComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoShowComponent.prototype, "_optionPath", {
            get: function () {
                return 'show';
            },
            enumerable: true,
            configurable: true
        });
        DxoShowComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoShowComponent = __decorate([
            core.Component({
                selector: 'dxo-show',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'complete',
                    'delay',
                    'direction',
                    'duration',
                    'easing',
                    'from',
                    'staggerDelay',
                    'start',
                    'to',
                    'type'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoShowComponent);
        return DxoShowComponent;
    }(DxoAnimationConfig));
    var DxoShowModule = /** @class */ (function () {
        function DxoShowModule() {
        }
        DxoShowModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoShowComponent
                ],
                exports: [
                    DxoShowComponent
                ],
            })
        ], DxoShowModule);
        return DxoShowModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoShutterComponent = /** @class */ (function (_super) {
        __extends(DxoShutterComponent, _super);
        function DxoShutterComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoShutterComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoShutterComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoShutterComponent.prototype, "_optionPath", {
            get: function () {
                return 'shutter';
            },
            enumerable: true,
            configurable: true
        });
        DxoShutterComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoShutterComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoShutterComponent.prototype, "opacity", null);
        DxoShutterComponent = __decorate([
            core.Component({
                selector: 'dxo-shutter',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoShutterComponent);
        return DxoShutterComponent;
    }(core$1.NestedOption));
    var DxoShutterModule = /** @class */ (function () {
        function DxoShutterModule() {
        }
        DxoShutterModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoShutterComponent
                ],
                exports: [
                    DxoShutterComponent
                ],
            })
        ], DxoShutterModule);
        return DxoShutterModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoSizeComponent = /** @class */ (function (_super) {
        __extends(DxoSizeComponent, _super);
        function DxoSizeComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoSizeComponent.prototype, "height", {
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSizeComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSizeComponent.prototype, "_optionPath", {
            get: function () {
                return 'size';
            },
            enumerable: true,
            configurable: true
        });
        DxoSizeComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoSizeComponent.prototype, "height", null);
        __decorate([
            core.Input()
        ], DxoSizeComponent.prototype, "width", null);
        DxoSizeComponent = __decorate([
            core.Component({
                selector: 'dxo-size',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoSizeComponent);
        return DxoSizeComponent;
    }(core$1.NestedOption));
    var DxoSizeModule = /** @class */ (function () {
        function DxoSizeModule() {
        }
        DxoSizeModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoSizeComponent
                ],
                exports: [
                    DxoSizeComponent
                ],
            })
        ], DxoSizeModule);
        return DxoSizeModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoSliderHandleComponent = /** @class */ (function (_super) {
        __extends(DxoSliderHandleComponent, _super);
        function DxoSliderHandleComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoSliderHandleComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSliderHandleComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSliderHandleComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSliderHandleComponent.prototype, "_optionPath", {
            get: function () {
                return 'sliderHandle';
            },
            enumerable: true,
            configurable: true
        });
        DxoSliderHandleComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoSliderHandleComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoSliderHandleComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxoSliderHandleComponent.prototype, "width", null);
        DxoSliderHandleComponent = __decorate([
            core.Component({
                selector: 'dxo-slider-handle',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoSliderHandleComponent);
        return DxoSliderHandleComponent;
    }(core$1.NestedOption));
    var DxoSliderHandleModule = /** @class */ (function () {
        function DxoSliderHandleModule() {
        }
        DxoSliderHandleModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoSliderHandleComponent
                ],
                exports: [
                    DxoSliderHandleComponent
                ],
            })
        ], DxoSliderHandleModule);
        return DxoSliderHandleModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoSliderMarkerComponent = /** @class */ (function (_super) {
        __extends(DxoSliderMarkerComponent, _super);
        function DxoSliderMarkerComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoSliderMarkerComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSliderMarkerComponent.prototype, "customizeText", {
            get: function () {
                return this._getOption('customizeText');
            },
            set: function (value) {
                this._setOption('customizeText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSliderMarkerComponent.prototype, "font", {
            get: function () {
                return this._getOption('font');
            },
            set: function (value) {
                this._setOption('font', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSliderMarkerComponent.prototype, "format", {
            get: function () {
                return this._getOption('format');
            },
            set: function (value) {
                this._setOption('format', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSliderMarkerComponent.prototype, "invalidRangeColor", {
            get: function () {
                return this._getOption('invalidRangeColor');
            },
            set: function (value) {
                this._setOption('invalidRangeColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSliderMarkerComponent.prototype, "paddingLeftRight", {
            get: function () {
                return this._getOption('paddingLeftRight');
            },
            set: function (value) {
                this._setOption('paddingLeftRight', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSliderMarkerComponent.prototype, "paddingTopBottom", {
            get: function () {
                return this._getOption('paddingTopBottom');
            },
            set: function (value) {
                this._setOption('paddingTopBottom', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSliderMarkerComponent.prototype, "placeholderHeight", {
            get: function () {
                return this._getOption('placeholderHeight');
            },
            set: function (value) {
                this._setOption('placeholderHeight', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSliderMarkerComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSliderMarkerComponent.prototype, "_optionPath", {
            get: function () {
                return 'sliderMarker';
            },
            enumerable: true,
            configurable: true
        });
        DxoSliderMarkerComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoSliderMarkerComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoSliderMarkerComponent.prototype, "customizeText", null);
        __decorate([
            core.Input()
        ], DxoSliderMarkerComponent.prototype, "font", null);
        __decorate([
            core.Input()
        ], DxoSliderMarkerComponent.prototype, "format", null);
        __decorate([
            core.Input()
        ], DxoSliderMarkerComponent.prototype, "invalidRangeColor", null);
        __decorate([
            core.Input()
        ], DxoSliderMarkerComponent.prototype, "paddingLeftRight", null);
        __decorate([
            core.Input()
        ], DxoSliderMarkerComponent.prototype, "paddingTopBottom", null);
        __decorate([
            core.Input()
        ], DxoSliderMarkerComponent.prototype, "placeholderHeight", null);
        __decorate([
            core.Input()
        ], DxoSliderMarkerComponent.prototype, "visible", null);
        DxoSliderMarkerComponent = __decorate([
            core.Component({
                selector: 'dxo-slider-marker',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoSliderMarkerComponent);
        return DxoSliderMarkerComponent;
    }(core$1.NestedOption));
    var DxoSliderMarkerModule = /** @class */ (function () {
        function DxoSliderMarkerModule() {
        }
        DxoSliderMarkerModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoSliderMarkerComponent
                ],
                exports: [
                    DxoSliderMarkerComponent
                ],
            })
        ], DxoSliderMarkerModule);
        return DxoSliderMarkerModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoSmallValuesGroupingComponent = /** @class */ (function (_super) {
        __extends(DxoSmallValuesGroupingComponent, _super);
        function DxoSmallValuesGroupingComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, "groupName", {
            get: function () {
                return this._getOption('groupName');
            },
            set: function (value) {
                this._setOption('groupName', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, "mode", {
            get: function () {
                return this._getOption('mode');
            },
            set: function (value) {
                this._setOption('mode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, "threshold", {
            get: function () {
                return this._getOption('threshold');
            },
            set: function (value) {
                this._setOption('threshold', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, "topCount", {
            get: function () {
                return this._getOption('topCount');
            },
            set: function (value) {
                this._setOption('topCount', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSmallValuesGroupingComponent.prototype, "_optionPath", {
            get: function () {
                return 'smallValuesGrouping';
            },
            enumerable: true,
            configurable: true
        });
        DxoSmallValuesGroupingComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoSmallValuesGroupingComponent.prototype, "groupName", null);
        __decorate([
            core.Input()
        ], DxoSmallValuesGroupingComponent.prototype, "mode", null);
        __decorate([
            core.Input()
        ], DxoSmallValuesGroupingComponent.prototype, "threshold", null);
        __decorate([
            core.Input()
        ], DxoSmallValuesGroupingComponent.prototype, "topCount", null);
        DxoSmallValuesGroupingComponent = __decorate([
            core.Component({
                selector: 'dxo-small-values-grouping',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoSmallValuesGroupingComponent);
        return DxoSmallValuesGroupingComponent;
    }(core$1.NestedOption));
    var DxoSmallValuesGroupingModule = /** @class */ (function () {
        function DxoSmallValuesGroupingModule() {
        }
        DxoSmallValuesGroupingModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoSmallValuesGroupingComponent
                ],
                exports: [
                    DxoSmallValuesGroupingComponent
                ],
            })
        ], DxoSmallValuesGroupingModule);
        return DxoSmallValuesGroupingModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiSortByGroupSummaryInfoComponent = /** @class */ (function (_super) {
        __extends(DxiSortByGroupSummaryInfoComponent, _super);
        function DxiSortByGroupSummaryInfoComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiSortByGroupSummaryInfoComponent.prototype, "groupColumn", {
            get: function () {
                return this._getOption('groupColumn');
            },
            set: function (value) {
                this._setOption('groupColumn', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiSortByGroupSummaryInfoComponent.prototype, "sortOrder", {
            get: function () {
                return this._getOption('sortOrder');
            },
            set: function (value) {
                this._setOption('sortOrder', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiSortByGroupSummaryInfoComponent.prototype, "summaryItem", {
            get: function () {
                return this._getOption('summaryItem');
            },
            set: function (value) {
                this._setOption('summaryItem', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiSortByGroupSummaryInfoComponent.prototype, "_optionPath", {
            get: function () {
                return 'sortByGroupSummaryInfo';
            },
            enumerable: true,
            configurable: true
        });
        DxiSortByGroupSummaryInfoComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiSortByGroupSummaryInfoComponent.prototype, "groupColumn", null);
        __decorate([
            core.Input()
        ], DxiSortByGroupSummaryInfoComponent.prototype, "sortOrder", null);
        __decorate([
            core.Input()
        ], DxiSortByGroupSummaryInfoComponent.prototype, "summaryItem", null);
        DxiSortByGroupSummaryInfoComponent = __decorate([
            core.Component({
                selector: 'dxi-sort-by-group-summary-info',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiSortByGroupSummaryInfoComponent);
        return DxiSortByGroupSummaryInfoComponent;
    }(core$1.CollectionNestedOption));
    var DxiSortByGroupSummaryInfoModule = /** @class */ (function () {
        function DxiSortByGroupSummaryInfoModule() {
        }
        DxiSortByGroupSummaryInfoModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiSortByGroupSummaryInfoComponent
                ],
                exports: [
                    DxiSortByGroupSummaryInfoComponent
                ],
            })
        ], DxiSortByGroupSummaryInfoModule);
        return DxiSortByGroupSummaryInfoModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoSortingComponent = /** @class */ (function (_super) {
        __extends(DxoSortingComponent, _super);
        function DxoSortingComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoSortingComponent.prototype, "ascendingText", {
            get: function () {
                return this._getOption('ascendingText');
            },
            set: function (value) {
                this._setOption('ascendingText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSortingComponent.prototype, "clearText", {
            get: function () {
                return this._getOption('clearText');
            },
            set: function (value) {
                this._setOption('clearText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSortingComponent.prototype, "descendingText", {
            get: function () {
                return this._getOption('descendingText');
            },
            set: function (value) {
                this._setOption('descendingText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSortingComponent.prototype, "mode", {
            get: function () {
                return this._getOption('mode');
            },
            set: function (value) {
                this._setOption('mode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSortingComponent.prototype, "_optionPath", {
            get: function () {
                return 'sorting';
            },
            enumerable: true,
            configurable: true
        });
        DxoSortingComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoSortingComponent.prototype, "ascendingText", null);
        __decorate([
            core.Input()
        ], DxoSortingComponent.prototype, "clearText", null);
        __decorate([
            core.Input()
        ], DxoSortingComponent.prototype, "descendingText", null);
        __decorate([
            core.Input()
        ], DxoSortingComponent.prototype, "mode", null);
        DxoSortingComponent = __decorate([
            core.Component({
                selector: 'dxo-sorting',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoSortingComponent);
        return DxoSortingComponent;
    }(core$1.NestedOption));
    var DxoSortingModule = /** @class */ (function () {
        function DxoSortingModule() {
        }
        DxoSortingModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoSortingComponent
                ],
                exports: [
                    DxoSortingComponent
                ],
            })
        ], DxoSortingModule);
        return DxoSortingModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoSourceComponent = /** @class */ (function (_super) {
        __extends(DxoSourceComponent, _super);
        function DxoSourceComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoSourceComponent.prototype, "grouping", {
            get: function () {
                return this._getOption('grouping');
            },
            set: function (value) {
                this._setOption('grouping', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSourceComponent.prototype, "layer", {
            get: function () {
                return this._getOption('layer');
            },
            set: function (value) {
                this._setOption('layer', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSourceComponent.prototype, "_optionPath", {
            get: function () {
                return 'source';
            },
            enumerable: true,
            configurable: true
        });
        DxoSourceComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoSourceComponent.prototype, "grouping", null);
        __decorate([
            core.Input()
        ], DxoSourceComponent.prototype, "layer", null);
        DxoSourceComponent = __decorate([
            core.Component({
                selector: 'dxo-source',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoSourceComponent);
        return DxoSourceComponent;
    }(core$1.NestedOption));
    var DxoSourceModule = /** @class */ (function () {
        function DxoSourceModule() {
        }
        DxoSourceModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoSourceComponent
                ],
                exports: [
                    DxoSourceComponent
                ],
            })
        ], DxoSourceModule);
        return DxoSourceModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoSplineComponent = /** @class */ (function (_super) {
        __extends(DxoSplineComponent, _super);
        function DxoSplineComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoSplineComponent.prototype, "_optionPath", {
            get: function () {
                return 'spline';
            },
            enumerable: true,
            configurable: true
        });
        DxoSplineComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoSplineComponent = __decorate([
            core.Component({
                selector: 'dxo-spline',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoSplineComponent);
        return DxoSplineComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoSplineModule = /** @class */ (function () {
        function DxoSplineModule() {
        }
        DxoSplineModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoSplineComponent
                ],
                exports: [
                    DxoSplineComponent
                ],
            })
        ], DxoSplineModule);
        return DxoSplineModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoSplineareaComponent = /** @class */ (function (_super) {
        __extends(DxoSplineareaComponent, _super);
        function DxoSplineareaComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoSplineareaComponent.prototype, "_optionPath", {
            get: function () {
                return 'splinearea';
            },
            enumerable: true,
            configurable: true
        });
        DxoSplineareaComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoSplineareaComponent = __decorate([
            core.Component({
                selector: 'dxo-splinearea',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoSplineareaComponent);
        return DxoSplineareaComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoSplineareaModule = /** @class */ (function () {
        function DxoSplineareaModule() {
        }
        DxoSplineareaModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoSplineareaComponent
                ],
                exports: [
                    DxoSplineareaComponent
                ],
            })
        ], DxoSplineareaModule);
        return DxoSplineareaModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoStackedareaComponent = /** @class */ (function (_super) {
        __extends(DxoStackedareaComponent, _super);
        function DxoStackedareaComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoStackedareaComponent.prototype, "_optionPath", {
            get: function () {
                return 'stackedarea';
            },
            enumerable: true,
            configurable: true
        });
        DxoStackedareaComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoStackedareaComponent = __decorate([
            core.Component({
                selector: 'dxo-stackedarea',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoStackedareaComponent);
        return DxoStackedareaComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoStackedareaModule = /** @class */ (function () {
        function DxoStackedareaModule() {
        }
        DxoStackedareaModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoStackedareaComponent
                ],
                exports: [
                    DxoStackedareaComponent
                ],
            })
        ], DxoStackedareaModule);
        return DxoStackedareaModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoStackedbarComponent = /** @class */ (function (_super) {
        __extends(DxoStackedbarComponent, _super);
        function DxoStackedbarComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoStackedbarComponent.prototype, "_optionPath", {
            get: function () {
                return 'stackedbar';
            },
            enumerable: true,
            configurable: true
        });
        DxoStackedbarComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoStackedbarComponent = __decorate([
            core.Component({
                selector: 'dxo-stackedbar',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width',
                    'closed'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoStackedbarComponent);
        return DxoStackedbarComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoStackedbarModule = /** @class */ (function () {
        function DxoStackedbarModule() {
        }
        DxoStackedbarModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoStackedbarComponent
                ],
                exports: [
                    DxoStackedbarComponent
                ],
            })
        ], DxoStackedbarModule);
        return DxoStackedbarModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoStackedlineComponent = /** @class */ (function (_super) {
        __extends(DxoStackedlineComponent, _super);
        function DxoStackedlineComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoStackedlineComponent.prototype, "_optionPath", {
            get: function () {
                return 'stackedline';
            },
            enumerable: true,
            configurable: true
        });
        DxoStackedlineComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoStackedlineComponent = __decorate([
            core.Component({
                selector: 'dxo-stackedline',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoStackedlineComponent);
        return DxoStackedlineComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoStackedlineModule = /** @class */ (function () {
        function DxoStackedlineModule() {
        }
        DxoStackedlineModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoStackedlineComponent
                ],
                exports: [
                    DxoStackedlineComponent
                ],
            })
        ], DxoStackedlineModule);
        return DxoStackedlineModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoStackedsplineComponent = /** @class */ (function (_super) {
        __extends(DxoStackedsplineComponent, _super);
        function DxoStackedsplineComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoStackedsplineComponent.prototype, "_optionPath", {
            get: function () {
                return 'stackedspline';
            },
            enumerable: true,
            configurable: true
        });
        DxoStackedsplineComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoStackedsplineComponent = __decorate([
            core.Component({
                selector: 'dxo-stackedspline',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoStackedsplineComponent);
        return DxoStackedsplineComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoStackedsplineModule = /** @class */ (function () {
        function DxoStackedsplineModule() {
        }
        DxoStackedsplineModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoStackedsplineComponent
                ],
                exports: [
                    DxoStackedsplineComponent
                ],
            })
        ], DxoStackedsplineModule);
        return DxoStackedsplineModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoStackedsplineareaComponent = /** @class */ (function (_super) {
        __extends(DxoStackedsplineareaComponent, _super);
        function DxoStackedsplineareaComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoStackedsplineareaComponent.prototype, "_optionPath", {
            get: function () {
                return 'stackedsplinearea';
            },
            enumerable: true,
            configurable: true
        });
        DxoStackedsplineareaComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoStackedsplineareaComponent = __decorate([
            core.Component({
                selector: 'dxo-stackedsplinearea',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoStackedsplineareaComponent);
        return DxoStackedsplineareaComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoStackedsplineareaModule = /** @class */ (function () {
        function DxoStackedsplineareaModule() {
        }
        DxoStackedsplineareaModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoStackedsplineareaComponent
                ],
                exports: [
                    DxoStackedsplineareaComponent
                ],
            })
        ], DxoStackedsplineareaModule);
        return DxoStackedsplineareaModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoStateStoringComponent = /** @class */ (function (_super) {
        __extends(DxoStateStoringComponent, _super);
        function DxoStateStoringComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoStateStoringComponent.prototype, "customLoad", {
            get: function () {
                return this._getOption('customLoad');
            },
            set: function (value) {
                this._setOption('customLoad', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoStateStoringComponent.prototype, "customSave", {
            get: function () {
                return this._getOption('customSave');
            },
            set: function (value) {
                this._setOption('customSave', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoStateStoringComponent.prototype, "enabled", {
            get: function () {
                return this._getOption('enabled');
            },
            set: function (value) {
                this._setOption('enabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoStateStoringComponent.prototype, "savingTimeout", {
            get: function () {
                return this._getOption('savingTimeout');
            },
            set: function (value) {
                this._setOption('savingTimeout', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoStateStoringComponent.prototype, "storageKey", {
            get: function () {
                return this._getOption('storageKey');
            },
            set: function (value) {
                this._setOption('storageKey', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoStateStoringComponent.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoStateStoringComponent.prototype, "_optionPath", {
            get: function () {
                return 'stateStoring';
            },
            enumerable: true,
            configurable: true
        });
        DxoStateStoringComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoStateStoringComponent.prototype, "customLoad", null);
        __decorate([
            core.Input()
        ], DxoStateStoringComponent.prototype, "customSave", null);
        __decorate([
            core.Input()
        ], DxoStateStoringComponent.prototype, "enabled", null);
        __decorate([
            core.Input()
        ], DxoStateStoringComponent.prototype, "savingTimeout", null);
        __decorate([
            core.Input()
        ], DxoStateStoringComponent.prototype, "storageKey", null);
        __decorate([
            core.Input()
        ], DxoStateStoringComponent.prototype, "type", null);
        DxoStateStoringComponent = __decorate([
            core.Component({
                selector: 'dxo-state-storing',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoStateStoringComponent);
        return DxoStateStoringComponent;
    }(core$1.NestedOption));
    var DxoStateStoringModule = /** @class */ (function () {
        function DxoStateStoringModule() {
        }
        DxoStateStoringModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoStateStoringComponent
                ],
                exports: [
                    DxoStateStoringComponent
                ],
            })
        ], DxoStateStoringModule);
        return DxoStateStoringModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoStepareaComponent = /** @class */ (function (_super) {
        __extends(DxoStepareaComponent, _super);
        function DxoStepareaComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoStepareaComponent.prototype, "_optionPath", {
            get: function () {
                return 'steparea';
            },
            enumerable: true,
            configurable: true
        });
        DxoStepareaComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoStepareaComponent = __decorate([
            core.Component({
                selector: 'dxo-steparea',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoStepareaComponent);
        return DxoStepareaComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoStepareaModule = /** @class */ (function () {
        function DxoStepareaModule() {
        }
        DxoStepareaModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoStepareaComponent
                ],
                exports: [
                    DxoStepareaComponent
                ],
            })
        ], DxoStepareaModule);
        return DxoStepareaModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoSteplineComponent = /** @class */ (function (_super) {
        __extends(DxoSteplineComponent, _super);
        function DxoSteplineComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoSteplineComponent.prototype, "_optionPath", {
            get: function () {
                return 'stepline';
            },
            enumerable: true,
            configurable: true
        });
        DxoSteplineComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoSteplineComponent = __decorate([
            core.Component({
                selector: 'dxo-stepline',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoSteplineComponent);
        return DxoSteplineComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoSteplineModule = /** @class */ (function () {
        function DxoSteplineModule() {
        }
        DxoSteplineModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoSteplineComponent
                ],
                exports: [
                    DxoSteplineComponent
                ],
            })
        ], DxoSteplineModule);
        return DxoSteplineModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoStockComponent = /** @class */ (function (_super) {
        __extends(DxoStockComponent, _super);
        function DxoStockComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoStockComponent.prototype, "_optionPath", {
            get: function () {
                return 'stock';
            },
            enumerable: true,
            configurable: true
        });
        DxoStockComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoStockComponent = __decorate([
            core.Component({
                selector: 'dxo-stock',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'aggregation',
                    'area',
                    'argumentField',
                    'axis',
                    'bar',
                    'barOverlapGroup',
                    'barPadding',
                    'barWidth',
                    'border',
                    'bubble',
                    'candlestick',
                    'closeValueField',
                    'color',
                    'cornerRadius',
                    'dashStyle',
                    'fullstackedarea',
                    'fullstackedbar',
                    'fullstackedline',
                    'fullstackedspline',
                    'fullstackedsplinearea',
                    'highValueField',
                    'hoverMode',
                    'hoverStyle',
                    'ignoreEmptyPoints',
                    'innerColor',
                    'label',
                    'line',
                    'lowValueField',
                    'maxLabelCount',
                    'minBarSize',
                    'opacity',
                    'openValueField',
                    'pane',
                    'point',
                    'rangearea',
                    'rangebar',
                    'rangeValue1Field',
                    'rangeValue2Field',
                    'reduction',
                    'scatter',
                    'selectionMode',
                    'selectionStyle',
                    'showInLegend',
                    'sizeField',
                    'spline',
                    'splinearea',
                    'stack',
                    'stackedarea',
                    'stackedbar',
                    'stackedline',
                    'stackedspline',
                    'stackedsplinearea',
                    'steparea',
                    'stepline',
                    'stock',
                    'tagField',
                    'type',
                    'valueErrorBar',
                    'valueField',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoStockComponent);
        return DxoStockComponent;
    }(DxoChartCommonSeriesSettings));
    var DxoStockModule = /** @class */ (function () {
        function DxoStockModule() {
        }
        DxoStockModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoStockComponent
                ],
                exports: [
                    DxoStockComponent
                ],
            })
        ], DxoStockModule);
        return DxoStockModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoStoreComponent = /** @class */ (function (_super) {
        __extends(DxoStoreComponent, _super);
        function DxoStoreComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoStoreComponent.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoStoreComponent.prototype, "_optionPath", {
            get: function () {
                return 'store';
            },
            enumerable: true,
            configurable: true
        });
        DxoStoreComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoStoreComponent.prototype, "type", null);
        DxoStoreComponent = __decorate([
            core.Component({
                selector: 'dxo-store',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoStoreComponent);
        return DxoStoreComponent;
    }(core$1.NestedOption));
    var DxoStoreModule = /** @class */ (function () {
        function DxoStoreModule() {
        }
        DxoStoreModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoStoreComponent
                ],
                exports: [
                    DxoStoreComponent
                ],
            })
        ], DxoStoreModule);
        return DxoStoreModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoStripStyleComponent = /** @class */ (function (_super) {
        __extends(DxoStripStyleComponent, _super);
        function DxoStripStyleComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoStripStyleComponent.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoStripStyleComponent.prototype, "paddingLeftRight", {
            get: function () {
                return this._getOption('paddingLeftRight');
            },
            set: function (value) {
                this._setOption('paddingLeftRight', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoStripStyleComponent.prototype, "paddingTopBottom", {
            get: function () {
                return this._getOption('paddingTopBottom');
            },
            set: function (value) {
                this._setOption('paddingTopBottom', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoStripStyleComponent.prototype, "_optionPath", {
            get: function () {
                return 'stripStyle';
            },
            enumerable: true,
            configurable: true
        });
        DxoStripStyleComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoStripStyleComponent.prototype, "label", null);
        __decorate([
            core.Input()
        ], DxoStripStyleComponent.prototype, "paddingLeftRight", null);
        __decorate([
            core.Input()
        ], DxoStripStyleComponent.prototype, "paddingTopBottom", null);
        DxoStripStyleComponent = __decorate([
            core.Component({
                selector: 'dxo-strip-style',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoStripStyleComponent);
        return DxoStripStyleComponent;
    }(core$1.NestedOption));
    var DxoStripStyleModule = /** @class */ (function () {
        function DxoStripStyleModule() {
        }
        DxoStripStyleModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoStripStyleComponent
                ],
                exports: [
                    DxoStripStyleComponent
                ],
            })
        ], DxoStripStyleModule);
        return DxoStripStyleModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoSubtitleComponent = /** @class */ (function (_super) {
        __extends(DxoSubtitleComponent, _super);
        function DxoSubtitleComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoSubtitleComponent.prototype, "font", {
            get: function () {
                return this._getOption('font');
            },
            set: function (value) {
                this._setOption('font', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSubtitleComponent.prototype, "offset", {
            get: function () {
                return this._getOption('offset');
            },
            set: function (value) {
                this._setOption('offset', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSubtitleComponent.prototype, "text", {
            get: function () {
                return this._getOption('text');
            },
            set: function (value) {
                this._setOption('text', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSubtitleComponent.prototype, "textOverflow", {
            get: function () {
                return this._getOption('textOverflow');
            },
            set: function (value) {
                this._setOption('textOverflow', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSubtitleComponent.prototype, "wordWrap", {
            get: function () {
                return this._getOption('wordWrap');
            },
            set: function (value) {
                this._setOption('wordWrap', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSubtitleComponent.prototype, "_optionPath", {
            get: function () {
                return 'subtitle';
            },
            enumerable: true,
            configurable: true
        });
        DxoSubtitleComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoSubtitleComponent.prototype, "font", null);
        __decorate([
            core.Input()
        ], DxoSubtitleComponent.prototype, "offset", null);
        __decorate([
            core.Input()
        ], DxoSubtitleComponent.prototype, "text", null);
        __decorate([
            core.Input()
        ], DxoSubtitleComponent.prototype, "textOverflow", null);
        __decorate([
            core.Input()
        ], DxoSubtitleComponent.prototype, "wordWrap", null);
        DxoSubtitleComponent = __decorate([
            core.Component({
                selector: 'dxo-subtitle',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoSubtitleComponent);
        return DxoSubtitleComponent;
    }(core$1.NestedOption));
    var DxoSubtitleModule = /** @class */ (function () {
        function DxoSubtitleModule() {
        }
        DxoSubtitleModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoSubtitleComponent
                ],
                exports: [
                    DxoSubtitleComponent
                ],
            })
        ], DxoSubtitleModule);
        return DxoSubtitleModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoGaugeIndicator = /** @class */ (function (_super) {
        __extends(DxoGaugeIndicator, _super);
        function DxoGaugeIndicator() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoGaugeIndicator.prototype, "arrowLength", {
            get: function () {
                return this._getOption('arrowLength');
            },
            set: function (value) {
                this._setOption('arrowLength', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGaugeIndicator.prototype, "backgroundColor", {
            get: function () {
                return this._getOption('backgroundColor');
            },
            set: function (value) {
                this._setOption('backgroundColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGaugeIndicator.prototype, "baseValue", {
            get: function () {
                return this._getOption('baseValue');
            },
            set: function (value) {
                this._setOption('baseValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGaugeIndicator.prototype, "beginAdaptingAtRadius", {
            get: function () {
                return this._getOption('beginAdaptingAtRadius');
            },
            set: function (value) {
                this._setOption('beginAdaptingAtRadius', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGaugeIndicator.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGaugeIndicator.prototype, "horizontalOrientation", {
            get: function () {
                return this._getOption('horizontalOrientation');
            },
            set: function (value) {
                this._setOption('horizontalOrientation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGaugeIndicator.prototype, "indentFromCenter", {
            get: function () {
                return this._getOption('indentFromCenter');
            },
            set: function (value) {
                this._setOption('indentFromCenter', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGaugeIndicator.prototype, "length", {
            get: function () {
                return this._getOption('length');
            },
            set: function (value) {
                this._setOption('length', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGaugeIndicator.prototype, "offset", {
            get: function () {
                return this._getOption('offset');
            },
            set: function (value) {
                this._setOption('offset', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGaugeIndicator.prototype, "palette", {
            get: function () {
                return this._getOption('palette');
            },
            set: function (value) {
                this._setOption('palette', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGaugeIndicator.prototype, "secondColor", {
            get: function () {
                return this._getOption('secondColor');
            },
            set: function (value) {
                this._setOption('secondColor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGaugeIndicator.prototype, "secondFraction", {
            get: function () {
                return this._getOption('secondFraction');
            },
            set: function (value) {
                this._setOption('secondFraction', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGaugeIndicator.prototype, "size", {
            get: function () {
                return this._getOption('size');
            },
            set: function (value) {
                this._setOption('size', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGaugeIndicator.prototype, "spindleGapSize", {
            get: function () {
                return this._getOption('spindleGapSize');
            },
            set: function (value) {
                this._setOption('spindleGapSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGaugeIndicator.prototype, "spindleSize", {
            get: function () {
                return this._getOption('spindleSize');
            },
            set: function (value) {
                this._setOption('spindleSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGaugeIndicator.prototype, "text", {
            get: function () {
                return this._getOption('text');
            },
            set: function (value) {
                this._setOption('text', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGaugeIndicator.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGaugeIndicator.prototype, "verticalOrientation", {
            get: function () {
                return this._getOption('verticalOrientation');
            },
            set: function (value) {
                this._setOption('verticalOrientation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoGaugeIndicator.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoGaugeIndicator;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoSubvalueIndicatorComponent = /** @class */ (function (_super) {
        __extends(DxoSubvalueIndicatorComponent, _super);
        function DxoSubvalueIndicatorComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoSubvalueIndicatorComponent.prototype, "_optionPath", {
            get: function () {
                return 'subvalueIndicator';
            },
            enumerable: true,
            configurable: true
        });
        DxoSubvalueIndicatorComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoSubvalueIndicatorComponent = __decorate([
            core.Component({
                selector: 'dxo-subvalue-indicator',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'arrowLength',
                    'backgroundColor',
                    'baseValue',
                    'beginAdaptingAtRadius',
                    'color',
                    'horizontalOrientation',
                    'indentFromCenter',
                    'length',
                    'offset',
                    'palette',
                    'secondColor',
                    'secondFraction',
                    'size',
                    'spindleGapSize',
                    'spindleSize',
                    'text',
                    'type',
                    'verticalOrientation',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoSubvalueIndicatorComponent);
        return DxoSubvalueIndicatorComponent;
    }(DxoGaugeIndicator));
    var DxoSubvalueIndicatorModule = /** @class */ (function () {
        function DxoSubvalueIndicatorModule() {
        }
        DxoSubvalueIndicatorModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoSubvalueIndicatorComponent
                ],
                exports: [
                    DxoSubvalueIndicatorComponent
                ],
            })
        ], DxoSubvalueIndicatorModule);
        return DxoSubvalueIndicatorModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiTotalItemComponent = /** @class */ (function (_super) {
        __extends(DxiTotalItemComponent, _super);
        function DxiTotalItemComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiTotalItemComponent.prototype, "alignment", {
            get: function () {
                return this._getOption('alignment');
            },
            set: function (value) {
                this._setOption('alignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTotalItemComponent.prototype, "column", {
            get: function () {
                return this._getOption('column');
            },
            set: function (value) {
                this._setOption('column', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTotalItemComponent.prototype, "cssClass", {
            get: function () {
                return this._getOption('cssClass');
            },
            set: function (value) {
                this._setOption('cssClass', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTotalItemComponent.prototype, "customizeText", {
            get: function () {
                return this._getOption('customizeText');
            },
            set: function (value) {
                this._setOption('customizeText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTotalItemComponent.prototype, "displayFormat", {
            get: function () {
                return this._getOption('displayFormat');
            },
            set: function (value) {
                this._setOption('displayFormat', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTotalItemComponent.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTotalItemComponent.prototype, "showInColumn", {
            get: function () {
                return this._getOption('showInColumn');
            },
            set: function (value) {
                this._setOption('showInColumn', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTotalItemComponent.prototype, "skipEmptyValues", {
            get: function () {
                return this._getOption('skipEmptyValues');
            },
            set: function (value) {
                this._setOption('skipEmptyValues', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTotalItemComponent.prototype, "summaryType", {
            get: function () {
                return this._getOption('summaryType');
            },
            set: function (value) {
                this._setOption('summaryType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTotalItemComponent.prototype, "valueFormat", {
            get: function () {
                return this._getOption('valueFormat');
            },
            set: function (value) {
                this._setOption('valueFormat', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiTotalItemComponent.prototype, "_optionPath", {
            get: function () {
                return 'totalItems';
            },
            enumerable: true,
            configurable: true
        });
        DxiTotalItemComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiTotalItemComponent.prototype, "alignment", null);
        __decorate([
            core.Input()
        ], DxiTotalItemComponent.prototype, "column", null);
        __decorate([
            core.Input()
        ], DxiTotalItemComponent.prototype, "cssClass", null);
        __decorate([
            core.Input()
        ], DxiTotalItemComponent.prototype, "customizeText", null);
        __decorate([
            core.Input()
        ], DxiTotalItemComponent.prototype, "displayFormat", null);
        __decorate([
            core.Input()
        ], DxiTotalItemComponent.prototype, "name", null);
        __decorate([
            core.Input()
        ], DxiTotalItemComponent.prototype, "showInColumn", null);
        __decorate([
            core.Input()
        ], DxiTotalItemComponent.prototype, "skipEmptyValues", null);
        __decorate([
            core.Input()
        ], DxiTotalItemComponent.prototype, "summaryType", null);
        __decorate([
            core.Input()
        ], DxiTotalItemComponent.prototype, "valueFormat", null);
        DxiTotalItemComponent = __decorate([
            core.Component({
                selector: 'dxi-total-item',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiTotalItemComponent);
        return DxiTotalItemComponent;
    }(core$1.CollectionNestedOption));
    var DxiTotalItemModule = /** @class */ (function () {
        function DxiTotalItemModule() {
        }
        DxiTotalItemModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiTotalItemComponent
                ],
                exports: [
                    DxiTotalItemComponent
                ],
            })
        ], DxiTotalItemModule);
        return DxiTotalItemModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoSummaryComponent = /** @class */ (function (_super) {
        __extends(DxoSummaryComponent, _super);
        function DxoSummaryComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoSummaryComponent.prototype, "calculateCustomSummary", {
            get: function () {
                return this._getOption('calculateCustomSummary');
            },
            set: function (value) {
                this._setOption('calculateCustomSummary', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSummaryComponent.prototype, "groupItems", {
            get: function () {
                return this._getOption('groupItems');
            },
            set: function (value) {
                this._setOption('groupItems', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSummaryComponent.prototype, "recalculateWhileEditing", {
            get: function () {
                return this._getOption('recalculateWhileEditing');
            },
            set: function (value) {
                this._setOption('recalculateWhileEditing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSummaryComponent.prototype, "skipEmptyValues", {
            get: function () {
                return this._getOption('skipEmptyValues');
            },
            set: function (value) {
                this._setOption('skipEmptyValues', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSummaryComponent.prototype, "texts", {
            get: function () {
                return this._getOption('texts');
            },
            set: function (value) {
                this._setOption('texts', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSummaryComponent.prototype, "totalItems", {
            get: function () {
                return this._getOption('totalItems');
            },
            set: function (value) {
                this._setOption('totalItems', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSummaryComponent.prototype, "_optionPath", {
            get: function () {
                return 'summary';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSummaryComponent.prototype, "groupItemsChildren", {
            get: function () {
                return this._getOption('groupItems');
            },
            set: function (value) {
                this.setChildren('groupItems', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoSummaryComponent.prototype, "totalItemsChildren", {
            get: function () {
                return this._getOption('totalItems');
            },
            set: function (value) {
                this.setChildren('totalItems', value);
            },
            enumerable: true,
            configurable: true
        });
        DxoSummaryComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoSummaryComponent.prototype, "calculateCustomSummary", null);
        __decorate([
            core.Input()
        ], DxoSummaryComponent.prototype, "groupItems", null);
        __decorate([
            core.Input()
        ], DxoSummaryComponent.prototype, "recalculateWhileEditing", null);
        __decorate([
            core.Input()
        ], DxoSummaryComponent.prototype, "skipEmptyValues", null);
        __decorate([
            core.Input()
        ], DxoSummaryComponent.prototype, "texts", null);
        __decorate([
            core.Input()
        ], DxoSummaryComponent.prototype, "totalItems", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiGroupItemComponent; }))
        ], DxoSummaryComponent.prototype, "groupItemsChildren", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiTotalItemComponent; }))
        ], DxoSummaryComponent.prototype, "totalItemsChildren", null);
        DxoSummaryComponent = __decorate([
            core.Component({
                selector: 'dxo-summary',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoSummaryComponent);
        return DxoSummaryComponent;
    }(core$1.NestedOption));
    var DxoSummaryModule = /** @class */ (function () {
        function DxoSummaryModule() {
        }
        DxoSummaryModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoSummaryComponent
                ],
                exports: [
                    DxoSummaryComponent
                ],
            })
        ], DxoSummaryModule);
        return DxoSummaryModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoTabPanelOptions = /** @class */ (function (_super) {
        __extends(DxoTabPanelOptions, _super);
        function DxoTabPanelOptions() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoTabPanelOptions.prototype, "accessKey", {
            get: function () {
                return this._getOption('accessKey');
            },
            set: function (value) {
                this._setOption('accessKey', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "activeStateEnabled", {
            get: function () {
                return this._getOption('activeStateEnabled');
            },
            set: function (value) {
                this._setOption('activeStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "animationEnabled", {
            get: function () {
                return this._getOption('animationEnabled');
            },
            set: function (value) {
                this._setOption('animationEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "dataSource", {
            get: function () {
                return this._getOption('dataSource');
            },
            set: function (value) {
                this._setOption('dataSource', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "deferRendering", {
            get: function () {
                return this._getOption('deferRendering');
            },
            set: function (value) {
                this._setOption('deferRendering', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "disabled", {
            get: function () {
                return this._getOption('disabled');
            },
            set: function (value) {
                this._setOption('disabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "elementAttr", {
            get: function () {
                return this._getOption('elementAttr');
            },
            set: function (value) {
                this._setOption('elementAttr', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "focusStateEnabled", {
            get: function () {
                return this._getOption('focusStateEnabled');
            },
            set: function (value) {
                this._setOption('focusStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "height", {
            get: function () {
                return this._getOption('height');
            },
            set: function (value) {
                this._setOption('height', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "hint", {
            get: function () {
                return this._getOption('hint');
            },
            set: function (value) {
                this._setOption('hint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "hoverStateEnabled", {
            get: function () {
                return this._getOption('hoverStateEnabled');
            },
            set: function (value) {
                this._setOption('hoverStateEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "itemHoldTimeout", {
            get: function () {
                return this._getOption('itemHoldTimeout');
            },
            set: function (value) {
                this._setOption('itemHoldTimeout', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "items", {
            get: function () {
                return this._getOption('items');
            },
            set: function (value) {
                this._setOption('items', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "itemTemplate", {
            get: function () {
                return this._getOption('itemTemplate');
            },
            set: function (value) {
                this._setOption('itemTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "itemTitleTemplate", {
            get: function () {
                return this._getOption('itemTitleTemplate');
            },
            set: function (value) {
                this._setOption('itemTitleTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "loop", {
            get: function () {
                return this._getOption('loop');
            },
            set: function (value) {
                this._setOption('loop', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "noDataText", {
            get: function () {
                return this._getOption('noDataText');
            },
            set: function (value) {
                this._setOption('noDataText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "onContentReady", {
            get: function () {
                return this._getOption('onContentReady');
            },
            set: function (value) {
                this._setOption('onContentReady', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "onDisposing", {
            get: function () {
                return this._getOption('onDisposing');
            },
            set: function (value) {
                this._setOption('onDisposing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "onInitialized", {
            get: function () {
                return this._getOption('onInitialized');
            },
            set: function (value) {
                this._setOption('onInitialized', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "onItemClick", {
            get: function () {
                return this._getOption('onItemClick');
            },
            set: function (value) {
                this._setOption('onItemClick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "onItemContextMenu", {
            get: function () {
                return this._getOption('onItemContextMenu');
            },
            set: function (value) {
                this._setOption('onItemContextMenu', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "onItemHold", {
            get: function () {
                return this._getOption('onItemHold');
            },
            set: function (value) {
                this._setOption('onItemHold', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "onItemRendered", {
            get: function () {
                return this._getOption('onItemRendered');
            },
            set: function (value) {
                this._setOption('onItemRendered', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "onOptionChanged", {
            get: function () {
                return this._getOption('onOptionChanged');
            },
            set: function (value) {
                this._setOption('onOptionChanged', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "onSelectionChanged", {
            get: function () {
                return this._getOption('onSelectionChanged');
            },
            set: function (value) {
                this._setOption('onSelectionChanged', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "onTitleClick", {
            get: function () {
                return this._getOption('onTitleClick');
            },
            set: function (value) {
                this._setOption('onTitleClick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "onTitleHold", {
            get: function () {
                return this._getOption('onTitleHold');
            },
            set: function (value) {
                this._setOption('onTitleHold', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "onTitleRendered", {
            get: function () {
                return this._getOption('onTitleRendered');
            },
            set: function (value) {
                this._setOption('onTitleRendered', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "repaintChangesOnly", {
            get: function () {
                return this._getOption('repaintChangesOnly');
            },
            set: function (value) {
                this._setOption('repaintChangesOnly', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "rtlEnabled", {
            get: function () {
                return this._getOption('rtlEnabled');
            },
            set: function (value) {
                this._setOption('rtlEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "scrollByContent", {
            get: function () {
                return this._getOption('scrollByContent');
            },
            set: function (value) {
                this._setOption('scrollByContent', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "scrollingEnabled", {
            get: function () {
                return this._getOption('scrollingEnabled');
            },
            set: function (value) {
                this._setOption('scrollingEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "selectedIndex", {
            get: function () {
                return this._getOption('selectedIndex');
            },
            set: function (value) {
                this._setOption('selectedIndex', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "selectedItem", {
            get: function () {
                return this._getOption('selectedItem');
            },
            set: function (value) {
                this._setOption('selectedItem', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "showNavButtons", {
            get: function () {
                return this._getOption('showNavButtons');
            },
            set: function (value) {
                this._setOption('showNavButtons', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "swipeEnabled", {
            get: function () {
                return this._getOption('swipeEnabled');
            },
            set: function (value) {
                this._setOption('swipeEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "tabIndex", {
            get: function () {
                return this._getOption('tabIndex');
            },
            set: function (value) {
                this._setOption('tabIndex', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptions.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoTabPanelOptions;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoTabPanelOptionsComponent = /** @class */ (function (_super) {
        __extends(DxoTabPanelOptionsComponent, _super);
        function DxoTabPanelOptionsComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            _this._createEventEmitters([
                { emit: 'itemsChange' },
                { emit: 'selectedIndexChange' },
                { emit: 'selectedItemChange' }
            ]);
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoTabPanelOptionsComponent.prototype, "_optionPath", {
            get: function () {
                return 'tabPanelOptions';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTabPanelOptionsComponent.prototype, "itemsChildren", {
            get: function () {
                return this._getOption('items');
            },
            set: function (value) {
                this.setChildren('items', value);
            },
            enumerable: true,
            configurable: true
        });
        DxoTabPanelOptionsComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Output()
        ], DxoTabPanelOptionsComponent.prototype, "itemsChange", void 0);
        __decorate([
            core.Output()
        ], DxoTabPanelOptionsComponent.prototype, "selectedIndexChange", void 0);
        __decorate([
            core.Output()
        ], DxoTabPanelOptionsComponent.prototype, "selectedItemChange", void 0);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiItemComponent; }))
        ], DxoTabPanelOptionsComponent.prototype, "itemsChildren", null);
        DxoTabPanelOptionsComponent = __decorate([
            core.Component({
                selector: 'dxo-tab-panel-options',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'accessKey',
                    'activeStateEnabled',
                    'animationEnabled',
                    'dataSource',
                    'deferRendering',
                    'disabled',
                    'elementAttr',
                    'focusStateEnabled',
                    'height',
                    'hint',
                    'hoverStateEnabled',
                    'itemHoldTimeout',
                    'items',
                    'itemTemplate',
                    'itemTitleTemplate',
                    'loop',
                    'noDataText',
                    'onContentReady',
                    'onDisposing',
                    'onInitialized',
                    'onItemClick',
                    'onItemContextMenu',
                    'onItemHold',
                    'onItemRendered',
                    'onOptionChanged',
                    'onSelectionChanged',
                    'onTitleClick',
                    'onTitleHold',
                    'onTitleRendered',
                    'repaintChangesOnly',
                    'rtlEnabled',
                    'scrollByContent',
                    'scrollingEnabled',
                    'selectedIndex',
                    'selectedItem',
                    'showNavButtons',
                    'swipeEnabled',
                    'tabIndex',
                    'visible',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoTabPanelOptionsComponent);
        return DxoTabPanelOptionsComponent;
    }(DxoTabPanelOptions));
    var DxoTabPanelOptionsModule = /** @class */ (function () {
        function DxoTabPanelOptionsModule() {
        }
        DxoTabPanelOptionsModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoTabPanelOptionsComponent
                ],
                exports: [
                    DxoTabPanelOptionsComponent
                ],
            })
        ], DxoTabPanelOptionsModule);
        return DxoTabPanelOptionsModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoTextComponent = /** @class */ (function (_super) {
        __extends(DxoTextComponent, _super);
        function DxoTextComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoTextComponent.prototype, "customizeText", {
            get: function () {
                return this._getOption('customizeText');
            },
            set: function (value) {
                this._setOption('customizeText', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextComponent.prototype, "font", {
            get: function () {
                return this._getOption('font');
            },
            set: function (value) {
                this._setOption('font', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextComponent.prototype, "format", {
            get: function () {
                return this._getOption('format');
            },
            set: function (value) {
                this._setOption('format', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextComponent.prototype, "indent", {
            get: function () {
                return this._getOption('indent');
            },
            set: function (value) {
                this._setOption('indent', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextComponent.prototype, "_optionPath", {
            get: function () {
                return 'text';
            },
            enumerable: true,
            configurable: true
        });
        DxoTextComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoTextComponent.prototype, "customizeText", null);
        __decorate([
            core.Input()
        ], DxoTextComponent.prototype, "font", null);
        __decorate([
            core.Input()
        ], DxoTextComponent.prototype, "format", null);
        __decorate([
            core.Input()
        ], DxoTextComponent.prototype, "indent", null);
        DxoTextComponent = __decorate([
            core.Component({
                selector: 'dxo-text',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoTextComponent);
        return DxoTextComponent;
    }(core$1.NestedOption));
    var DxoTextModule = /** @class */ (function () {
        function DxoTextModule() {
        }
        DxoTextModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoTextComponent
                ],
                exports: [
                    DxoTextComponent
                ],
            })
        ], DxoTextModule);
        return DxoTextModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoTextsComponent = /** @class */ (function (_super) {
        __extends(DxoTextsComponent, _super);
        function DxoTextsComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoTextsComponent.prototype, "fix", {
            get: function () {
                return this._getOption('fix');
            },
            set: function (value) {
                this._setOption('fix', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "leftPosition", {
            get: function () {
                return this._getOption('leftPosition');
            },
            set: function (value) {
                this._setOption('leftPosition', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "rightPosition", {
            get: function () {
                return this._getOption('rightPosition');
            },
            set: function (value) {
                this._setOption('rightPosition', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "unfix", {
            get: function () {
                return this._getOption('unfix');
            },
            set: function (value) {
                this._setOption('unfix', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "addRow", {
            get: function () {
                return this._getOption('addRow');
            },
            set: function (value) {
                this._setOption('addRow', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "cancelAllChanges", {
            get: function () {
                return this._getOption('cancelAllChanges');
            },
            set: function (value) {
                this._setOption('cancelAllChanges', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "cancelRowChanges", {
            get: function () {
                return this._getOption('cancelRowChanges');
            },
            set: function (value) {
                this._setOption('cancelRowChanges', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "confirmDeleteMessage", {
            get: function () {
                return this._getOption('confirmDeleteMessage');
            },
            set: function (value) {
                this._setOption('confirmDeleteMessage', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "confirmDeleteTitle", {
            get: function () {
                return this._getOption('confirmDeleteTitle');
            },
            set: function (value) {
                this._setOption('confirmDeleteTitle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "deleteRow", {
            get: function () {
                return this._getOption('deleteRow');
            },
            set: function (value) {
                this._setOption('deleteRow', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "editRow", {
            get: function () {
                return this._getOption('editRow');
            },
            set: function (value) {
                this._setOption('editRow', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "saveAllChanges", {
            get: function () {
                return this._getOption('saveAllChanges');
            },
            set: function (value) {
                this._setOption('saveAllChanges', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "saveRowChanges", {
            get: function () {
                return this._getOption('saveRowChanges');
            },
            set: function (value) {
                this._setOption('saveRowChanges', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "undeleteRow", {
            get: function () {
                return this._getOption('undeleteRow');
            },
            set: function (value) {
                this._setOption('undeleteRow', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "validationCancelChanges", {
            get: function () {
                return this._getOption('validationCancelChanges');
            },
            set: function (value) {
                this._setOption('validationCancelChanges', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "exportAll", {
            get: function () {
                return this._getOption('exportAll');
            },
            set: function (value) {
                this._setOption('exportAll', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "exportSelectedRows", {
            get: function () {
                return this._getOption('exportSelectedRows');
            },
            set: function (value) {
                this._setOption('exportSelectedRows', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "exportTo", {
            get: function () {
                return this._getOption('exportTo');
            },
            set: function (value) {
                this._setOption('exportTo', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "clearFilter", {
            get: function () {
                return this._getOption('clearFilter');
            },
            set: function (value) {
                this._setOption('clearFilter', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "createFilter", {
            get: function () {
                return this._getOption('createFilter');
            },
            set: function (value) {
                this._setOption('createFilter', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "filterEnabledHint", {
            get: function () {
                return this._getOption('filterEnabledHint');
            },
            set: function (value) {
                this._setOption('filterEnabledHint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "groupByThisColumn", {
            get: function () {
                return this._getOption('groupByThisColumn');
            },
            set: function (value) {
                this._setOption('groupByThisColumn', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "groupContinuedMessage", {
            get: function () {
                return this._getOption('groupContinuedMessage');
            },
            set: function (value) {
                this._setOption('groupContinuedMessage', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "groupContinuesMessage", {
            get: function () {
                return this._getOption('groupContinuesMessage');
            },
            set: function (value) {
                this._setOption('groupContinuesMessage', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "ungroup", {
            get: function () {
                return this._getOption('ungroup');
            },
            set: function (value) {
                this._setOption('ungroup', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "ungroupAll", {
            get: function () {
                return this._getOption('ungroupAll');
            },
            set: function (value) {
                this._setOption('ungroupAll', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "cancel", {
            get: function () {
                return this._getOption('cancel');
            },
            set: function (value) {
                this._setOption('cancel', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "emptyValue", {
            get: function () {
                return this._getOption('emptyValue');
            },
            set: function (value) {
                this._setOption('emptyValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "ok", {
            get: function () {
                return this._getOption('ok');
            },
            set: function (value) {
                this._setOption('ok', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "avg", {
            get: function () {
                return this._getOption('avg');
            },
            set: function (value) {
                this._setOption('avg', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "avgOtherColumn", {
            get: function () {
                return this._getOption('avgOtherColumn');
            },
            set: function (value) {
                this._setOption('avgOtherColumn', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "count", {
            get: function () {
                return this._getOption('count');
            },
            set: function (value) {
                this._setOption('count', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "max", {
            get: function () {
                return this._getOption('max');
            },
            set: function (value) {
                this._setOption('max', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "maxOtherColumn", {
            get: function () {
                return this._getOption('maxOtherColumn');
            },
            set: function (value) {
                this._setOption('maxOtherColumn', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "min", {
            get: function () {
                return this._getOption('min');
            },
            set: function (value) {
                this._setOption('min', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "minOtherColumn", {
            get: function () {
                return this._getOption('minOtherColumn');
            },
            set: function (value) {
                this._setOption('minOtherColumn', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "sum", {
            get: function () {
                return this._getOption('sum');
            },
            set: function (value) {
                this._setOption('sum', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "sumOtherColumn", {
            get: function () {
                return this._getOption('sumOtherColumn');
            },
            set: function (value) {
                this._setOption('sumOtherColumn', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "allFields", {
            get: function () {
                return this._getOption('allFields');
            },
            set: function (value) {
                this._setOption('allFields', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "columnFields", {
            get: function () {
                return this._getOption('columnFields');
            },
            set: function (value) {
                this._setOption('columnFields', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "dataFields", {
            get: function () {
                return this._getOption('dataFields');
            },
            set: function (value) {
                this._setOption('dataFields', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "filterFields", {
            get: function () {
                return this._getOption('filterFields');
            },
            set: function (value) {
                this._setOption('filterFields', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "rowFields", {
            get: function () {
                return this._getOption('rowFields');
            },
            set: function (value) {
                this._setOption('rowFields', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "columnFieldArea", {
            get: function () {
                return this._getOption('columnFieldArea');
            },
            set: function (value) {
                this._setOption('columnFieldArea', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "dataFieldArea", {
            get: function () {
                return this._getOption('dataFieldArea');
            },
            set: function (value) {
                this._setOption('dataFieldArea', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "filterFieldArea", {
            get: function () {
                return this._getOption('filterFieldArea');
            },
            set: function (value) {
                this._setOption('filterFieldArea', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "rowFieldArea", {
            get: function () {
                return this._getOption('rowFieldArea');
            },
            set: function (value) {
                this._setOption('rowFieldArea', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "collapseAll", {
            get: function () {
                return this._getOption('collapseAll');
            },
            set: function (value) {
                this._setOption('collapseAll', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "dataNotAvailable", {
            get: function () {
                return this._getOption('dataNotAvailable');
            },
            set: function (value) {
                this._setOption('dataNotAvailable', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "expandAll", {
            get: function () {
                return this._getOption('expandAll');
            },
            set: function (value) {
                this._setOption('expandAll', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "exportToExcel", {
            get: function () {
                return this._getOption('exportToExcel');
            },
            set: function (value) {
                this._setOption('exportToExcel', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "grandTotal", {
            get: function () {
                return this._getOption('grandTotal');
            },
            set: function (value) {
                this._setOption('grandTotal', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "noData", {
            get: function () {
                return this._getOption('noData');
            },
            set: function (value) {
                this._setOption('noData', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "removeAllSorting", {
            get: function () {
                return this._getOption('removeAllSorting');
            },
            set: function (value) {
                this._setOption('removeAllSorting', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "showFieldChooser", {
            get: function () {
                return this._getOption('showFieldChooser');
            },
            set: function (value) {
                this._setOption('showFieldChooser', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "sortColumnBySummary", {
            get: function () {
                return this._getOption('sortColumnBySummary');
            },
            set: function (value) {
                this._setOption('sortColumnBySummary', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "sortRowBySummary", {
            get: function () {
                return this._getOption('sortRowBySummary');
            },
            set: function (value) {
                this._setOption('sortRowBySummary', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "total", {
            get: function () {
                return this._getOption('total');
            },
            set: function (value) {
                this._setOption('total', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "addRowToNode", {
            get: function () {
                return this._getOption('addRowToNode');
            },
            set: function (value) {
                this._setOption('addRowToNode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTextsComponent.prototype, "_optionPath", {
            get: function () {
                return 'texts';
            },
            enumerable: true,
            configurable: true
        });
        DxoTextsComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "fix", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "leftPosition", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "rightPosition", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "unfix", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "addRow", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "cancelAllChanges", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "cancelRowChanges", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "confirmDeleteMessage", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "confirmDeleteTitle", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "deleteRow", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "editRow", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "saveAllChanges", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "saveRowChanges", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "undeleteRow", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "validationCancelChanges", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "exportAll", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "exportSelectedRows", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "exportTo", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "clearFilter", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "createFilter", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "filterEnabledHint", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "groupByThisColumn", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "groupContinuedMessage", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "groupContinuesMessage", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "ungroup", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "ungroupAll", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "cancel", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "emptyValue", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "ok", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "avg", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "avgOtherColumn", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "count", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "max", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "maxOtherColumn", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "min", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "minOtherColumn", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "sum", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "sumOtherColumn", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "allFields", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "columnFields", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "dataFields", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "filterFields", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "rowFields", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "columnFieldArea", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "dataFieldArea", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "filterFieldArea", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "rowFieldArea", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "collapseAll", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "dataNotAvailable", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "expandAll", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "exportToExcel", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "grandTotal", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "noData", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "removeAllSorting", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "showFieldChooser", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "sortColumnBySummary", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "sortRowBySummary", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "total", null);
        __decorate([
            core.Input()
        ], DxoTextsComponent.prototype, "addRowToNode", null);
        DxoTextsComponent = __decorate([
            core.Component({
                selector: 'dxo-texts',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoTextsComponent);
        return DxoTextsComponent;
    }(core$1.NestedOption));
    var DxoTextsModule = /** @class */ (function () {
        function DxoTextsModule() {
        }
        DxoTextsModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoTextsComponent
                ],
                exports: [
                    DxoTextsComponent
                ],
            })
        ], DxoTextsModule);
        return DxoTextsModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoTickIntervalComponent = /** @class */ (function (_super) {
        __extends(DxoTickIntervalComponent, _super);
        function DxoTickIntervalComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoTickIntervalComponent.prototype, "days", {
            get: function () {
                return this._getOption('days');
            },
            set: function (value) {
                this._setOption('days', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTickIntervalComponent.prototype, "hours", {
            get: function () {
                return this._getOption('hours');
            },
            set: function (value) {
                this._setOption('hours', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTickIntervalComponent.prototype, "milliseconds", {
            get: function () {
                return this._getOption('milliseconds');
            },
            set: function (value) {
                this._setOption('milliseconds', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTickIntervalComponent.prototype, "minutes", {
            get: function () {
                return this._getOption('minutes');
            },
            set: function (value) {
                this._setOption('minutes', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTickIntervalComponent.prototype, "months", {
            get: function () {
                return this._getOption('months');
            },
            set: function (value) {
                this._setOption('months', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTickIntervalComponent.prototype, "quarters", {
            get: function () {
                return this._getOption('quarters');
            },
            set: function (value) {
                this._setOption('quarters', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTickIntervalComponent.prototype, "seconds", {
            get: function () {
                return this._getOption('seconds');
            },
            set: function (value) {
                this._setOption('seconds', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTickIntervalComponent.prototype, "weeks", {
            get: function () {
                return this._getOption('weeks');
            },
            set: function (value) {
                this._setOption('weeks', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTickIntervalComponent.prototype, "years", {
            get: function () {
                return this._getOption('years');
            },
            set: function (value) {
                this._setOption('years', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTickIntervalComponent.prototype, "_optionPath", {
            get: function () {
                return 'tickInterval';
            },
            enumerable: true,
            configurable: true
        });
        DxoTickIntervalComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoTickIntervalComponent.prototype, "days", null);
        __decorate([
            core.Input()
        ], DxoTickIntervalComponent.prototype, "hours", null);
        __decorate([
            core.Input()
        ], DxoTickIntervalComponent.prototype, "milliseconds", null);
        __decorate([
            core.Input()
        ], DxoTickIntervalComponent.prototype, "minutes", null);
        __decorate([
            core.Input()
        ], DxoTickIntervalComponent.prototype, "months", null);
        __decorate([
            core.Input()
        ], DxoTickIntervalComponent.prototype, "quarters", null);
        __decorate([
            core.Input()
        ], DxoTickIntervalComponent.prototype, "seconds", null);
        __decorate([
            core.Input()
        ], DxoTickIntervalComponent.prototype, "weeks", null);
        __decorate([
            core.Input()
        ], DxoTickIntervalComponent.prototype, "years", null);
        DxoTickIntervalComponent = __decorate([
            core.Component({
                selector: 'dxo-tick-interval',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoTickIntervalComponent);
        return DxoTickIntervalComponent;
    }(core$1.NestedOption));
    var DxoTickIntervalModule = /** @class */ (function () {
        function DxoTickIntervalModule() {
        }
        DxoTickIntervalModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoTickIntervalComponent
                ],
                exports: [
                    DxoTickIntervalComponent
                ],
            })
        ], DxoTickIntervalModule);
        return DxoTickIntervalModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoTickComponent = /** @class */ (function (_super) {
        __extends(DxoTickComponent, _super);
        function DxoTickComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoTickComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTickComponent.prototype, "length", {
            get: function () {
                return this._getOption('length');
            },
            set: function (value) {
                this._setOption('length', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTickComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTickComponent.prototype, "shift", {
            get: function () {
                return this._getOption('shift');
            },
            set: function (value) {
                this._setOption('shift', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTickComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTickComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTickComponent.prototype, "_optionPath", {
            get: function () {
                return 'tick';
            },
            enumerable: true,
            configurable: true
        });
        DxoTickComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoTickComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoTickComponent.prototype, "length", null);
        __decorate([
            core.Input()
        ], DxoTickComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxoTickComponent.prototype, "shift", null);
        __decorate([
            core.Input()
        ], DxoTickComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxoTickComponent.prototype, "width", null);
        DxoTickComponent = __decorate([
            core.Component({
                selector: 'dxo-tick',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoTickComponent);
        return DxoTickComponent;
    }(core$1.NestedOption));
    var DxoTickModule = /** @class */ (function () {
        function DxoTickModule() {
        }
        DxoTickModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoTickComponent
                ],
                exports: [
                    DxoTickComponent
                ],
            })
        ], DxoTickModule);
        return DxoTickModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoTileComponent = /** @class */ (function (_super) {
        __extends(DxoTileComponent, _super);
        function DxoTileComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoTileComponent.prototype, "border", {
            get: function () {
                return this._getOption('border');
            },
            set: function (value) {
                this._setOption('border', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTileComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTileComponent.prototype, "hoverStyle", {
            get: function () {
                return this._getOption('hoverStyle');
            },
            set: function (value) {
                this._setOption('hoverStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTileComponent.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTileComponent.prototype, "selectionStyle", {
            get: function () {
                return this._getOption('selectionStyle');
            },
            set: function (value) {
                this._setOption('selectionStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTileComponent.prototype, "_optionPath", {
            get: function () {
                return 'tile';
            },
            enumerable: true,
            configurable: true
        });
        DxoTileComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoTileComponent.prototype, "border", null);
        __decorate([
            core.Input()
        ], DxoTileComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoTileComponent.prototype, "hoverStyle", null);
        __decorate([
            core.Input()
        ], DxoTileComponent.prototype, "label", null);
        __decorate([
            core.Input()
        ], DxoTileComponent.prototype, "selectionStyle", null);
        DxoTileComponent = __decorate([
            core.Component({
                selector: 'dxo-tile',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoTileComponent);
        return DxoTileComponent;
    }(core$1.NestedOption));
    var DxoTileModule = /** @class */ (function () {
        function DxoTileModule() {
        }
        DxoTileModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoTileComponent
                ],
                exports: [
                    DxoTileComponent
                ],
            })
        ], DxoTileModule);
        return DxoTileModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoTitleComponent = /** @class */ (function (_super) {
        __extends(DxoTitleComponent, _super);
        function DxoTitleComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoTitleComponent.prototype, "font", {
            get: function () {
                return this._getOption('font');
            },
            set: function (value) {
                this._setOption('font', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTitleComponent.prototype, "horizontalAlignment", {
            get: function () {
                return this._getOption('horizontalAlignment');
            },
            set: function (value) {
                this._setOption('horizontalAlignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTitleComponent.prototype, "margin", {
            get: function () {
                return this._getOption('margin');
            },
            set: function (value) {
                this._setOption('margin', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTitleComponent.prototype, "placeholderSize", {
            get: function () {
                return this._getOption('placeholderSize');
            },
            set: function (value) {
                this._setOption('placeholderSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTitleComponent.prototype, "subtitle", {
            get: function () {
                return this._getOption('subtitle');
            },
            set: function (value) {
                this._setOption('subtitle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTitleComponent.prototype, "text", {
            get: function () {
                return this._getOption('text');
            },
            set: function (value) {
                this._setOption('text', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTitleComponent.prototype, "verticalAlignment", {
            get: function () {
                return this._getOption('verticalAlignment');
            },
            set: function (value) {
                this._setOption('verticalAlignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTitleComponent.prototype, "textOverflow", {
            get: function () {
                return this._getOption('textOverflow');
            },
            set: function (value) {
                this._setOption('textOverflow', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTitleComponent.prototype, "wordWrap", {
            get: function () {
                return this._getOption('wordWrap');
            },
            set: function (value) {
                this._setOption('wordWrap', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTitleComponent.prototype, "alignment", {
            get: function () {
                return this._getOption('alignment');
            },
            set: function (value) {
                this._setOption('alignment', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTitleComponent.prototype, "_optionPath", {
            get: function () {
                return 'title';
            },
            enumerable: true,
            configurable: true
        });
        DxoTitleComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoTitleComponent.prototype, "font", null);
        __decorate([
            core.Input()
        ], DxoTitleComponent.prototype, "horizontalAlignment", null);
        __decorate([
            core.Input()
        ], DxoTitleComponent.prototype, "margin", null);
        __decorate([
            core.Input()
        ], DxoTitleComponent.prototype, "placeholderSize", null);
        __decorate([
            core.Input()
        ], DxoTitleComponent.prototype, "subtitle", null);
        __decorate([
            core.Input()
        ], DxoTitleComponent.prototype, "text", null);
        __decorate([
            core.Input()
        ], DxoTitleComponent.prototype, "verticalAlignment", null);
        __decorate([
            core.Input()
        ], DxoTitleComponent.prototype, "textOverflow", null);
        __decorate([
            core.Input()
        ], DxoTitleComponent.prototype, "wordWrap", null);
        __decorate([
            core.Input()
        ], DxoTitleComponent.prototype, "alignment", null);
        DxoTitleComponent = __decorate([
            core.Component({
                selector: 'dxo-title',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoTitleComponent);
        return DxoTitleComponent;
    }(core$1.NestedOption));
    var DxoTitleModule = /** @class */ (function () {
        function DxoTitleModule() {
        }
        DxoTitleModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoTitleComponent
                ],
                exports: [
                    DxoTitleComponent
                ],
            })
        ], DxoTitleModule);
        return DxoTitleModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoHtmlEditorToolbar = /** @class */ (function (_super) {
        __extends(DxoHtmlEditorToolbar, _super);
        function DxoHtmlEditorToolbar() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoHtmlEditorToolbar.prototype, "container", {
            get: function () {
                return this._getOption('container');
            },
            set: function (value) {
                this._setOption('container', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHtmlEditorToolbar.prototype, "items", {
            get: function () {
                return this._getOption('items');
            },
            set: function (value) {
                this._setOption('items', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoHtmlEditorToolbar;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoToolbarComponent = /** @class */ (function (_super) {
        __extends(DxoToolbarComponent, _super);
        function DxoToolbarComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoToolbarComponent.prototype, "_optionPath", {
            get: function () {
                return 'toolbar';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoToolbarComponent.prototype, "itemsChildren", {
            get: function () {
                return this._getOption('items');
            },
            set: function (value) {
                this.setChildren('items', value);
            },
            enumerable: true,
            configurable: true
        });
        DxoToolbarComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiItemComponent; }))
        ], DxoToolbarComponent.prototype, "itemsChildren", null);
        DxoToolbarComponent = __decorate([
            core.Component({
                selector: 'dxo-toolbar',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'container',
                    'items'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoToolbarComponent);
        return DxoToolbarComponent;
    }(DxoHtmlEditorToolbar));
    var DxoToolbarModule = /** @class */ (function () {
        function DxoToolbarModule() {
        }
        DxoToolbarModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoToolbarComponent
                ],
                exports: [
                    DxoToolbarComponent
                ],
            })
        ], DxoToolbarModule);
        return DxoToolbarModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoTooltipComponent = /** @class */ (function (_super) {
        __extends(DxoTooltipComponent, _super);
        function DxoTooltipComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoTooltipComponent.prototype, "arrowLength", {
            get: function () {
                return this._getOption('arrowLength');
            },
            set: function (value) {
                this._setOption('arrowLength', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "border", {
            get: function () {
                return this._getOption('border');
            },
            set: function (value) {
                this._setOption('border', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "container", {
            get: function () {
                return this._getOption('container');
            },
            set: function (value) {
                this._setOption('container', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "cornerRadius", {
            get: function () {
                return this._getOption('cornerRadius');
            },
            set: function (value) {
                this._setOption('cornerRadius', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "customizeTooltip", {
            get: function () {
                return this._getOption('customizeTooltip');
            },
            set: function (value) {
                this._setOption('customizeTooltip', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "enabled", {
            get: function () {
                return this._getOption('enabled');
            },
            set: function (value) {
                this._setOption('enabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "font", {
            get: function () {
                return this._getOption('font');
            },
            set: function (value) {
                this._setOption('font', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "format", {
            get: function () {
                return this._getOption('format');
            },
            set: function (value) {
                this._setOption('format', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "paddingLeftRight", {
            get: function () {
                return this._getOption('paddingLeftRight');
            },
            set: function (value) {
                this._setOption('paddingLeftRight', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "paddingTopBottom", {
            get: function () {
                return this._getOption('paddingTopBottom');
            },
            set: function (value) {
                this._setOption('paddingTopBottom', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "shadow", {
            get: function () {
                return this._getOption('shadow');
            },
            set: function (value) {
                this._setOption('shadow', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "zIndex", {
            get: function () {
                return this._getOption('zIndex');
            },
            set: function (value) {
                this._setOption('zIndex', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "argumentFormat", {
            get: function () {
                return this._getOption('argumentFormat');
            },
            set: function (value) {
                this._setOption('argumentFormat', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "location", {
            get: function () {
                return this._getOption('location');
            },
            set: function (value) {
                this._setOption('location', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "shared", {
            get: function () {
                return this._getOption('shared');
            },
            set: function (value) {
                this._setOption('shared', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "isShown", {
            get: function () {
                return this._getOption('isShown');
            },
            set: function (value) {
                this._setOption('isShown', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "text", {
            get: function () {
                return this._getOption('text');
            },
            set: function (value) {
                this._setOption('text', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "position", {
            get: function () {
                return this._getOption('position');
            },
            set: function (value) {
                this._setOption('position', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "showMode", {
            get: function () {
                return this._getOption('showMode');
            },
            set: function (value) {
                this._setOption('showMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "customizeLinkTooltip", {
            get: function () {
                return this._getOption('customizeLinkTooltip');
            },
            set: function (value) {
                this._setOption('customizeLinkTooltip', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "customizeNodeTooltip", {
            get: function () {
                return this._getOption('customizeNodeTooltip');
            },
            set: function (value) {
                this._setOption('customizeNodeTooltip', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoTooltipComponent.prototype, "_optionPath", {
            get: function () {
                return 'tooltip';
            },
            enumerable: true,
            configurable: true
        });
        DxoTooltipComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "arrowLength", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "border", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "container", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "cornerRadius", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "customizeTooltip", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "enabled", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "font", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "format", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "paddingLeftRight", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "paddingTopBottom", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "shadow", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "zIndex", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "argumentFormat", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "location", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "shared", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "isShown", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "text", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "position", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "showMode", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "customizeLinkTooltip", null);
        __decorate([
            core.Input()
        ], DxoTooltipComponent.prototype, "customizeNodeTooltip", null);
        DxoTooltipComponent = __decorate([
            core.Component({
                selector: 'dxo-tooltip',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoTooltipComponent);
        return DxoTooltipComponent;
    }(core$1.NestedOption));
    var DxoTooltipModule = /** @class */ (function () {
        function DxoTooltipModule() {
        }
        DxoTooltipModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoTooltipComponent
                ],
                exports: [
                    DxoTooltipComponent
                ],
            })
        ], DxoTooltipModule);
        return DxoTooltipModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoUrlComponent = /** @class */ (function (_super) {
        __extends(DxoUrlComponent, _super);
        function DxoUrlComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoUrlComponent.prototype, "rangeMaxPoint", {
            get: function () {
                return this._getOption('rangeMaxPoint');
            },
            set: function (value) {
                this._setOption('rangeMaxPoint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoUrlComponent.prototype, "rangeMinPoint", {
            get: function () {
                return this._getOption('rangeMinPoint');
            },
            set: function (value) {
                this._setOption('rangeMinPoint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoUrlComponent.prototype, "_optionPath", {
            get: function () {
                return 'url';
            },
            enumerable: true,
            configurable: true
        });
        DxoUrlComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoUrlComponent.prototype, "rangeMaxPoint", null);
        __decorate([
            core.Input()
        ], DxoUrlComponent.prototype, "rangeMinPoint", null);
        DxoUrlComponent = __decorate([
            core.Component({
                selector: 'dxo-url',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoUrlComponent);
        return DxoUrlComponent;
    }(core$1.NestedOption));
    var DxoUrlModule = /** @class */ (function () {
        function DxoUrlModule() {
        }
        DxoUrlModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoUrlComponent
                ],
                exports: [
                    DxoUrlComponent
                ],
            })
        ], DxoUrlModule);
        return DxoUrlModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiValueAxisComponent = /** @class */ (function (_super) {
        __extends(DxiValueAxisComponent, _super);
        function DxiValueAxisComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            _this._createEventEmitters([
                { emit: 'visualRangeChange' }
            ]);
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiValueAxisComponent.prototype, "allowDecimals", {
            get: function () {
                return this._getOption('allowDecimals');
            },
            set: function (value) {
                this._setOption('allowDecimals', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "autoBreaksEnabled", {
            get: function () {
                return this._getOption('autoBreaksEnabled');
            },
            set: function (value) {
                this._setOption('autoBreaksEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "axisDivisionFactor", {
            get: function () {
                return this._getOption('axisDivisionFactor');
            },
            set: function (value) {
                this._setOption('axisDivisionFactor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "breaks", {
            get: function () {
                return this._getOption('breaks');
            },
            set: function (value) {
                this._setOption('breaks', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "breakStyle", {
            get: function () {
                return this._getOption('breakStyle');
            },
            set: function (value) {
                this._setOption('breakStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "categories", {
            get: function () {
                return this._getOption('categories');
            },
            set: function (value) {
                this._setOption('categories', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "constantLines", {
            get: function () {
                return this._getOption('constantLines');
            },
            set: function (value) {
                this._setOption('constantLines', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "constantLineStyle", {
            get: function () {
                return this._getOption('constantLineStyle');
            },
            set: function (value) {
                this._setOption('constantLineStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "discreteAxisDivisionMode", {
            get: function () {
                return this._getOption('discreteAxisDivisionMode');
            },
            set: function (value) {
                this._setOption('discreteAxisDivisionMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "endOnTick", {
            get: function () {
                return this._getOption('endOnTick');
            },
            set: function (value) {
                this._setOption('endOnTick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "grid", {
            get: function () {
                return this._getOption('grid');
            },
            set: function (value) {
                this._setOption('grid', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "inverted", {
            get: function () {
                return this._getOption('inverted');
            },
            set: function (value) {
                this._setOption('inverted', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "logarithmBase", {
            get: function () {
                return this._getOption('logarithmBase');
            },
            set: function (value) {
                this._setOption('logarithmBase', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "max", {
            get: function () {
                return this._getOption('max');
            },
            set: function (value) {
                this._setOption('max', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "maxAutoBreakCount", {
            get: function () {
                return this._getOption('maxAutoBreakCount');
            },
            set: function (value) {
                this._setOption('maxAutoBreakCount', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "maxValueMargin", {
            get: function () {
                return this._getOption('maxValueMargin');
            },
            set: function (value) {
                this._setOption('maxValueMargin', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "min", {
            get: function () {
                return this._getOption('min');
            },
            set: function (value) {
                this._setOption('min', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "minorGrid", {
            get: function () {
                return this._getOption('minorGrid');
            },
            set: function (value) {
                this._setOption('minorGrid', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "minorTick", {
            get: function () {
                return this._getOption('minorTick');
            },
            set: function (value) {
                this._setOption('minorTick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "minorTickCount", {
            get: function () {
                return this._getOption('minorTickCount');
            },
            set: function (value) {
                this._setOption('minorTickCount', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "minorTickInterval", {
            get: function () {
                return this._getOption('minorTickInterval');
            },
            set: function (value) {
                this._setOption('minorTickInterval', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "minValueMargin", {
            get: function () {
                return this._getOption('minValueMargin');
            },
            set: function (value) {
                this._setOption('minValueMargin', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "minVisualRangeLength", {
            get: function () {
                return this._getOption('minVisualRangeLength');
            },
            set: function (value) {
                this._setOption('minVisualRangeLength', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "multipleAxesSpacing", {
            get: function () {
                return this._getOption('multipleAxesSpacing');
            },
            set: function (value) {
                this._setOption('multipleAxesSpacing', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "pane", {
            get: function () {
                return this._getOption('pane');
            },
            set: function (value) {
                this._setOption('pane', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "placeholderSize", {
            get: function () {
                return this._getOption('placeholderSize');
            },
            set: function (value) {
                this._setOption('placeholderSize', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "position", {
            get: function () {
                return this._getOption('position');
            },
            set: function (value) {
                this._setOption('position', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "showZero", {
            get: function () {
                return this._getOption('showZero');
            },
            set: function (value) {
                this._setOption('showZero', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "strips", {
            get: function () {
                return this._getOption('strips');
            },
            set: function (value) {
                this._setOption('strips', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "stripStyle", {
            get: function () {
                return this._getOption('stripStyle');
            },
            set: function (value) {
                this._setOption('stripStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "synchronizedValue", {
            get: function () {
                return this._getOption('synchronizedValue');
            },
            set: function (value) {
                this._setOption('synchronizedValue', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "tick", {
            get: function () {
                return this._getOption('tick');
            },
            set: function (value) {
                this._setOption('tick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "tickInterval", {
            get: function () {
                return this._getOption('tickInterval');
            },
            set: function (value) {
                this._setOption('tickInterval', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "title", {
            get: function () {
                return this._getOption('title');
            },
            set: function (value) {
                this._setOption('title', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "valueMarginsEnabled", {
            get: function () {
                return this._getOption('valueMarginsEnabled');
            },
            set: function (value) {
                this._setOption('valueMarginsEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "valueType", {
            get: function () {
                return this._getOption('valueType');
            },
            set: function (value) {
                this._setOption('valueType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "visualRange", {
            get: function () {
                return this._getOption('visualRange');
            },
            set: function (value) {
                this._setOption('visualRange', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "visualRangeUpdateMode", {
            get: function () {
                return this._getOption('visualRangeUpdateMode');
            },
            set: function (value) {
                this._setOption('visualRangeUpdateMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "wholeRange", {
            get: function () {
                return this._getOption('wholeRange');
            },
            set: function (value) {
                this._setOption('wholeRange', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "_optionPath", {
            get: function () {
                return 'valueAxis';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "breaksChildren", {
            get: function () {
                return this._getOption('breaks');
            },
            set: function (value) {
                this.setChildren('breaks', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "constantLinesChildren", {
            get: function () {
                return this._getOption('constantLines');
            },
            set: function (value) {
                this.setChildren('constantLines', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiValueAxisComponent.prototype, "stripsChildren", {
            get: function () {
                return this._getOption('strips');
            },
            set: function (value) {
                this.setChildren('strips', value);
            },
            enumerable: true,
            configurable: true
        });
        DxiValueAxisComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "allowDecimals", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "autoBreaksEnabled", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "axisDivisionFactor", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "breaks", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "breakStyle", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "categories", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "constantLines", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "constantLineStyle", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "discreteAxisDivisionMode", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "endOnTick", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "grid", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "inverted", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "label", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "logarithmBase", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "max", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "maxAutoBreakCount", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "maxValueMargin", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "min", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "minorGrid", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "minorTick", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "minorTickCount", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "minorTickInterval", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "minValueMargin", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "minVisualRangeLength", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "multipleAxesSpacing", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "name", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "pane", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "placeholderSize", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "position", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "showZero", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "strips", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "stripStyle", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "synchronizedValue", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "tick", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "tickInterval", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "title", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "type", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "valueMarginsEnabled", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "valueType", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "visualRange", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "visualRangeUpdateMode", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "wholeRange", null);
        __decorate([
            core.Input()
        ], DxiValueAxisComponent.prototype, "width", null);
        __decorate([
            core.Output()
        ], DxiValueAxisComponent.prototype, "visualRangeChange", void 0);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiBreakComponent; }))
        ], DxiValueAxisComponent.prototype, "breaksChildren", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiConstantLineComponent; }))
        ], DxiValueAxisComponent.prototype, "constantLinesChildren", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiStripComponent; }))
        ], DxiValueAxisComponent.prototype, "stripsChildren", null);
        DxiValueAxisComponent = __decorate([
            core.Component({
                selector: 'dxi-value-axis',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiValueAxisComponent);
        return DxiValueAxisComponent;
    }(core$1.CollectionNestedOption));
    var DxiValueAxisModule = /** @class */ (function () {
        function DxiValueAxisModule() {
        }
        DxiValueAxisModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiValueAxisComponent
                ],
                exports: [
                    DxiValueAxisComponent
                ],
            })
        ], DxiValueAxisModule);
        return DxiValueAxisModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoValueAxisComponent = /** @class */ (function (_super) {
        __extends(DxoValueAxisComponent, _super);
        function DxoValueAxisComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoValueAxisComponent.prototype, "allowDecimals", {
            get: function () {
                return this._getOption('allowDecimals');
            },
            set: function (value) {
                this._setOption('allowDecimals', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "axisDivisionFactor", {
            get: function () {
                return this._getOption('axisDivisionFactor');
            },
            set: function (value) {
                this._setOption('axisDivisionFactor', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "categories", {
            get: function () {
                return this._getOption('categories');
            },
            set: function (value) {
                this._setOption('categories', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "constantLines", {
            get: function () {
                return this._getOption('constantLines');
            },
            set: function (value) {
                this._setOption('constantLines', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "constantLineStyle", {
            get: function () {
                return this._getOption('constantLineStyle');
            },
            set: function (value) {
                this._setOption('constantLineStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "discreteAxisDivisionMode", {
            get: function () {
                return this._getOption('discreteAxisDivisionMode');
            },
            set: function (value) {
                this._setOption('discreteAxisDivisionMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "endOnTick", {
            get: function () {
                return this._getOption('endOnTick');
            },
            set: function (value) {
                this._setOption('endOnTick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "grid", {
            get: function () {
                return this._getOption('grid');
            },
            set: function (value) {
                this._setOption('grid', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "inverted", {
            get: function () {
                return this._getOption('inverted');
            },
            set: function (value) {
                this._setOption('inverted', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "logarithmBase", {
            get: function () {
                return this._getOption('logarithmBase');
            },
            set: function (value) {
                this._setOption('logarithmBase', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "maxValueMargin", {
            get: function () {
                return this._getOption('maxValueMargin');
            },
            set: function (value) {
                this._setOption('maxValueMargin', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "minorGrid", {
            get: function () {
                return this._getOption('minorGrid');
            },
            set: function (value) {
                this._setOption('minorGrid', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "minorTick", {
            get: function () {
                return this._getOption('minorTick');
            },
            set: function (value) {
                this._setOption('minorTick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "minorTickCount", {
            get: function () {
                return this._getOption('minorTickCount');
            },
            set: function (value) {
                this._setOption('minorTickCount', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "minorTickInterval", {
            get: function () {
                return this._getOption('minorTickInterval');
            },
            set: function (value) {
                this._setOption('minorTickInterval', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "minValueMargin", {
            get: function () {
                return this._getOption('minValueMargin');
            },
            set: function (value) {
                this._setOption('minValueMargin', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "showZero", {
            get: function () {
                return this._getOption('showZero');
            },
            set: function (value) {
                this._setOption('showZero', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "strips", {
            get: function () {
                return this._getOption('strips');
            },
            set: function (value) {
                this._setOption('strips', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "stripStyle", {
            get: function () {
                return this._getOption('stripStyle');
            },
            set: function (value) {
                this._setOption('stripStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "tick", {
            get: function () {
                return this._getOption('tick');
            },
            set: function (value) {
                this._setOption('tick', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "tickInterval", {
            get: function () {
                return this._getOption('tickInterval');
            },
            set: function (value) {
                this._setOption('tickInterval', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "valueMarginsEnabled", {
            get: function () {
                return this._getOption('valueMarginsEnabled');
            },
            set: function (value) {
                this._setOption('valueMarginsEnabled', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "valueType", {
            get: function () {
                return this._getOption('valueType');
            },
            set: function (value) {
                this._setOption('valueType', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "max", {
            get: function () {
                return this._getOption('max');
            },
            set: function (value) {
                this._setOption('max', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "min", {
            get: function () {
                return this._getOption('min');
            },
            set: function (value) {
                this._setOption('min', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "_optionPath", {
            get: function () {
                return 'valueAxis';
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "constantLinesChildren", {
            get: function () {
                return this._getOption('constantLines');
            },
            set: function (value) {
                this.setChildren('constantLines', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueAxisComponent.prototype, "stripsChildren", {
            get: function () {
                return this._getOption('strips');
            },
            set: function (value) {
                this.setChildren('strips', value);
            },
            enumerable: true,
            configurable: true
        });
        DxoValueAxisComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "allowDecimals", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "axisDivisionFactor", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "categories", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "constantLines", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "constantLineStyle", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "discreteAxisDivisionMode", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "endOnTick", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "grid", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "inverted", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "label", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "logarithmBase", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "maxValueMargin", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "minorGrid", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "minorTick", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "minorTickCount", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "minorTickInterval", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "minValueMargin", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "showZero", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "strips", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "stripStyle", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "tick", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "tickInterval", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "type", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "valueMarginsEnabled", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "valueType", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "width", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "max", null);
        __decorate([
            core.Input()
        ], DxoValueAxisComponent.prototype, "min", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiConstantLineComponent; }))
        ], DxoValueAxisComponent.prototype, "constantLinesChildren", null);
        __decorate([
            core.ContentChildren(core.forwardRef(function () { return DxiStripComponent; }))
        ], DxoValueAxisComponent.prototype, "stripsChildren", null);
        DxoValueAxisComponent = __decorate([
            core.Component({
                selector: 'dxo-value-axis',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoValueAxisComponent);
        return DxoValueAxisComponent;
    }(core$1.NestedOption));
    var DxoValueAxisModule = /** @class */ (function () {
        function DxoValueAxisModule() {
        }
        DxoValueAxisModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoValueAxisComponent
                ],
                exports: [
                    DxoValueAxisComponent
                ],
            })
        ], DxoValueAxisModule);
        return DxoValueAxisModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoValueErrorBarComponent = /** @class */ (function (_super) {
        __extends(DxoValueErrorBarComponent, _super);
        function DxoValueErrorBarComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoValueErrorBarComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueErrorBarComponent.prototype, "displayMode", {
            get: function () {
                return this._getOption('displayMode');
            },
            set: function (value) {
                this._setOption('displayMode', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueErrorBarComponent.prototype, "edgeLength", {
            get: function () {
                return this._getOption('edgeLength');
            },
            set: function (value) {
                this._setOption('edgeLength', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueErrorBarComponent.prototype, "highValueField", {
            get: function () {
                return this._getOption('highValueField');
            },
            set: function (value) {
                this._setOption('highValueField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueErrorBarComponent.prototype, "lineWidth", {
            get: function () {
                return this._getOption('lineWidth');
            },
            set: function (value) {
                this._setOption('lineWidth', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueErrorBarComponent.prototype, "lowValueField", {
            get: function () {
                return this._getOption('lowValueField');
            },
            set: function (value) {
                this._setOption('lowValueField', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueErrorBarComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueErrorBarComponent.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueErrorBarComponent.prototype, "value", {
            get: function () {
                return this._getOption('value');
            },
            set: function (value) {
                this._setOption('value', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoValueErrorBarComponent.prototype, "_optionPath", {
            get: function () {
                return 'valueErrorBar';
            },
            enumerable: true,
            configurable: true
        });
        DxoValueErrorBarComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoValueErrorBarComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoValueErrorBarComponent.prototype, "displayMode", null);
        __decorate([
            core.Input()
        ], DxoValueErrorBarComponent.prototype, "edgeLength", null);
        __decorate([
            core.Input()
        ], DxoValueErrorBarComponent.prototype, "highValueField", null);
        __decorate([
            core.Input()
        ], DxoValueErrorBarComponent.prototype, "lineWidth", null);
        __decorate([
            core.Input()
        ], DxoValueErrorBarComponent.prototype, "lowValueField", null);
        __decorate([
            core.Input()
        ], DxoValueErrorBarComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxoValueErrorBarComponent.prototype, "type", null);
        __decorate([
            core.Input()
        ], DxoValueErrorBarComponent.prototype, "value", null);
        DxoValueErrorBarComponent = __decorate([
            core.Component({
                selector: 'dxo-value-error-bar',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoValueErrorBarComponent);
        return DxoValueErrorBarComponent;
    }(core$1.NestedOption));
    var DxoValueErrorBarModule = /** @class */ (function () {
        function DxoValueErrorBarModule() {
        }
        DxoValueErrorBarModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoValueErrorBarComponent
                ],
                exports: [
                    DxoValueErrorBarComponent
                ],
            })
        ], DxoValueErrorBarModule);
        return DxoValueErrorBarModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoValueFormatComponent = /** @class */ (function (_super) {
        __extends(DxoValueFormatComponent, _super);
        function DxoValueFormatComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoValueFormatComponent.prototype, "_optionPath", {
            get: function () {
                return 'valueFormat';
            },
            enumerable: true,
            configurable: true
        });
        DxoValueFormatComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoValueFormatComponent = __decorate([
            core.Component({
                selector: 'dxo-value-format',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'currency',
                    'formatter',
                    'parser',
                    'precision',
                    'type'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoValueFormatComponent);
        return DxoValueFormatComponent;
    }(DxoFormat));
    var DxoValueFormatModule = /** @class */ (function () {
        function DxoValueFormatModule() {
        }
        DxoValueFormatModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoValueFormatComponent
                ],
                exports: [
                    DxoValueFormatComponent
                ],
            })
        ], DxoValueFormatModule);
        return DxoValueFormatModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoValueIndicatorComponent = /** @class */ (function (_super) {
        __extends(DxoValueIndicatorComponent, _super);
        function DxoValueIndicatorComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoValueIndicatorComponent.prototype, "_optionPath", {
            get: function () {
                return 'valueIndicator';
            },
            enumerable: true,
            configurable: true
        });
        DxoValueIndicatorComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoValueIndicatorComponent = __decorate([
            core.Component({
                selector: 'dxo-value-indicator',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'arrowLength',
                    'backgroundColor',
                    'baseValue',
                    'beginAdaptingAtRadius',
                    'color',
                    'horizontalOrientation',
                    'indentFromCenter',
                    'length',
                    'offset',
                    'palette',
                    'secondColor',
                    'secondFraction',
                    'size',
                    'spindleGapSize',
                    'spindleSize',
                    'text',
                    'type',
                    'verticalOrientation',
                    'width'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoValueIndicatorComponent);
        return DxoValueIndicatorComponent;
    }(DxoGaugeIndicator));
    var DxoValueIndicatorModule = /** @class */ (function () {
        function DxoValueIndicatorModule() {
        }
        DxoValueIndicatorModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoValueIndicatorComponent
                ],
                exports: [
                    DxoValueIndicatorComponent
                ],
            })
        ], DxoValueIndicatorModule);
        return DxoValueIndicatorModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoHtmlEditorVariables = /** @class */ (function (_super) {
        __extends(DxoHtmlEditorVariables, _super);
        function DxoHtmlEditorVariables() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(DxoHtmlEditorVariables.prototype, "dataSource", {
            get: function () {
                return this._getOption('dataSource');
            },
            set: function (value) {
                this._setOption('dataSource', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoHtmlEditorVariables.prototype, "escapeChar", {
            get: function () {
                return this._getOption('escapeChar');
            },
            set: function (value) {
                this._setOption('escapeChar', value);
            },
            enumerable: true,
            configurable: true
        });
        return DxoHtmlEditorVariables;
    }(core$1.NestedOption));

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoVariablesComponent = /** @class */ (function (_super) {
        __extends(DxoVariablesComponent, _super);
        function DxoVariablesComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoVariablesComponent.prototype, "_optionPath", {
            get: function () {
                return 'variables';
            },
            enumerable: true,
            configurable: true
        });
        DxoVariablesComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        DxoVariablesComponent = __decorate([
            core.Component({
                selector: 'dxo-variables',
                template: '',
                providers: [core$1.NestedOptionHost],
                inputs: [
                    'dataSource',
                    'escapeChar'
                ],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoVariablesComponent);
        return DxoVariablesComponent;
    }(DxoHtmlEditorVariables));
    var DxoVariablesModule = /** @class */ (function () {
        function DxoVariablesModule() {
        }
        DxoVariablesModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoVariablesComponent
                ],
                exports: [
                    DxoVariablesComponent
                ],
            })
        ], DxoVariablesModule);
        return DxoVariablesModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoVerticalLineComponent = /** @class */ (function (_super) {
        __extends(DxoVerticalLineComponent, _super);
        function DxoVerticalLineComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoVerticalLineComponent.prototype, "color", {
            get: function () {
                return this._getOption('color');
            },
            set: function (value) {
                this._setOption('color', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoVerticalLineComponent.prototype, "dashStyle", {
            get: function () {
                return this._getOption('dashStyle');
            },
            set: function (value) {
                this._setOption('dashStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoVerticalLineComponent.prototype, "label", {
            get: function () {
                return this._getOption('label');
            },
            set: function (value) {
                this._setOption('label', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoVerticalLineComponent.prototype, "opacity", {
            get: function () {
                return this._getOption('opacity');
            },
            set: function (value) {
                this._setOption('opacity', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoVerticalLineComponent.prototype, "visible", {
            get: function () {
                return this._getOption('visible');
            },
            set: function (value) {
                this._setOption('visible', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoVerticalLineComponent.prototype, "width", {
            get: function () {
                return this._getOption('width');
            },
            set: function (value) {
                this._setOption('width', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoVerticalLineComponent.prototype, "_optionPath", {
            get: function () {
                return 'verticalLine';
            },
            enumerable: true,
            configurable: true
        });
        DxoVerticalLineComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoVerticalLineComponent.prototype, "color", null);
        __decorate([
            core.Input()
        ], DxoVerticalLineComponent.prototype, "dashStyle", null);
        __decorate([
            core.Input()
        ], DxoVerticalLineComponent.prototype, "label", null);
        __decorate([
            core.Input()
        ], DxoVerticalLineComponent.prototype, "opacity", null);
        __decorate([
            core.Input()
        ], DxoVerticalLineComponent.prototype, "visible", null);
        __decorate([
            core.Input()
        ], DxoVerticalLineComponent.prototype, "width", null);
        DxoVerticalLineComponent = __decorate([
            core.Component({
                selector: 'dxo-vertical-line',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoVerticalLineComponent);
        return DxoVerticalLineComponent;
    }(core$1.NestedOption));
    var DxoVerticalLineModule = /** @class */ (function () {
        function DxoVerticalLineModule() {
        }
        DxoVerticalLineModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoVerticalLineComponent
                ],
                exports: [
                    DxoVerticalLineComponent
                ],
            })
        ], DxoVerticalLineModule);
        return DxoVerticalLineModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxiViewComponent = /** @class */ (function (_super) {
        __extends(DxiViewComponent, _super);
        function DxiViewComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxiViewComponent.prototype, "agendaDuration", {
            get: function () {
                return this._getOption('agendaDuration');
            },
            set: function (value) {
                this._setOption('agendaDuration', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "appointmentCollectorTemplate", {
            get: function () {
                return this._getOption('appointmentCollectorTemplate');
            },
            set: function (value) {
                this._setOption('appointmentCollectorTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "appointmentTemplate", {
            get: function () {
                return this._getOption('appointmentTemplate');
            },
            set: function (value) {
                this._setOption('appointmentTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "appointmentTooltipTemplate", {
            get: function () {
                return this._getOption('appointmentTooltipTemplate');
            },
            set: function (value) {
                this._setOption('appointmentTooltipTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "cellDuration", {
            get: function () {
                return this._getOption('cellDuration');
            },
            set: function (value) {
                this._setOption('cellDuration', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "dataCellTemplate", {
            get: function () {
                return this._getOption('dataCellTemplate');
            },
            set: function (value) {
                this._setOption('dataCellTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "dateCellTemplate", {
            get: function () {
                return this._getOption('dateCellTemplate');
            },
            set: function (value) {
                this._setOption('dateCellTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "dropDownAppointmentTemplate", {
            get: function () {
                return this._getOption('dropDownAppointmentTemplate');
            },
            set: function (value) {
                this._setOption('dropDownAppointmentTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "endDayHour", {
            get: function () {
                return this._getOption('endDayHour');
            },
            set: function (value) {
                this._setOption('endDayHour', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "firstDayOfWeek", {
            get: function () {
                return this._getOption('firstDayOfWeek');
            },
            set: function (value) {
                this._setOption('firstDayOfWeek', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "groupByDate", {
            get: function () {
                return this._getOption('groupByDate');
            },
            set: function (value) {
                this._setOption('groupByDate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "groupOrientation", {
            get: function () {
                return this._getOption('groupOrientation');
            },
            set: function (value) {
                this._setOption('groupOrientation', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "groups", {
            get: function () {
                return this._getOption('groups');
            },
            set: function (value) {
                this._setOption('groups', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "intervalCount", {
            get: function () {
                return this._getOption('intervalCount');
            },
            set: function (value) {
                this._setOption('intervalCount', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "maxAppointmentsPerCell", {
            get: function () {
                return this._getOption('maxAppointmentsPerCell');
            },
            set: function (value) {
                this._setOption('maxAppointmentsPerCell', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "name", {
            get: function () {
                return this._getOption('name');
            },
            set: function (value) {
                this._setOption('name', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "resourceCellTemplate", {
            get: function () {
                return this._getOption('resourceCellTemplate');
            },
            set: function (value) {
                this._setOption('resourceCellTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "startDate", {
            get: function () {
                return this._getOption('startDate');
            },
            set: function (value) {
                this._setOption('startDate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "startDayHour", {
            get: function () {
                return this._getOption('startDayHour');
            },
            set: function (value) {
                this._setOption('startDayHour', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "timeCellTemplate", {
            get: function () {
                return this._getOption('timeCellTemplate');
            },
            set: function (value) {
                this._setOption('timeCellTemplate', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "type", {
            get: function () {
                return this._getOption('type');
            },
            set: function (value) {
                this._setOption('type', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxiViewComponent.prototype, "_optionPath", {
            get: function () {
                return 'views';
            },
            enumerable: true,
            configurable: true
        });
        DxiViewComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "agendaDuration", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "appointmentCollectorTemplate", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "appointmentTemplate", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "appointmentTooltipTemplate", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "cellDuration", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "dataCellTemplate", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "dateCellTemplate", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "dropDownAppointmentTemplate", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "endDayHour", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "firstDayOfWeek", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "groupByDate", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "groupOrientation", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "groups", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "intervalCount", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "maxAppointmentsPerCell", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "name", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "resourceCellTemplate", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "startDate", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "startDayHour", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "timeCellTemplate", null);
        __decorate([
            core.Input()
        ], DxiViewComponent.prototype, "type", null);
        DxiViewComponent = __decorate([
            core.Component({
                selector: 'dxi-view',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxiViewComponent);
        return DxiViewComponent;
    }(core$1.CollectionNestedOption));
    var DxiViewModule = /** @class */ (function () {
        function DxiViewModule() {
        }
        DxiViewModule = __decorate([
            core.NgModule({
                declarations: [
                    DxiViewComponent
                ],
                exports: [
                    DxiViewComponent
                ],
            })
        ], DxiViewModule);
        return DxiViewModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoWidthComponent = /** @class */ (function (_super) {
        __extends(DxoWidthComponent, _super);
        function DxoWidthComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoWidthComponent.prototype, "rangeMaxPoint", {
            get: function () {
                return this._getOption('rangeMaxPoint');
            },
            set: function (value) {
                this._setOption('rangeMaxPoint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoWidthComponent.prototype, "rangeMinPoint", {
            get: function () {
                return this._getOption('rangeMinPoint');
            },
            set: function (value) {
                this._setOption('rangeMinPoint', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoWidthComponent.prototype, "end", {
            get: function () {
                return this._getOption('end');
            },
            set: function (value) {
                this._setOption('end', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoWidthComponent.prototype, "start", {
            get: function () {
                return this._getOption('start');
            },
            set: function (value) {
                this._setOption('start', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoWidthComponent.prototype, "_optionPath", {
            get: function () {
                return 'width';
            },
            enumerable: true,
            configurable: true
        });
        DxoWidthComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoWidthComponent.prototype, "rangeMaxPoint", null);
        __decorate([
            core.Input()
        ], DxoWidthComponent.prototype, "rangeMinPoint", null);
        __decorate([
            core.Input()
        ], DxoWidthComponent.prototype, "end", null);
        __decorate([
            core.Input()
        ], DxoWidthComponent.prototype, "start", null);
        DxoWidthComponent = __decorate([
            core.Component({
                selector: 'dxo-width',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoWidthComponent);
        return DxoWidthComponent;
    }(core$1.NestedOption));
    var DxoWidthModule = /** @class */ (function () {
        function DxoWidthModule() {
        }
        DxoWidthModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoWidthComponent
                ],
                exports: [
                    DxoWidthComponent
                ],
            })
        ], DxoWidthModule);
        return DxoWidthModule;
    }());

    /*!
     * devextreme-angular
     * Version: 19.1.6
     * Build date: Tue Oct 22 2019
     *
     * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED
     *
     * This software may be modified and distributed under the terms
     * of the MIT license. See the LICENSE file in the root of the project for details.
     *
     * https://github.com/DevExpress/devextreme-angular
     */
    var DxoZoomAndPanComponent = /** @class */ (function (_super) {
        __extends(DxoZoomAndPanComponent, _super);
        function DxoZoomAndPanComponent(parentOptionHost, optionHost) {
            var _this = _super.call(this) || this;
            parentOptionHost.setNestedOption(_this);
            optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
            return _this;
        }
        Object.defineProperty(DxoZoomAndPanComponent.prototype, "allowMouseWheel", {
            get: function () {
                return this._getOption('allowMouseWheel');
            },
            set: function (value) {
                this._setOption('allowMouseWheel', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoZoomAndPanComponent.prototype, "allowTouchGestures", {
            get: function () {
                return this._getOption('allowTouchGestures');
            },
            set: function (value) {
                this._setOption('allowTouchGestures', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoZoomAndPanComponent.prototype, "argumentAxis", {
            get: function () {
                return this._getOption('argumentAxis');
            },
            set: function (value) {
                this._setOption('argumentAxis', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoZoomAndPanComponent.prototype, "dragBoxStyle", {
            get: function () {
                return this._getOption('dragBoxStyle');
            },
            set: function (value) {
                this._setOption('dragBoxStyle', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoZoomAndPanComponent.prototype, "dragToZoom", {
            get: function () {
                return this._getOption('dragToZoom');
            },
            set: function (value) {
                this._setOption('dragToZoom', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoZoomAndPanComponent.prototype, "panKey", {
            get: function () {
                return this._getOption('panKey');
            },
            set: function (value) {
                this._setOption('panKey', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoZoomAndPanComponent.prototype, "valueAxis", {
            get: function () {
                return this._getOption('valueAxis');
            },
            set: function (value) {
                this._setOption('valueAxis', value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DxoZoomAndPanComponent.prototype, "_optionPath", {
            get: function () {
                return 'zoomAndPan';
            },
            enumerable: true,
            configurable: true
        });
        DxoZoomAndPanComponent.ctorParameters = function () { return [
            { type: core$1.NestedOptionHost, decorators: [{ type: core.SkipSelf }, { type: core.Host }] },
            { type: core$1.NestedOptionHost, decorators: [{ type: core.Host }] }
        ]; };
        __decorate([
            core.Input()
        ], DxoZoomAndPanComponent.prototype, "allowMouseWheel", null);
        __decorate([
            core.Input()
        ], DxoZoomAndPanComponent.prototype, "allowTouchGestures", null);
        __decorate([
            core.Input()
        ], DxoZoomAndPanComponent.prototype, "argumentAxis", null);
        __decorate([
            core.Input()
        ], DxoZoomAndPanComponent.prototype, "dragBoxStyle", null);
        __decorate([
            core.Input()
        ], DxoZoomAndPanComponent.prototype, "dragToZoom", null);
        __decorate([
            core.Input()
        ], DxoZoomAndPanComponent.prototype, "panKey", null);
        __decorate([
            core.Input()
        ], DxoZoomAndPanComponent.prototype, "valueAxis", null);
        DxoZoomAndPanComponent = __decorate([
            core.Component({
                selector: 'dxo-zoom-and-pan',
                template: '',
                providers: [core$1.NestedOptionHost],
                styles: ['']
            }),
            __param(0, core.SkipSelf()), __param(0, core.Host()),
            __param(1, core.Host())
        ], DxoZoomAndPanComponent);
        return DxoZoomAndPanComponent;
    }(core$1.NestedOption));
    var DxoZoomAndPanModule = /** @class */ (function () {
        function DxoZoomAndPanModule() {
        }
        DxoZoomAndPanModule = __decorate([
            core.NgModule({
                declarations: [
                    DxoZoomAndPanComponent
                ],
                exports: [
                    DxoZoomAndPanComponent
                ],
            })
        ], DxoZoomAndPanModule);
        return DxoZoomAndPanModule;
    }());

    exports.DxiAnnotationComponent = DxiAnnotationComponent;
    exports.DxiAnnotationModule = DxiAnnotationModule;
    exports.DxiBreakComponent = DxiBreakComponent;
    exports.DxiBreakModule = DxiBreakModule;
    exports.DxiButtonComponent = DxiButtonComponent;
    exports.DxiButtonModule = DxiButtonModule;
    exports.DxiCenterComponent = DxiCenterComponent;
    exports.DxiCenterModule = DxiCenterModule;
    exports.DxiColComponent = DxiColComponent;
    exports.DxiColModule = DxiColModule;
    exports.DxiColumnComponent = DxiColumnComponent;
    exports.DxiColumnModule = DxiColumnModule;
    exports.DxiConstantLineComponent = DxiConstantLineComponent;
    exports.DxiConstantLineModule = DxiConstantLineModule;
    exports.DxiCustomOperationComponent = DxiCustomOperationComponent;
    exports.DxiCustomOperationModule = DxiCustomOperationModule;
    exports.DxiFieldComponent = DxiFieldComponent;
    exports.DxiFieldModule = DxiFieldModule;
    exports.DxiGroupItemComponent = DxiGroupItemComponent;
    exports.DxiGroupItemModule = DxiGroupItemModule;
    exports.DxiItemComponent = DxiItemComponent;
    exports.DxiItemModule = DxiItemModule;
    exports.DxiLayerComponent = DxiLayerComponent;
    exports.DxiLayerModule = DxiLayerModule;
    exports.DxiLegendComponent = DxiLegendComponent;
    exports.DxiLegendModule = DxiLegendModule;
    exports.DxiLocationComponent = DxiLocationComponent;
    exports.DxiLocationModule = DxiLocationModule;
    exports.DxiMarkerComponent = DxiMarkerComponent;
    exports.DxiMarkerModule = DxiMarkerModule;
    exports.DxiMentionComponent = DxiMentionComponent;
    exports.DxiMentionModule = DxiMentionModule;
    exports.DxiMenuItemComponent = DxiMenuItemComponent;
    exports.DxiMenuItemModule = DxiMenuItemModule;
    exports.DxiPaneComponent = DxiPaneComponent;
    exports.DxiPaneModule = DxiPaneModule;
    exports.DxiRangeComponent = DxiRangeComponent;
    exports.DxiRangeModule = DxiRangeModule;
    exports.DxiResourceComponent = DxiResourceComponent;
    exports.DxiResourceModule = DxiResourceModule;
    exports.DxiRouteComponent = DxiRouteComponent;
    exports.DxiRouteModule = DxiRouteModule;
    exports.DxiRowComponent = DxiRowComponent;
    exports.DxiRowModule = DxiRowModule;
    exports.DxiSeriesComponent = DxiSeriesComponent;
    exports.DxiSeriesModule = DxiSeriesModule;
    exports.DxiSortByGroupSummaryInfoComponent = DxiSortByGroupSummaryInfoComponent;
    exports.DxiSortByGroupSummaryInfoModule = DxiSortByGroupSummaryInfoModule;
    exports.DxiStripComponent = DxiStripComponent;
    exports.DxiStripModule = DxiStripModule;
    exports.DxiTabComponent = DxiTabComponent;
    exports.DxiTabModule = DxiTabModule;
    exports.DxiToolbarItemComponent = DxiToolbarItemComponent;
    exports.DxiToolbarItemModule = DxiToolbarItemModule;
    exports.DxiTotalItemComponent = DxiTotalItemComponent;
    exports.DxiTotalItemModule = DxiTotalItemModule;
    exports.DxiValidationRuleComponent = DxiValidationRuleComponent;
    exports.DxiValidationRuleModule = DxiValidationRuleModule;
    exports.DxiValueAxisComponent = DxiValueAxisComponent;
    exports.DxiValueAxisModule = DxiValueAxisModule;
    exports.DxiViewComponent = DxiViewComponent;
    exports.DxiViewModule = DxiViewModule;
    exports.DxoAdapterComponent = DxoAdapterComponent;
    exports.DxoAdapterModule = DxoAdapterModule;
    exports.DxoAdaptiveLayoutComponent = DxoAdaptiveLayoutComponent;
    exports.DxoAdaptiveLayoutModule = DxoAdaptiveLayoutModule;
    exports.DxoAggregationComponent = DxoAggregationComponent;
    exports.DxoAggregationIntervalComponent = DxoAggregationIntervalComponent;
    exports.DxoAggregationIntervalModule = DxoAggregationIntervalModule;
    exports.DxoAggregationModule = DxoAggregationModule;
    exports.DxoAnimationComponent = DxoAnimationComponent;
    exports.DxoAnimationModule = DxoAnimationModule;
    exports.DxoAreaComponent = DxoAreaComponent;
    exports.DxoAreaModule = DxoAreaModule;
    exports.DxoArgumentAxisComponent = DxoArgumentAxisComponent;
    exports.DxoArgumentAxisModule = DxoArgumentAxisModule;
    exports.DxoArgumentFormatComponent = DxoArgumentFormatComponent;
    exports.DxoArgumentFormatModule = DxoArgumentFormatModule;
    exports.DxoAtComponent = DxoAtComponent;
    exports.DxoAtModule = DxoAtModule;
    exports.DxoBackgroundComponent = DxoBackgroundComponent;
    exports.DxoBackgroundModule = DxoBackgroundModule;
    exports.DxoBarComponent = DxoBarComponent;
    exports.DxoBarModule = DxoBarModule;
    exports.DxoBehaviorComponent = DxoBehaviorComponent;
    exports.DxoBehaviorModule = DxoBehaviorModule;
    exports.DxoBorderComponent = DxoBorderComponent;
    exports.DxoBorderModule = DxoBorderModule;
    exports.DxoBoundaryOffsetComponent = DxoBoundaryOffsetComponent;
    exports.DxoBoundaryOffsetModule = DxoBoundaryOffsetModule;
    exports.DxoBoxComponent = DxoBoxComponent;
    exports.DxoBoxModule = DxoBoxModule;
    exports.DxoBreakStyleComponent = DxoBreakStyleComponent;
    exports.DxoBreakStyleModule = DxoBreakStyleModule;
    exports.DxoBubbleComponent = DxoBubbleComponent;
    exports.DxoBubbleModule = DxoBubbleModule;
    exports.DxoButtonOptionsComponent = DxoButtonOptionsComponent;
    exports.DxoButtonOptionsModule = DxoButtonOptionsModule;
    exports.DxoCalendarOptionsComponent = DxoCalendarOptionsComponent;
    exports.DxoCalendarOptionsModule = DxoCalendarOptionsModule;
    exports.DxoCandlestickComponent = DxoCandlestickComponent;
    exports.DxoCandlestickModule = DxoCandlestickModule;
    exports.DxoChartComponent = DxoChartComponent;
    exports.DxoChartModule = DxoChartModule;
    exports.DxoColCountByScreenComponent = DxoColCountByScreenComponent;
    exports.DxoColCountByScreenModule = DxoColCountByScreenModule;
    exports.DxoCollisionComponent = DxoCollisionComponent;
    exports.DxoCollisionModule = DxoCollisionModule;
    exports.DxoColorizerComponent = DxoColorizerComponent;
    exports.DxoColorizerModule = DxoColorizerModule;
    exports.DxoColumnChooserComponent = DxoColumnChooserComponent;
    exports.DxoColumnChooserModule = DxoColumnChooserModule;
    exports.DxoColumnFixingComponent = DxoColumnFixingComponent;
    exports.DxoColumnFixingModule = DxoColumnFixingModule;
    exports.DxoCommonAnnotationSettingsComponent = DxoCommonAnnotationSettingsComponent;
    exports.DxoCommonAnnotationSettingsModule = DxoCommonAnnotationSettingsModule;
    exports.DxoCommonAxisSettingsComponent = DxoCommonAxisSettingsComponent;
    exports.DxoCommonAxisSettingsModule = DxoCommonAxisSettingsModule;
    exports.DxoCommonPaneSettingsComponent = DxoCommonPaneSettingsComponent;
    exports.DxoCommonPaneSettingsModule = DxoCommonPaneSettingsModule;
    exports.DxoCommonSeriesSettingsComponent = DxoCommonSeriesSettingsComponent;
    exports.DxoCommonSeriesSettingsModule = DxoCommonSeriesSettingsModule;
    exports.DxoConnectorComponent = DxoConnectorComponent;
    exports.DxoConnectorModule = DxoConnectorModule;
    exports.DxoConstantLineStyleComponent = DxoConstantLineStyleComponent;
    exports.DxoConstantLineStyleModule = DxoConstantLineStyleModule;
    exports.DxoControlBarComponent = DxoControlBarComponent;
    exports.DxoControlBarModule = DxoControlBarModule;
    exports.DxoCrosshairComponent = DxoCrosshairComponent;
    exports.DxoCrosshairModule = DxoCrosshairModule;
    exports.DxoDataPrepareSettingsComponent = DxoDataPrepareSettingsComponent;
    exports.DxoDataPrepareSettingsModule = DxoDataPrepareSettingsModule;
    exports.DxoDataSourceComponent = DxoDataSourceComponent;
    exports.DxoDataSourceModule = DxoDataSourceModule;
    exports.DxoDelayComponent = DxoDelayComponent;
    exports.DxoDelayModule = DxoDelayModule;
    exports.DxoDisplayFormatComponent = DxoDisplayFormatComponent;
    exports.DxoDisplayFormatModule = DxoDisplayFormatModule;
    exports.DxoDragBoxStyleComponent = DxoDragBoxStyleComponent;
    exports.DxoDragBoxStyleModule = DxoDragBoxStyleModule;
    exports.DxoDropDownOptionsComponent = DxoDropDownOptionsComponent;
    exports.DxoDropDownOptionsModule = DxoDropDownOptionsModule;
    exports.DxoEditingComponent = DxoEditingComponent;
    exports.DxoEditingModule = DxoEditingModule;
    exports.DxoExportComponent = DxoExportComponent;
    exports.DxoExportModule = DxoExportModule;
    exports.DxoFieldChooserComponent = DxoFieldChooserComponent;
    exports.DxoFieldChooserModule = DxoFieldChooserModule;
    exports.DxoFieldPanelComponent = DxoFieldPanelComponent;
    exports.DxoFieldPanelModule = DxoFieldPanelModule;
    exports.DxoFilterBuilderComponent = DxoFilterBuilderComponent;
    exports.DxoFilterBuilderModule = DxoFilterBuilderModule;
    exports.DxoFilterBuilderPopupComponent = DxoFilterBuilderPopupComponent;
    exports.DxoFilterBuilderPopupModule = DxoFilterBuilderPopupModule;
    exports.DxoFilterOperationDescriptionsComponent = DxoFilterOperationDescriptionsComponent;
    exports.DxoFilterOperationDescriptionsModule = DxoFilterOperationDescriptionsModule;
    exports.DxoFilterPanelComponent = DxoFilterPanelComponent;
    exports.DxoFilterPanelModule = DxoFilterPanelModule;
    exports.DxoFilterRowComponent = DxoFilterRowComponent;
    exports.DxoFilterRowModule = DxoFilterRowModule;
    exports.DxoFontComponent = DxoFontComponent;
    exports.DxoFontModule = DxoFontModule;
    exports.DxoFormComponent = DxoFormComponent;
    exports.DxoFormItemComponent = DxoFormItemComponent;
    exports.DxoFormItemModule = DxoFormItemModule;
    exports.DxoFormModule = DxoFormModule;
    exports.DxoFormatComponent = DxoFormatComponent;
    exports.DxoFormatModule = DxoFormatModule;
    exports.DxoFullstackedareaComponent = DxoFullstackedareaComponent;
    exports.DxoFullstackedareaModule = DxoFullstackedareaModule;
    exports.DxoFullstackedbarComponent = DxoFullstackedbarComponent;
    exports.DxoFullstackedbarModule = DxoFullstackedbarModule;
    exports.DxoFullstackedlineComponent = DxoFullstackedlineComponent;
    exports.DxoFullstackedlineModule = DxoFullstackedlineModule;
    exports.DxoFullstackedsplineComponent = DxoFullstackedsplineComponent;
    exports.DxoFullstackedsplineModule = DxoFullstackedsplineModule;
    exports.DxoFullstackedsplineareaComponent = DxoFullstackedsplineareaComponent;
    exports.DxoFullstackedsplineareaModule = DxoFullstackedsplineareaModule;
    exports.DxoGeometryComponent = DxoGeometryComponent;
    exports.DxoGeometryModule = DxoGeometryModule;
    exports.DxoGridComponent = DxoGridComponent;
    exports.DxoGridModule = DxoGridModule;
    exports.DxoGroupComponent = DxoGroupComponent;
    exports.DxoGroupModule = DxoGroupModule;
    exports.DxoGroupOperationDescriptionsComponent = DxoGroupOperationDescriptionsComponent;
    exports.DxoGroupOperationDescriptionsModule = DxoGroupOperationDescriptionsModule;
    exports.DxoGroupPanelComponent = DxoGroupPanelComponent;
    exports.DxoGroupPanelModule = DxoGroupPanelModule;
    exports.DxoGroupingComponent = DxoGroupingComponent;
    exports.DxoGroupingModule = DxoGroupingModule;
    exports.DxoHatchingComponent = DxoHatchingComponent;
    exports.DxoHatchingModule = DxoHatchingModule;
    exports.DxoHeaderFilterComponent = DxoHeaderFilterComponent;
    exports.DxoHeaderFilterModule = DxoHeaderFilterModule;
    exports.DxoHeightComponent = DxoHeightComponent;
    exports.DxoHeightModule = DxoHeightModule;
    exports.DxoHideComponent = DxoHideComponent;
    exports.DxoHideEventComponent = DxoHideEventComponent;
    exports.DxoHideEventModule = DxoHideEventModule;
    exports.DxoHideModule = DxoHideModule;
    exports.DxoHorizontalLineComponent = DxoHorizontalLineComponent;
    exports.DxoHorizontalLineModule = DxoHorizontalLineModule;
    exports.DxoHoverStyleComponent = DxoHoverStyleComponent;
    exports.DxoHoverStyleModule = DxoHoverStyleModule;
    exports.DxoImageComponent = DxoImageComponent;
    exports.DxoImageModule = DxoImageModule;
    exports.DxoIndentComponent = DxoIndentComponent;
    exports.DxoIndentModule = DxoIndentModule;
    exports.DxoItemComponent = DxoItemComponent;
    exports.DxoItemModule = DxoItemModule;
    exports.DxoItemTextFormatComponent = DxoItemTextFormatComponent;
    exports.DxoItemTextFormatModule = DxoItemTextFormatModule;
    exports.DxoKeyComponent = DxoKeyComponent;
    exports.DxoKeyModule = DxoKeyModule;
    exports.DxoKeyboardNavigationComponent = DxoKeyboardNavigationComponent;
    exports.DxoKeyboardNavigationModule = DxoKeyboardNavigationModule;
    exports.DxoLabelComponent = DxoLabelComponent;
    exports.DxoLabelModule = DxoLabelModule;
    exports.DxoLegendComponent = DxoLegendComponent;
    exports.DxoLegendModule = DxoLegendModule;
    exports.DxoLineComponent = DxoLineComponent;
    exports.DxoLineModule = DxoLineModule;
    exports.DxoLinkComponent = DxoLinkComponent;
    exports.DxoLinkModule = DxoLinkModule;
    exports.DxoLoadPanelComponent = DxoLoadPanelComponent;
    exports.DxoLoadPanelModule = DxoLoadPanelModule;
    exports.DxoLoadingIndicatorComponent = DxoLoadingIndicatorComponent;
    exports.DxoLoadingIndicatorModule = DxoLoadingIndicatorModule;
    exports.DxoLookupComponent = DxoLookupComponent;
    exports.DxoLookupModule = DxoLookupModule;
    exports.DxoMarginComponent = DxoMarginComponent;
    exports.DxoMarginModule = DxoMarginModule;
    exports.DxoMarkerComponent = DxoMarkerComponent;
    exports.DxoMarkerModule = DxoMarkerModule;
    exports.DxoMasterDetailComponent = DxoMasterDetailComponent;
    exports.DxoMasterDetailModule = DxoMasterDetailModule;
    exports.DxoMaxRangeComponent = DxoMaxRangeComponent;
    exports.DxoMaxRangeModule = DxoMaxRangeModule;
    exports.DxoMediaResizingComponent = DxoMediaResizingComponent;
    exports.DxoMediaResizingModule = DxoMediaResizingModule;
    exports.DxoMinRangeComponent = DxoMinRangeComponent;
    exports.DxoMinRangeModule = DxoMinRangeModule;
    exports.DxoMinVisualRangeLengthComponent = DxoMinVisualRangeLengthComponent;
    exports.DxoMinVisualRangeLengthModule = DxoMinVisualRangeLengthModule;
    exports.DxoMinorGridComponent = DxoMinorGridComponent;
    exports.DxoMinorGridModule = DxoMinorGridModule;
    exports.DxoMinorTickComponent = DxoMinorTickComponent;
    exports.DxoMinorTickIntervalComponent = DxoMinorTickIntervalComponent;
    exports.DxoMinorTickIntervalModule = DxoMinorTickIntervalModule;
    exports.DxoMinorTickModule = DxoMinorTickModule;
    exports.DxoMyComponent = DxoMyComponent;
    exports.DxoMyModule = DxoMyModule;
    exports.DxoNodeComponent = DxoNodeComponent;
    exports.DxoNodeModule = DxoNodeModule;
    exports.DxoOffsetComponent = DxoOffsetComponent;
    exports.DxoOffsetModule = DxoOffsetModule;
    exports.DxoOperationDescriptionsComponent = DxoOperationDescriptionsComponent;
    exports.DxoOperationDescriptionsModule = DxoOperationDescriptionsModule;
    exports.DxoOptionsComponent = DxoOptionsComponent;
    exports.DxoOptionsModule = DxoOptionsModule;
    exports.DxoPagerComponent = DxoPagerComponent;
    exports.DxoPagerModule = DxoPagerModule;
    exports.DxoPagingComponent = DxoPagingComponent;
    exports.DxoPagingModule = DxoPagingModule;
    exports.DxoPointComponent = DxoPointComponent;
    exports.DxoPointModule = DxoPointModule;
    exports.DxoPopupComponent = DxoPopupComponent;
    exports.DxoPopupModule = DxoPopupModule;
    exports.DxoPositionComponent = DxoPositionComponent;
    exports.DxoPositionModule = DxoPositionModule;
    exports.DxoRangeContainerComponent = DxoRangeContainerComponent;
    exports.DxoRangeContainerModule = DxoRangeContainerModule;
    exports.DxoRangeareaComponent = DxoRangeareaComponent;
    exports.DxoRangeareaModule = DxoRangeareaModule;
    exports.DxoRangebarComponent = DxoRangebarComponent;
    exports.DxoRangebarModule = DxoRangebarModule;
    exports.DxoReductionComponent = DxoReductionComponent;
    exports.DxoReductionModule = DxoReductionModule;
    exports.DxoRemoteOperationsComponent = DxoRemoteOperationsComponent;
    exports.DxoRemoteOperationsModule = DxoRemoteOperationsModule;
    exports.DxoScaleComponent = DxoScaleComponent;
    exports.DxoScaleModule = DxoScaleModule;
    exports.DxoScatterComponent = DxoScatterComponent;
    exports.DxoScatterModule = DxoScatterModule;
    exports.DxoScrollBarComponent = DxoScrollBarComponent;
    exports.DxoScrollBarModule = DxoScrollBarModule;
    exports.DxoScrollingComponent = DxoScrollingComponent;
    exports.DxoScrollingModule = DxoScrollingModule;
    exports.DxoSearchEditorOptionsComponent = DxoSearchEditorOptionsComponent;
    exports.DxoSearchEditorOptionsModule = DxoSearchEditorOptionsModule;
    exports.DxoSearchPanelComponent = DxoSearchPanelComponent;
    exports.DxoSearchPanelModule = DxoSearchPanelModule;
    exports.DxoSelectionComponent = DxoSelectionComponent;
    exports.DxoSelectionModule = DxoSelectionModule;
    exports.DxoSelectionStyleComponent = DxoSelectionStyleComponent;
    exports.DxoSelectionStyleModule = DxoSelectionStyleModule;
    exports.DxoSeriesTemplateComponent = DxoSeriesTemplateComponent;
    exports.DxoSeriesTemplateModule = DxoSeriesTemplateModule;
    exports.DxoShadowComponent = DxoShadowComponent;
    exports.DxoShadowModule = DxoShadowModule;
    exports.DxoShowComponent = DxoShowComponent;
    exports.DxoShowEventComponent = DxoShowEventComponent;
    exports.DxoShowEventModule = DxoShowEventModule;
    exports.DxoShowFirstSubmenuModeComponent = DxoShowFirstSubmenuModeComponent;
    exports.DxoShowFirstSubmenuModeModule = DxoShowFirstSubmenuModeModule;
    exports.DxoShowModule = DxoShowModule;
    exports.DxoShowSubmenuModeComponent = DxoShowSubmenuModeComponent;
    exports.DxoShowSubmenuModeModule = DxoShowSubmenuModeModule;
    exports.DxoShutterComponent = DxoShutterComponent;
    exports.DxoShutterModule = DxoShutterModule;
    exports.DxoSizeComponent = DxoSizeComponent;
    exports.DxoSizeModule = DxoSizeModule;
    exports.DxoSliderHandleComponent = DxoSliderHandleComponent;
    exports.DxoSliderHandleModule = DxoSliderHandleModule;
    exports.DxoSliderMarkerComponent = DxoSliderMarkerComponent;
    exports.DxoSliderMarkerModule = DxoSliderMarkerModule;
    exports.DxoSmallValuesGroupingComponent = DxoSmallValuesGroupingComponent;
    exports.DxoSmallValuesGroupingModule = DxoSmallValuesGroupingModule;
    exports.DxoSortingComponent = DxoSortingComponent;
    exports.DxoSortingModule = DxoSortingModule;
    exports.DxoSourceComponent = DxoSourceComponent;
    exports.DxoSourceModule = DxoSourceModule;
    exports.DxoSplineComponent = DxoSplineComponent;
    exports.DxoSplineModule = DxoSplineModule;
    exports.DxoSplineareaComponent = DxoSplineareaComponent;
    exports.DxoSplineareaModule = DxoSplineareaModule;
    exports.DxoStackedareaComponent = DxoStackedareaComponent;
    exports.DxoStackedareaModule = DxoStackedareaModule;
    exports.DxoStackedbarComponent = DxoStackedbarComponent;
    exports.DxoStackedbarModule = DxoStackedbarModule;
    exports.DxoStackedlineComponent = DxoStackedlineComponent;
    exports.DxoStackedlineModule = DxoStackedlineModule;
    exports.DxoStackedsplineComponent = DxoStackedsplineComponent;
    exports.DxoStackedsplineModule = DxoStackedsplineModule;
    exports.DxoStackedsplineareaComponent = DxoStackedsplineareaComponent;
    exports.DxoStackedsplineareaModule = DxoStackedsplineareaModule;
    exports.DxoStateStoringComponent = DxoStateStoringComponent;
    exports.DxoStateStoringModule = DxoStateStoringModule;
    exports.DxoStepareaComponent = DxoStepareaComponent;
    exports.DxoStepareaModule = DxoStepareaModule;
    exports.DxoSteplineComponent = DxoSteplineComponent;
    exports.DxoSteplineModule = DxoSteplineModule;
    exports.DxoStockComponent = DxoStockComponent;
    exports.DxoStockModule = DxoStockModule;
    exports.DxoStoreComponent = DxoStoreComponent;
    exports.DxoStoreModule = DxoStoreModule;
    exports.DxoStripStyleComponent = DxoStripStyleComponent;
    exports.DxoStripStyleModule = DxoStripStyleModule;
    exports.DxoSubtitleComponent = DxoSubtitleComponent;
    exports.DxoSubtitleModule = DxoSubtitleModule;
    exports.DxoSubvalueIndicatorComponent = DxoSubvalueIndicatorComponent;
    exports.DxoSubvalueIndicatorModule = DxoSubvalueIndicatorModule;
    exports.DxoSummaryComponent = DxoSummaryComponent;
    exports.DxoSummaryModule = DxoSummaryModule;
    exports.DxoTabPanelOptionsComponent = DxoTabPanelOptionsComponent;
    exports.DxoTabPanelOptionsModule = DxoTabPanelOptionsModule;
    exports.DxoTextComponent = DxoTextComponent;
    exports.DxoTextModule = DxoTextModule;
    exports.DxoTextsComponent = DxoTextsComponent;
    exports.DxoTextsModule = DxoTextsModule;
    exports.DxoTickComponent = DxoTickComponent;
    exports.DxoTickIntervalComponent = DxoTickIntervalComponent;
    exports.DxoTickIntervalModule = DxoTickIntervalModule;
    exports.DxoTickModule = DxoTickModule;
    exports.DxoTileComponent = DxoTileComponent;
    exports.DxoTileModule = DxoTileModule;
    exports.DxoTitleComponent = DxoTitleComponent;
    exports.DxoTitleModule = DxoTitleModule;
    exports.DxoToolbarComponent = DxoToolbarComponent;
    exports.DxoToolbarModule = DxoToolbarModule;
    exports.DxoTooltipComponent = DxoTooltipComponent;
    exports.DxoTooltipModule = DxoTooltipModule;
    exports.DxoUrlComponent = DxoUrlComponent;
    exports.DxoUrlModule = DxoUrlModule;
    exports.DxoValueAxisComponent = DxoValueAxisComponent;
    exports.DxoValueAxisModule = DxoValueAxisModule;
    exports.DxoValueErrorBarComponent = DxoValueErrorBarComponent;
    exports.DxoValueErrorBarModule = DxoValueErrorBarModule;
    exports.DxoValueFormatComponent = DxoValueFormatComponent;
    exports.DxoValueFormatModule = DxoValueFormatModule;
    exports.DxoValueIndicatorComponent = DxoValueIndicatorComponent;
    exports.DxoValueIndicatorModule = DxoValueIndicatorModule;
    exports.DxoVariablesComponent = DxoVariablesComponent;
    exports.DxoVariablesModule = DxoVariablesModule;
    exports.DxoVerticalLineComponent = DxoVerticalLineComponent;
    exports.DxoVerticalLineModule = DxoVerticalLineModule;
    exports.DxoWidthComponent = DxoWidthComponent;
    exports.DxoWidthModule = DxoWidthModule;
    exports.DxoZoomAndPanComponent = DxoZoomAndPanComponent;
    exports.DxoZoomAndPanModule = DxoZoomAndPanModule;
    exports.ɵa = DxoAnimationConfig;
    exports.ɵb = DxiChartAnnotationConfig;
    exports.ɵba = DxoTabPanelOptions;
    exports.ɵbb = DxoHtmlEditorToolbar;
    exports.ɵbc = DxoHtmlEditorVariables;
    exports.ɵc = DxoChartCommonSeriesSettings;
    exports.ɵd = DxiVizScaleBreak;
    exports.ɵe = DxoFormat;
    exports.ɵf = DxoBoxOptions;
    exports.ɵg = DxiButtonGroupItem;
    exports.ɵh = DxiTextEditorButton;
    exports.ɵi = DxoButtonOptions;
    exports.ɵj = DxoCalendarOptions;
    exports.ɵk = DxiChartSeries;
    exports.ɵl = DxiDataGridColumn;
    exports.ɵm = DxoChartCommonAnnotationConfig;
    exports.ɵn = DxiFilterBuilderCustomOperation;
    exports.ɵo = DxoPivotGridDataSource;
    exports.ɵp = DxiFilterBuilderField;
    exports.ɵq = DxoPopupOptions;
    exports.ɵr = DxoFilterBuilderOptions;
    exports.ɵs = DxoVizFont;
    exports.ɵt = DxoFormSimpleItem;
    exports.ɵu = DxoFormOptions;
    exports.ɵv = DxoHtmlEditorMediaResizing;
    exports.ɵw = DxiHtmlEditorMention;
    exports.ɵx = DxoPositionConfig;
    exports.ɵy = DxoTextBoxOptions;
    exports.ɵz = DxoGaugeIndicator;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=devextreme-angular-ui-nested.umd.js.map
