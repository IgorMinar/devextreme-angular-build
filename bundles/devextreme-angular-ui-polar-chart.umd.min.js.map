{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://devextreme-angular/ui/polar-chart/index.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","DxPolarChartComponent","_super","elementRef","ngZone","templateHost","_watcherHelper","_idh","optionHost","transferState","platformId","_this","call","this","_createEventEmitters","subscribe","emit","setHost","paramIndex","decorator","__","constructor","prototype","create","tslib_1.__extends","_getOption","value","_setOption","setChildren","_createInstance","element","options","DxPolarChart","ngOnDestroy","_destroyWidget","ngOnChanges","changes","setupChanges","prop","_optionsToUpdate","setup","ngDoCheck","doCheck","checkWatchers","clearChangedOptions","name","isSetup","setupSingle","isChanged","getChanges","ElementRef","NgZone","DxTemplateHost","WatcherHelper","IterableDifferHelper","NestedOptionHost","TransferState","Inject","args","PLATFORM_ID","tslib_1.__decorate","Input","Output","ContentChildren","DxiSeriesComponent","Component","selector","template","providers","tslib_1.__param","DxComponent","DxPolarChartModule","NgModule","imports","DxoAdaptiveLayoutModule","DxoAnimationModule","DxoArgumentAxisModule","DxiConstantLineModule","DxoLabelModule","DxoFontModule","DxoConstantLineStyleModule","DxoGridModule","DxoFormatModule","DxoMinorGridModule","DxoMinorTickModule","DxoMinorTickIntervalModule","DxiStripModule","DxoStripStyleModule","DxoTickModule","DxoTickIntervalModule","DxoCommonAxisSettingsModule","DxoCommonSeriesSettingsModule","DxoAreaModule","DxoBorderModule","DxoHoverStyleModule","DxoHatchingModule","DxoConnectorModule","DxoPointModule","DxoImageModule","DxoSelectionStyleModule","DxoValueErrorBarModule","DxoBarModule","DxoArgumentFormatModule","DxoLineModule","DxoScatterModule","DxoStackedbarModule","DxoDataPrepareSettingsModule","DxoExportModule","DxoLegendModule","DxoMarginModule","DxoTitleModule","DxoSubtitleModule","DxoLoadingIndicatorModule","DxiSeriesModule","DxoSeriesTemplateModule","DxoSizeModule","DxoTooltipModule","DxoShadowModule","DxoValueAxisModule","DxIntegrationModule","DxTemplateModule","BrowserTransferStateModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*!\n * devextreme-angular\n * Version: 19.1.6\n * Build date: Tue Oct 22 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges,\r\n    ContentChildren,\r\n    QueryList\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxPolarChart from 'devextreme/viz/polar_chart';\r\n\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\nimport { DxoAdaptiveLayoutModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoAnimationModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoArgumentAxisModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiConstantLineModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLabelModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFontModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoConstantLineStyleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoGridModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoFormatModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoMinorGridModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoMinorTickModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoMinorTickIntervalModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiStripModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStripStyleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTickModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTickIntervalModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoCommonAxisSettingsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoCommonSeriesSettingsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoAreaModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoBorderModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoHoverStyleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoHatchingModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoConnectorModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoPointModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoImageModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSelectionStyleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoValueErrorBarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoBarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoArgumentFormatModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLineModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoScatterModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoStackedbarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoDataPrepareSettingsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoExportModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLegendModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoMarginModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTitleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSubtitleModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoLoadingIndicatorModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiSeriesModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSeriesTemplateModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoSizeModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoTooltipModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoShadowModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoValueAxisModule } from 'devextreme-angular/ui/nested';\r\n\r\nimport { DxiSeriesComponent } from 'devextreme-angular/ui/nested';\r\n\r\n\r\n\r\n\r\n/**\r\n * The PolarChart is a widget that visualizes data in a polar coordinate system.\r\n */\r\n@Component({\r\n    selector: 'dx-polar-chart',\r\n    template: '',\r\n    styles: [ ' :host {  display: block; }'],\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxPolarChartComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxPolarChart;\r\n\r\n\r\n    /**\r\n     * Specifies adaptive layout options.\r\n     */\r\n    @Input()\r\n    get adaptiveLayout(): { height?: number, keepLabels?: boolean, width?: number } {\r\n        return this._getOption('adaptiveLayout');\r\n    }\r\n    set adaptiveLayout(value: { height?: number, keepLabels?: boolean, width?: number }) {\r\n        this._setOption('adaptiveLayout', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies animation options.\r\n     */\r\n    @Input()\r\n    get animation(): boolean | { duration?: number, easing?: string, enabled?: boolean, maxPointCountSupported?: number } {\r\n        return this._getOption('animation');\r\n    }\r\n    set animation(value: boolean | { duration?: number, easing?: string, enabled?: boolean, maxPointCountSupported?: number }) {\r\n        this._setOption('animation', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies argument axis options for the PolarChart widget.\r\n     */\r\n    @Input()\r\n    get argumentAxis(): { allowDecimals?: boolean, argumentType?: string, axisDivisionFactor?: number, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: DevExpress.viz.Font, text?: string, visible?: boolean }, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, visible?: boolean }, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, firstPointOnStartAngle?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, hoverMode?: string, inverted?: boolean, label?: { customizeHint?: Function, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, indentFromAxis?: number, overlappingBehavior?: string, visible?: boolean }, logarithmBase?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, opacity?: number, originValue?: number, period?: number, startAngle?: number, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: DevExpress.viz.Font, text?: string }, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: DevExpress.viz.Font } }, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, type?: string, visible?: boolean, width?: number } {\r\n        return this._getOption('argumentAxis');\r\n    }\r\n    set argumentAxis(value: { allowDecimals?: boolean, argumentType?: string, axisDivisionFactor?: number, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: DevExpress.viz.Font, text?: string, visible?: boolean }, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, visible?: boolean }, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, firstPointOnStartAngle?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, hoverMode?: string, inverted?: boolean, label?: { customizeHint?: Function, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, indentFromAxis?: number, overlappingBehavior?: string, visible?: boolean }, logarithmBase?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, opacity?: number, originValue?: number, period?: number, startAngle?: number, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: DevExpress.viz.Font, text?: string }, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: DevExpress.viz.Font } }, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, type?: string, visible?: boolean, width?: number }) {\r\n        this._setOption('argumentAxis', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Controls the padding and consequently the angular width of a group of bars with the same argument using relative units. Ignored if the barGroupWidth option is set.\r\n     */\r\n    @Input()\r\n    get barGroupPadding(): number {\r\n        return this._getOption('barGroupPadding');\r\n    }\r\n    set barGroupPadding(value: number) {\r\n        this._setOption('barGroupPadding', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a fixed angular width for groups of bars with the same argument, measured in degrees. Takes precedence over the barGroupPadding option.\r\n     */\r\n    @Input()\r\n    get barGroupWidth(): number {\r\n        return this._getOption('barGroupWidth');\r\n    }\r\n    set barGroupWidth(value: number) {\r\n        this._setOption('barGroupWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Use CommonPolarChartSeries.barPadding instead.\r\n     */\r\n    @Input()\r\n    get barWidth(): number {\r\n        return this._getOption('barWidth');\r\n    }\r\n    set barWidth(value: number) {\r\n        this._setOption('barWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * An object defining the configuration options that are common for all axes of the PolarChart widget.\r\n     */\r\n    @Input()\r\n    get commonAxisSettings(): { allowDecimals?: boolean, color?: string, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, visible?: boolean }, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { font?: DevExpress.viz.Font, indentFromAxis?: number, overlappingBehavior?: string, visible?: boolean }, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, opacity?: number, stripStyle?: { label?: { font?: DevExpress.viz.Font } }, tick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, visible?: boolean, width?: number } {\r\n        return this._getOption('commonAxisSettings');\r\n    }\r\n    set commonAxisSettings(value: { allowDecimals?: boolean, color?: string, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, visible?: boolean }, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { font?: DevExpress.viz.Font, indentFromAxis?: number, overlappingBehavior?: string, visible?: boolean }, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, opacity?: number, stripStyle?: { label?: { font?: DevExpress.viz.Font } }, tick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, visible?: boolean, width?: number }) {\r\n        this._setOption('commonAxisSettings', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * An object defining the configuration options that are common for all series of the PolarChart widget.\r\n     */\r\n    @Input()\r\n    get commonSeriesSettings(): any {\r\n        return this._getOption('commonSeriesSettings');\r\n    }\r\n    set commonSeriesSettings(value: any) {\r\n        this._setOption('commonSeriesSettings', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the color of the parent page element.\r\n     */\r\n    @Input()\r\n    get containerBackgroundColor(): string {\r\n        return this._getOption('containerBackgroundColor');\r\n    }\r\n    set containerBackgroundColor(value: string) {\r\n        this._setOption('containerBackgroundColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Customizes the appearance of an individual point label.\r\n     */\r\n    @Input()\r\n    get customizeLabel(): Function {\r\n        return this._getOption('customizeLabel');\r\n    }\r\n    set customizeLabel(value: Function) {\r\n        this._setOption('customizeLabel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Customizes the appearance of an individual series point.\r\n     */\r\n    @Input()\r\n    get customizePoint(): Function {\r\n        return this._getOption('customizePoint');\r\n    }\r\n    set customizePoint(value: Function) {\r\n        this._setOption('customizePoint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * An object providing options for managing data from a data source.\r\n     */\r\n    @Input()\r\n    get dataPrepareSettings(): { checkTypeForAllData?: boolean, convertToAxisDataType?: boolean, sortingMethod?: boolean | Function } {\r\n        return this._getOption('dataPrepareSettings');\r\n    }\r\n    set dataPrepareSettings(value: { checkTypeForAllData?: boolean, convertToAxisDataType?: boolean, sortingMethod?: boolean | Function }) {\r\n        this._setOption('dataPrepareSettings', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the widget to data.\r\n     */\r\n    @Input()\r\n    get dataSource(): DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any> {\r\n        return this._getOption('dataSource');\r\n    }\r\n    set dataSource(value: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>) {\r\n        this._setOption('dataSource', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to the user interaction.\r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Use CommonPolarChartSeries.ignoreEmptyPoints instead.\r\n     */\r\n    @Input()\r\n    get equalBarWidth(): boolean {\r\n        return this._getOption('equalBarWidth');\r\n    }\r\n    set equalBarWidth(value: boolean) {\r\n        this._setOption('equalBarWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the exporting and printing features.\r\n     */\r\n    @Input()\r\n    get export(): { backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string } {\r\n        return this._getOption('export');\r\n    }\r\n    set export(value: { backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string }) {\r\n        this._setOption('export', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the options of a chart's legend.\r\n     */\r\n    @Input()\r\n    get legend(): { backgroundColor?: string, border?: { color?: string, cornerRadius?: number, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, columnCount?: number, columnItemSpacing?: number, customizeHint?: Function, customizeItems?: Function, customizeText?: Function, font?: DevExpress.viz.Font, horizontalAlignment?: string, hoverMode?: string, itemsAlignment?: string, itemTextPosition?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, markerSize?: number, orientation?: string, paddingLeftRight?: number, paddingTopBottom?: number, rowCount?: number, rowItemSpacing?: number, title?: string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string }, text?: string, verticalAlignment?: string }, verticalAlignment?: string, visible?: boolean } {\r\n        return this._getOption('legend');\r\n    }\r\n    set legend(value: { backgroundColor?: string, border?: { color?: string, cornerRadius?: number, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, columnCount?: number, columnItemSpacing?: number, customizeHint?: Function, customizeItems?: Function, customizeText?: Function, font?: DevExpress.viz.Font, horizontalAlignment?: string, hoverMode?: string, itemsAlignment?: string, itemTextPosition?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, markerSize?: number, orientation?: string, paddingLeftRight?: number, paddingTopBottom?: number, rowCount?: number, rowItemSpacing?: number, title?: string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string }, text?: string, verticalAlignment?: string }, verticalAlignment?: string, visible?: boolean }) {\r\n        this._setOption('legend', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the loading indicator.\r\n     */\r\n    @Input()\r\n    get loadingIndicator(): { backgroundColor?: string, enabled?: boolean, font?: DevExpress.viz.Font, show?: boolean, text?: string } {\r\n        return this._getOption('loadingIndicator');\r\n    }\r\n    set loadingIndicator(value: { backgroundColor?: string, enabled?: boolean, font?: DevExpress.viz.Font, show?: boolean, text?: string }) {\r\n        this._setOption('loadingIndicator', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Generates space around the widget.\r\n     */\r\n    @Input()\r\n    get margin(): { bottom?: number, left?: number, right?: number, top?: number } {\r\n        return this._getOption('margin');\r\n    }\r\n    set margin(value: { bottom?: number, left?: number, right?: number, top?: number }) {\r\n        this._setOption('margin', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Forces the widget to treat negative values as zeroes. Applies to stacked-like series only.\r\n     */\r\n    @Input()\r\n    get negativesAsZeroes(): boolean {\r\n        return this._getOption('negativesAsZeroes');\r\n    }\r\n    set negativesAsZeroes(value: boolean) {\r\n        this._setOption('negativesAsZeroes', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the palette to be used for colorizing series and their elements.\r\n     */\r\n    @Input()\r\n    get palette(): string | Array<string> {\r\n        return this._getOption('palette');\r\n    }\r\n    set palette(value: string | Array<string>) {\r\n        this._setOption('palette', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies what to do with colors in the palette when their number is less than the number of series (in the Chart widget) or points in a series (in the PieChart widget).\r\n     */\r\n    @Input()\r\n    get paletteExtensionMode(): string {\r\n        return this._getOption('paletteExtensionMode');\r\n    }\r\n    set paletteExtensionMode(value: string) {\r\n        this._setOption('paletteExtensionMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Notifies the widget that it is embedded into an HTML page that uses a tag modifying the path.\r\n     */\r\n    @Input()\r\n    get pathModified(): boolean {\r\n        return this._getOption('pathModified');\r\n    }\r\n    set pathModified(value: boolean) {\r\n        this._setOption('pathModified', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether a single point or multiple points can be selected in the chart.\r\n     */\r\n    @Input()\r\n    get pointSelectionMode(): string {\r\n        return this._getOption('pointSelectionMode');\r\n    }\r\n    set pointSelectionMode(value: string) {\r\n        this._setOption('pointSelectionMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to redraw the widget when the size of the parent browser window changes or a mobile device rotates.\r\n     */\r\n    @Input()\r\n    get redrawOnResize(): boolean {\r\n        return this._getOption('redrawOnResize');\r\n    }\r\n    set redrawOnResize(value: boolean) {\r\n        this._setOption('redrawOnResize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies how the chart must behave when series point labels overlap.\r\n     */\r\n    @Input()\r\n    get resolveLabelOverlapping(): string {\r\n        return this._getOption('resolveLabelOverlapping');\r\n    }\r\n    set resolveLabelOverlapping(value: string) {\r\n        this._setOption('resolveLabelOverlapping', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies options for PolarChart widget series.\r\n     */\r\n    @Input()\r\n    get series(): any | Array<any> {\r\n        return this._getOption('series');\r\n    }\r\n    set series(value: any | Array<any>) {\r\n        this._setOption('series', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether a single series or multiple series can be selected in the chart.\r\n     */\r\n    @Input()\r\n    get seriesSelectionMode(): string {\r\n        return this._getOption('seriesSelectionMode');\r\n    }\r\n    set seriesSelectionMode(value: string) {\r\n        this._setOption('seriesSelectionMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Defines options for the series template.\r\n     */\r\n    @Input()\r\n    get seriesTemplate(): { customizeSeries?: Function, nameField?: string } {\r\n        return this._getOption('seriesTemplate');\r\n    }\r\n    set seriesTemplate(value: { customizeSeries?: Function, nameField?: string }) {\r\n        this._setOption('seriesTemplate', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's size in pixels.\r\n     */\r\n    @Input()\r\n    get size(): { height?: number, width?: number } {\r\n        return this._getOption('size');\r\n    }\r\n    set size(value: { height?: number, width?: number }) {\r\n        this._setOption('size', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the name of the theme the widget uses.\r\n     */\r\n    @Input()\r\n    get theme(): string {\r\n        return this._getOption('theme');\r\n    }\r\n    set theme(value: string) {\r\n        this._setOption('theme', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the widget's title.\r\n     */\r\n    @Input()\r\n    get title(): string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string, textOverflow?: string, wordWrap?: string }, text?: string, textOverflow?: string, verticalAlignment?: string, wordWrap?: string } {\r\n        return this._getOption('title');\r\n    }\r\n    set title(value: string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string, textOverflow?: string, wordWrap?: string }, text?: string, textOverflow?: string, verticalAlignment?: string, wordWrap?: string }) {\r\n        this._setOption('title', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures tooltips.\r\n     */\r\n    @Input()\r\n    get tooltip(): { argumentFormat?: DevExpress.ui.format | string, arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, shared?: boolean, zIndex?: number } {\r\n        return this._getOption('tooltip');\r\n    }\r\n    set tooltip(value: { argumentFormat?: DevExpress.ui.format | string, arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, shared?: boolean, zIndex?: number }) {\r\n        this._setOption('tooltip', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Indicates whether or not to display a \"spider web\".\r\n     */\r\n    @Input()\r\n    get useSpiderWeb(): boolean {\r\n        return this._getOption('useSpiderWeb');\r\n    }\r\n    set useSpiderWeb(value: boolean) {\r\n        this._setOption('useSpiderWeb', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies value axis options for the PolarChart widget.\r\n     */\r\n    @Input()\r\n    get valueAxis(): { allowDecimals?: boolean, axisDivisionFactor?: number, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: DevExpress.viz.Font, text?: string, visible?: boolean }, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, visible?: boolean }, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { customizeHint?: Function, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, indentFromAxis?: number, overlappingBehavior?: string, visible?: boolean }, logarithmBase?: number, maxValueMargin?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, minValueMargin?: number, opacity?: number, showZero?: boolean, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: DevExpress.viz.Font, text?: string }, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: DevExpress.viz.Font } }, tick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, type?: string, valueMarginsEnabled?: boolean, valueType?: string, visible?: boolean, width?: number } {\r\n        return this._getOption('valueAxis');\r\n    }\r\n    set valueAxis(value: { allowDecimals?: boolean, axisDivisionFactor?: number, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: DevExpress.viz.Font, text?: string, visible?: boolean }, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, visible?: boolean }, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { customizeHint?: Function, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, indentFromAxis?: number, overlappingBehavior?: string, visible?: boolean }, logarithmBase?: number, maxValueMargin?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, minValueMargin?: number, opacity?: number, showZero?: boolean, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: DevExpress.viz.Font, text?: string }, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: DevExpress.viz.Font } }, tick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, type?: string, valueMarginsEnabled?: boolean, valueType?: string, visible?: boolean, width?: number }) {\r\n        this._setOption('valueAxis', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed when a label on the argument axis is clicked or tapped.\r\n     */\r\n    @Output() onArgumentAxisClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when all series are ready.\r\n     */\r\n    @Output() onDone: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the widget's rendering has finished.\r\n     */\r\n    @Output() onDrawn: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the widget is exported.\r\n     */\r\n    @Output() onExported: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is exported.\r\n     */\r\n    @Output() onExporting: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before a file with exported widget is saved to the user's local storage.\r\n     */\r\n    @Output() onFileSaving: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when an error or warning occurs.\r\n     */\r\n    @Output() onIncidentOccurred: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a legend item is clicked or tapped.\r\n     */\r\n    @Output() onLegendClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a series point is clicked or tapped.\r\n     */\r\n    @Output() onPointClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the pointer enters or leaves a series point.\r\n     */\r\n    @Output() onPointHoverChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a series point is selected or selection is canceled.\r\n     */\r\n    @Output() onPointSelectionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a series is clicked or tapped.\r\n     */\r\n    @Output() onSeriesClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the pointer enters or leaves a series.\r\n     */\r\n    @Output() onSeriesHoverChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a series is selected or selection is canceled.\r\n     */\r\n    @Output() onSeriesSelectionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a tooltip becomes hidden.\r\n     */\r\n    @Output() onTooltipHidden: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a tooltip appears.\r\n     */\r\n    @Output() onTooltipShown: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() adaptiveLayoutChange: EventEmitter<{ height?: number, keepLabels?: boolean, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() animationChange: EventEmitter<boolean | { duration?: number, easing?: string, enabled?: boolean, maxPointCountSupported?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() argumentAxisChange: EventEmitter<{ allowDecimals?: boolean, argumentType?: string, axisDivisionFactor?: number, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: DevExpress.viz.Font, text?: string, visible?: boolean }, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, visible?: boolean }, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, firstPointOnStartAngle?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, hoverMode?: string, inverted?: boolean, label?: { customizeHint?: Function, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, indentFromAxis?: number, overlappingBehavior?: string, visible?: boolean }, logarithmBase?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, opacity?: number, originValue?: number, period?: number, startAngle?: number, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: DevExpress.viz.Font, text?: string }, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: DevExpress.viz.Font } }, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, type?: string, visible?: boolean, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() barGroupPaddingChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() barGroupWidthChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() barWidthChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() commonAxisSettingsChange: EventEmitter<{ allowDecimals?: boolean, color?: string, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, visible?: boolean }, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { font?: DevExpress.viz.Font, indentFromAxis?: number, overlappingBehavior?: string, visible?: boolean }, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, opacity?: number, stripStyle?: { label?: { font?: DevExpress.viz.Font } }, tick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, visible?: boolean, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() commonSeriesSettingsChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() containerBackgroundColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() customizeLabelChange: EventEmitter<Function>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() customizePointChange: EventEmitter<Function>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() dataPrepareSettingsChange: EventEmitter<{ checkTypeForAllData?: boolean, convertToAxisDataType?: boolean, sortingMethod?: boolean | Function }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() dataSourceChange: EventEmitter<DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() equalBarWidthChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() exportChange: EventEmitter<{ backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() legendChange: EventEmitter<{ backgroundColor?: string, border?: { color?: string, cornerRadius?: number, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, columnCount?: number, columnItemSpacing?: number, customizeHint?: Function, customizeItems?: Function, customizeText?: Function, font?: DevExpress.viz.Font, horizontalAlignment?: string, hoverMode?: string, itemsAlignment?: string, itemTextPosition?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, markerSize?: number, orientation?: string, paddingLeftRight?: number, paddingTopBottom?: number, rowCount?: number, rowItemSpacing?: number, title?: string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string }, text?: string, verticalAlignment?: string }, verticalAlignment?: string, visible?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() loadingIndicatorChange: EventEmitter<{ backgroundColor?: string, enabled?: boolean, font?: DevExpress.viz.Font, show?: boolean, text?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() marginChange: EventEmitter<{ bottom?: number, left?: number, right?: number, top?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() negativesAsZeroesChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() paletteChange: EventEmitter<string | Array<string>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() paletteExtensionModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pathModifiedChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pointSelectionModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() redrawOnResizeChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() resolveLabelOverlappingChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() seriesChange: EventEmitter<any | Array<any>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() seriesSelectionModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() seriesTemplateChange: EventEmitter<{ customizeSeries?: Function, nameField?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() sizeChange: EventEmitter<{ height?: number, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() themeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() titleChange: EventEmitter<string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string, textOverflow?: string, wordWrap?: string }, text?: string, textOverflow?: string, verticalAlignment?: string, wordWrap?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() tooltipChange: EventEmitter<{ argumentFormat?: DevExpress.ui.format | string, arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, shared?: boolean, zIndex?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() useSpiderWebChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() valueAxisChange: EventEmitter<{ allowDecimals?: boolean, axisDivisionFactor?: number, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: DevExpress.viz.Font, text?: string, visible?: boolean }, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, visible?: boolean }, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { customizeHint?: Function, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, indentFromAxis?: number, overlappingBehavior?: string, visible?: boolean }, logarithmBase?: number, maxValueMargin?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, minValueMargin?: number, opacity?: number, showZero?: boolean, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: DevExpress.viz.Font, text?: string }, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: DevExpress.viz.Font } }, tick?: { color?: string, length?: number, opacity?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, type?: string, valueMarginsEnabled?: boolean, valueType?: string, visible?: boolean, width?: number }>;\r\n\r\n\r\n\r\n\r\n    @ContentChildren(DxiSeriesComponent)\r\n    get seriesChildren(): QueryList<DxiSeriesComponent> {\r\n        return this._getOption('series');\r\n    }\r\n    set seriesChildren(value) {\r\n        this.setChildren('series', value);\r\n    }\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper, optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'argumentAxisClick', emit: 'onArgumentAxisClick' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'done', emit: 'onDone' },\r\n            { subscribe: 'drawn', emit: 'onDrawn' },\r\n            { subscribe: 'exported', emit: 'onExported' },\r\n            { subscribe: 'exporting', emit: 'onExporting' },\r\n            { subscribe: 'fileSaving', emit: 'onFileSaving' },\r\n            { subscribe: 'incidentOccurred', emit: 'onIncidentOccurred' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'legendClick', emit: 'onLegendClick' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'pointClick', emit: 'onPointClick' },\r\n            { subscribe: 'pointHoverChanged', emit: 'onPointHoverChanged' },\r\n            { subscribe: 'pointSelectionChanged', emit: 'onPointSelectionChanged' },\r\n            { subscribe: 'seriesClick', emit: 'onSeriesClick' },\r\n            { subscribe: 'seriesHoverChanged', emit: 'onSeriesHoverChanged' },\r\n            { subscribe: 'seriesSelectionChanged', emit: 'onSeriesSelectionChanged' },\r\n            { subscribe: 'tooltipHidden', emit: 'onTooltipHidden' },\r\n            { subscribe: 'tooltipShown', emit: 'onTooltipShown' },\r\n            { emit: 'adaptiveLayoutChange' },\r\n            { emit: 'animationChange' },\r\n            { emit: 'argumentAxisChange' },\r\n            { emit: 'barGroupPaddingChange' },\r\n            { emit: 'barGroupWidthChange' },\r\n            { emit: 'barWidthChange' },\r\n            { emit: 'commonAxisSettingsChange' },\r\n            { emit: 'commonSeriesSettingsChange' },\r\n            { emit: 'containerBackgroundColorChange' },\r\n            { emit: 'customizeLabelChange' },\r\n            { emit: 'customizePointChange' },\r\n            { emit: 'dataPrepareSettingsChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'equalBarWidthChange' },\r\n            { emit: 'exportChange' },\r\n            { emit: 'legendChange' },\r\n            { emit: 'loadingIndicatorChange' },\r\n            { emit: 'marginChange' },\r\n            { emit: 'negativesAsZeroesChange' },\r\n            { emit: 'paletteChange' },\r\n            { emit: 'paletteExtensionModeChange' },\r\n            { emit: 'pathModifiedChange' },\r\n            { emit: 'pointSelectionModeChange' },\r\n            { emit: 'redrawOnResizeChange' },\r\n            { emit: 'resolveLabelOverlappingChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'seriesChange' },\r\n            { emit: 'seriesSelectionModeChange' },\r\n            { emit: 'seriesTemplateChange' },\r\n            { emit: 'sizeChange' },\r\n            { emit: 'themeChange' },\r\n            { emit: 'titleChange' },\r\n            { emit: 'tooltipChange' },\r\n            { emit: 'useSpiderWebChange' },\r\n            { emit: 'valueAxisChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n        return new DxPolarChart(element, options);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('dataSource', changes);\r\n        this.setupChanges('palette', changes);\r\n        this.setupChanges('series', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('dataSource');\r\n        this._idh.doCheck('palette');\r\n        this._idh.doCheck('series');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoAdaptiveLayoutModule,\r\n    DxoAnimationModule,\r\n    DxoArgumentAxisModule,\r\n    DxiConstantLineModule,\r\n    DxoLabelModule,\r\n    DxoFontModule,\r\n    DxoConstantLineStyleModule,\r\n    DxoGridModule,\r\n    DxoFormatModule,\r\n    DxoMinorGridModule,\r\n    DxoMinorTickModule,\r\n    DxoMinorTickIntervalModule,\r\n    DxiStripModule,\r\n    DxoStripStyleModule,\r\n    DxoTickModule,\r\n    DxoTickIntervalModule,\r\n    DxoCommonAxisSettingsModule,\r\n    DxoCommonSeriesSettingsModule,\r\n    DxoAreaModule,\r\n    DxoBorderModule,\r\n    DxoHoverStyleModule,\r\n    DxoHatchingModule,\r\n    DxoConnectorModule,\r\n    DxoPointModule,\r\n    DxoImageModule,\r\n    DxoSelectionStyleModule,\r\n    DxoValueErrorBarModule,\r\n    DxoBarModule,\r\n    DxoArgumentFormatModule,\r\n    DxoLineModule,\r\n    DxoScatterModule,\r\n    DxoStackedbarModule,\r\n    DxoDataPrepareSettingsModule,\r\n    DxoExportModule,\r\n    DxoLegendModule,\r\n    DxoMarginModule,\r\n    DxoTitleModule,\r\n    DxoSubtitleModule,\r\n    DxoLoadingIndicatorModule,\r\n    DxiSeriesModule,\r\n    DxoSeriesTemplateModule,\r\n    DxoSizeModule,\r\n    DxoTooltipModule,\r\n    DxoShadowModule,\r\n    DxoValueAxisModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxPolarChartComponent\r\n  ],\r\n  exports: [\r\n    DxPolarChartComponent,\r\n    DxoAdaptiveLayoutModule,\r\n    DxoAnimationModule,\r\n    DxoArgumentAxisModule,\r\n    DxiConstantLineModule,\r\n    DxoLabelModule,\r\n    DxoFontModule,\r\n    DxoConstantLineStyleModule,\r\n    DxoGridModule,\r\n    DxoFormatModule,\r\n    DxoMinorGridModule,\r\n    DxoMinorTickModule,\r\n    DxoMinorTickIntervalModule,\r\n    DxiStripModule,\r\n    DxoStripStyleModule,\r\n    DxoTickModule,\r\n    DxoTickIntervalModule,\r\n    DxoCommonAxisSettingsModule,\r\n    DxoCommonSeriesSettingsModule,\r\n    DxoAreaModule,\r\n    DxoBorderModule,\r\n    DxoHoverStyleModule,\r\n    DxoHatchingModule,\r\n    DxoConnectorModule,\r\n    DxoPointModule,\r\n    DxoImageModule,\r\n    DxoSelectionStyleModule,\r\n    DxoValueErrorBarModule,\r\n    DxoBarModule,\r\n    DxoArgumentFormatModule,\r\n    DxoLineModule,\r\n    DxoScatterModule,\r\n    DxoStackedbarModule,\r\n    DxoDataPrepareSettingsModule,\r\n    DxoExportModule,\r\n    DxoLegendModule,\r\n    DxoMarginModule,\r\n    DxoTitleModule,\r\n    DxoSubtitleModule,\r\n    DxoLoadingIndicatorModule,\r\n    DxiSeriesModule,\r\n    DxoSeriesTemplateModule,\r\n    DxoSizeModule,\r\n    DxoTooltipModule,\r\n    DxoShadowModule,\r\n    DxoValueAxisModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxPolarChartModule { }\r\n"]}