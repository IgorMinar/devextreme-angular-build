{"version":3,"file":"column-dxi.js","sourceRoot":"","sources":["column-dxi.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 19.1.6\n * Build date: Fri Sep 20 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n/* tslint:disable:use-input-property-decorator */\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    Host,\r\n    SkipSelf,\r\n    Output,\r\n    EventEmitter,\r\n    ContentChildren,\r\n    forwardRef,\r\n    QueryList\r\n} from '@angular/core';\r\n\r\n\r\n\r\n\r\n\r\nimport { NestedOptionHost } from '../../core/nested-option';\r\nimport { DxiDataGridColumn } from './base/data-grid-column-dxi';\r\nimport { DxiButtonComponent } from './button-dxi';\r\nimport { DxiValidationRuleComponent } from './validation-rule-dxi';\r\n\r\n\r\n@Component({\r\n    selector: 'dxi-column',\r\n    template: '',\r\n    styles: [''],\r\n    providers: [NestedOptionHost],\r\n    inputs: [\r\n        'alignment',\r\n        'allowEditing',\r\n        'allowExporting',\r\n        'allowFiltering',\r\n        'allowFixing',\r\n        'allowGrouping',\r\n        'allowHeaderFiltering',\r\n        'allowHiding',\r\n        'allowReordering',\r\n        'allowResizing',\r\n        'allowSearch',\r\n        'allowSorting',\r\n        'autoExpandGroup',\r\n        'buttons',\r\n        'calculateCellValue',\r\n        'calculateDisplayValue',\r\n        'calculateFilterExpression',\r\n        'calculateGroupValue',\r\n        'calculateSortValue',\r\n        'caption',\r\n        'cellTemplate',\r\n        'columns',\r\n        'cssClass',\r\n        'customizeText',\r\n        'dataField',\r\n        'dataType',\r\n        'editCellTemplate',\r\n        'editorOptions',\r\n        'encodeHtml',\r\n        'falseText',\r\n        'filterOperations',\r\n        'filterType',\r\n        'filterValue',\r\n        'filterValues',\r\n        'fixed',\r\n        'fixedPosition',\r\n        'format',\r\n        'formItem',\r\n        'groupCellTemplate',\r\n        'groupIndex',\r\n        'headerCellTemplate',\r\n        'headerFilter',\r\n        'hidingPriority',\r\n        'isBand',\r\n        'lookup',\r\n        'minWidth',\r\n        'name',\r\n        'ownerBand',\r\n        'renderAsync',\r\n        'selectedFilterOperation',\r\n        'setCellValue',\r\n        'showEditorAlways',\r\n        'showInColumnChooser',\r\n        'showWhenGrouped',\r\n        'sortIndex',\r\n        'sortingMethod',\r\n        'sortOrder',\r\n        'trueText',\r\n        'type',\r\n        'validationRules',\r\n        'visible',\r\n        'visibleIndex',\r\n        'width'\r\n    ]\r\n})\r\nexport class DxiColumnComponent extends DxiDataGridColumn {\r\n\r\n    /**\r\n     * A handler for the filterValueChange event.\r\n     */\r\n    @Output() filterValueChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the filterValuesChange event.\r\n     */\r\n    @Output() filterValuesChange: EventEmitter<Array<any>>;\r\n\r\n    /**\r\n     * A handler for the groupIndexChange event.\r\n     */\r\n    @Output() groupIndexChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * A handler for the selectedFilterOperationChange event.\r\n     */\r\n    @Output() selectedFilterOperationChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * A handler for the sortIndexChange event.\r\n     */\r\n    @Output() sortIndexChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * A handler for the sortOrderChange event.\r\n     */\r\n    @Output() sortOrderChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * A handler for the visibleChange event.\r\n     */\r\n    @Output() visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the visibleIndexChange event.\r\n     */\r\n    @Output() visibleIndexChange: EventEmitter<number>;\r\n    protected get _optionPath() {\r\n        return 'columns';\r\n    }\r\n\r\n\r\n    @ContentChildren(forwardRef(() => DxiButtonComponent))\r\n    get buttonsChildren(): QueryList<DxiButtonComponent> {\r\n        return this._getOption('buttons');\r\n    }\r\n    set buttonsChildren(value) {\r\n        this.setChildren('buttons', value);\r\n    }\r\n\r\n    @ContentChildren(forwardRef(() => DxiColumnComponent))\r\n    get columnsChildren(): QueryList<DxiColumnComponent> {\r\n        return this._getOption('columns');\r\n    }\r\n    set columnsChildren(value) {\r\n        this.setChildren('columns', value);\r\n    }\r\n\r\n    @ContentChildren(forwardRef(() => DxiValidationRuleComponent))\r\n    get validationRulesChildren(): QueryList<DxiValidationRuleComponent> {\r\n        return this._getOption('validationRules');\r\n    }\r\n    set validationRulesChildren(value) {\r\n        this.setChildren('validationRules', value);\r\n    }\r\n\r\n    constructor(@SkipSelf() @Host() parentOptionHost: NestedOptionHost,\r\n            @Host() optionHost: NestedOptionHost) {\r\n        super();\r\n\r\n        this._createEventEmitters([\r\n            { emit: 'filterValueChange' },\r\n            { emit: 'filterValuesChange' },\r\n            { emit: 'groupIndexChange' },\r\n            { emit: 'selectedFilterOperationChange' },\r\n            { emit: 'sortIndexChange' },\r\n            { emit: 'sortOrderChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'visibleIndexChange' }\r\n        ]);\r\n\r\n        parentOptionHost.setNestedOption(this);\r\n        optionHost.setHost(this, this._fullOptionPath.bind(this));\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DxiColumnComponent\r\n  ],\r\n  exports: [\r\n    DxiColumnComponent\r\n  ],\r\n})\r\nexport class DxiColumnModule { }\r\n"]}