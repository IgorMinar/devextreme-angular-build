{"version":3,"file":"export.js","sourceRoot":"","sources":["export.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 19.1.6\n * Build date: Fri Sep 20 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    Host,\r\n    SkipSelf,\r\n    Input\r\n} from '@angular/core';\r\n\r\n\r\n\r\n\r\n\r\nimport { NestedOptionHost } from '../../core/nested-option';\r\nimport { NestedOption } from '../../core/nested-option';\r\n\r\n\r\n@Component({\r\n    selector: 'dxo-export',\r\n    template: '',\r\n    styles: [''],\r\n    providers: [NestedOptionHost]\r\n})\r\nexport class DxoExportComponent extends NestedOption {\r\n    @Input()\r\n    get backgroundColor(): string {\r\n        return this._getOption('backgroundColor');\r\n    }\r\n    set backgroundColor(value: string) {\r\n        this._setOption('backgroundColor', value);\r\n    }\r\n\r\n    @Input()\r\n    get enabled(): boolean {\r\n        return this._getOption('enabled');\r\n    }\r\n    set enabled(value: boolean) {\r\n        this._setOption('enabled', value);\r\n    }\r\n\r\n    @Input()\r\n    get fileName(): string {\r\n        return this._getOption('fileName');\r\n    }\r\n    set fileName(value: string) {\r\n        this._setOption('fileName', value);\r\n    }\r\n\r\n    @Input()\r\n    get formats(): Array<string> {\r\n        return this._getOption('formats');\r\n    }\r\n    set formats(value: Array<string>) {\r\n        this._setOption('formats', value);\r\n    }\r\n\r\n    @Input()\r\n    get margin(): number {\r\n        return this._getOption('margin');\r\n    }\r\n    set margin(value: number) {\r\n        this._setOption('margin', value);\r\n    }\r\n\r\n    @Input()\r\n    get printingEnabled(): boolean {\r\n        return this._getOption('printingEnabled');\r\n    }\r\n    set printingEnabled(value: boolean) {\r\n        this._setOption('printingEnabled', value);\r\n    }\r\n\r\n    @Input()\r\n    get proxyUrl(): string {\r\n        return this._getOption('proxyUrl');\r\n    }\r\n    set proxyUrl(value: string) {\r\n        this._setOption('proxyUrl', value);\r\n    }\r\n\r\n    @Input()\r\n    get allowExportSelectedData(): boolean {\r\n        return this._getOption('allowExportSelectedData');\r\n    }\r\n    set allowExportSelectedData(value: boolean) {\r\n        this._setOption('allowExportSelectedData', value);\r\n    }\r\n\r\n    @Input()\r\n    get customizeExcelCell(): Function {\r\n        return this._getOption('customizeExcelCell');\r\n    }\r\n    set customizeExcelCell(value: Function) {\r\n        this._setOption('customizeExcelCell', value);\r\n    }\r\n\r\n    @Input()\r\n    get excelFilterEnabled(): boolean {\r\n        return this._getOption('excelFilterEnabled');\r\n    }\r\n    set excelFilterEnabled(value: boolean) {\r\n        this._setOption('excelFilterEnabled', value);\r\n    }\r\n\r\n    @Input()\r\n    get excelWrapTextEnabled(): boolean {\r\n        return this._getOption('excelWrapTextEnabled');\r\n    }\r\n    set excelWrapTextEnabled(value: boolean) {\r\n        this._setOption('excelWrapTextEnabled', value);\r\n    }\r\n\r\n    @Input()\r\n    get ignoreExcelErrors(): boolean {\r\n        return this._getOption('ignoreExcelErrors');\r\n    }\r\n    set ignoreExcelErrors(value: boolean) {\r\n        this._setOption('ignoreExcelErrors', value);\r\n    }\r\n\r\n    @Input()\r\n    get texts(): { exportAll?: string, exportSelectedRows?: string, exportTo?: string } {\r\n        return this._getOption('texts');\r\n    }\r\n    set texts(value: { exportAll?: string, exportSelectedRows?: string, exportTo?: string }) {\r\n        this._setOption('texts', value);\r\n    }\r\n\r\n\r\n    protected get _optionPath() {\r\n        return 'export';\r\n    }\r\n\r\n\r\n    constructor(@SkipSelf() @Host() parentOptionHost: NestedOptionHost,\r\n            @Host() optionHost: NestedOptionHost) {\r\n        super();\r\n        parentOptionHost.setNestedOption(this);\r\n        optionHost.setHost(this, this._fullOptionPath.bind(this));\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DxoExportComponent\r\n  ],\r\n  exports: [\r\n    DxoExportComponent\r\n  ],\r\n})\r\nexport class DxoExportModule { }\r\n"]}