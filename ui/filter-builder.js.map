{"version":3,"file":"filter-builder.js","sourceRoot":"","sources":["filter-builder.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 19.1.6\n * Build date: Fri Sep 20 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnInit,\r\n    AfterViewInit,\r\n    ContentChild,\r\n    forwardRef,\r\n    HostListener,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges,\r\n    ContentChildren,\r\n    QueryList\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxFilterBuilder from 'devextreme/ui/filter_builder';\r\n\r\nimport { DxValidatorComponent } from './validator';\r\n\r\nimport {\r\n    ControlValueAccessor,\r\n    NG_VALUE_ACCESSOR\r\n} from '@angular/forms';\r\n\r\nimport { DxComponent } from '../core/component';\r\nimport { DxTemplateHost } from '../core/template-host';\r\nimport { DxIntegrationModule } from '../core/integration';\r\nimport { DxTemplateModule } from '../core/template';\r\nimport { NestedOptionHost } from '../core/nested-option';\r\nimport { WatcherHelper } from '../core/watcher-helper';\r\nimport { IterableDifferHelper } from '../core/iterable-differ-helper';\r\n\r\nimport { DxiCustomOperationModule } from './nested/custom-operation-dxi';\r\nimport { DxiFieldModule } from './nested/field-dxi';\r\nimport { DxoFormatModule } from './nested/format';\r\nimport { DxoLookupModule } from './nested/lookup';\r\nimport { DxoFilterOperationDescriptionsModule } from './nested/filter-operation-descriptions';\r\nimport { DxoGroupOperationDescriptionsModule } from './nested/group-operation-descriptions';\r\n\r\nimport { DxiCustomOperationComponent } from './nested/custom-operation-dxi';\r\nimport { DxiFieldComponent } from './nested/field-dxi';\r\n\r\n\r\n\r\n\r\nconst CUSTOM_VALUE_ACCESSOR_PROVIDER = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => DxFilterBuilderComponent),\r\n    multi: true\r\n};\r\n\r\n/**\r\n * The FilterBuilder widget allows a user to build complex filter expressions with an unlimited number of filter conditions, combined by logical operations using the UI.\r\n */\r\n@Component({\r\n    selector: 'dx-filter-builder',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxFilterBuilderComponent extends DxComponent implements OnDestroy, OnInit, AfterViewInit, ControlValueAccessor, OnChanges, DoCheck {\r\n    instance: DxFilterBuilder;\r\n\r\n    @ContentChild(DxValidatorComponent)\r\n    validator: DxValidatorComponent;\r\n\r\n\r\n    /**\r\n     * Specifies the shortcut key that sets focus on the widget.\r\n     */\r\n    @Input()\r\n    get accessKey(): string {\r\n        return this._getOption('accessKey');\r\n    }\r\n    set accessKey(value: string) {\r\n        this._setOption('accessKey', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not the widget changes its state when interacting with a user.\r\n     */\r\n    @Input()\r\n    get activeStateEnabled(): boolean {\r\n        return this._getOption('activeStateEnabled');\r\n    }\r\n    set activeStateEnabled(value: boolean) {\r\n        this._setOption('activeStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget can display hierarchical data fields.\r\n     */\r\n    @Input()\r\n    get allowHierarchicalFields(): boolean {\r\n        return this._getOption('allowHierarchicalFields');\r\n    }\r\n    set allowHierarchicalFields(value: boolean) {\r\n        this._setOption('allowHierarchicalFields', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures custom filter operations.\r\n     */\r\n    @Input()\r\n    get customOperations(): Array<DevExpress.ui.dxFilterBuilderCustomOperation> {\r\n        return this._getOption('customOperations');\r\n    }\r\n    set customOperations(value: Array<DevExpress.ui.dxFilterBuilderCustomOperation>) {\r\n        this._setOption('customOperations', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures fields.\r\n     */\r\n    @Input()\r\n    get fields(): Array<DevExpress.ui.dxFilterBuilderField> {\r\n        return this._getOption('fields');\r\n    }\r\n    set fields(value: Array<DevExpress.ui.dxFilterBuilderField>) {\r\n        this._setOption('fields', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies filter operation descriptions.\r\n     */\r\n    @Input()\r\n    get filterOperationDescriptions(): { between?: string, contains?: string, endsWith?: string, equal?: string, greaterThan?: string, greaterThanOrEqual?: string, isBlank?: string, isNotBlank?: string, lessThan?: string, lessThanOrEqual?: string, notContains?: string, notEqual?: string, startsWith?: string } {\r\n        return this._getOption('filterOperationDescriptions');\r\n    }\r\n    set filterOperationDescriptions(value: { between?: string, contains?: string, endsWith?: string, equal?: string, greaterThan?: string, greaterThanOrEqual?: string, isBlank?: string, isNotBlank?: string, lessThan?: string, lessThanOrEqual?: string, notContains?: string, notEqual?: string, startsWith?: string }) {\r\n        this._setOption('filterOperationDescriptions', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget can be focused using keyboard navigation.\r\n     */\r\n    @Input()\r\n    get focusStateEnabled(): boolean {\r\n        return this._getOption('focusStateEnabled');\r\n    }\r\n    set focusStateEnabled(value: boolean) {\r\n        this._setOption('focusStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies group operation descriptions.\r\n     */\r\n    @Input()\r\n    get groupOperationDescriptions(): { and?: string, notAnd?: string, notOr?: string, or?: string } {\r\n        return this._getOption('groupOperationDescriptions');\r\n    }\r\n    set groupOperationDescriptions(value: { and?: string, notAnd?: string, notOr?: string, or?: string }) {\r\n        this._setOption('groupOperationDescriptions', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a set of available group operations.\r\n     */\r\n    @Input()\r\n    get groupOperations(): Array<string> {\r\n        return this._getOption('groupOperations');\r\n    }\r\n    set groupOperations(value: Array<string>) {\r\n        this._setOption('groupOperations', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    @Input()\r\n    get height(): number | Function | string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number | Function | string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the widget.\r\n     */\r\n    @Input()\r\n    get hint(): string {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value: string) {\r\n        this._setOption('hint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget changes its state when a user pauses on it.\r\n     */\r\n    @Input()\r\n    get hoverStateEnabled(): boolean {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value: boolean) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies groups' maximum nesting level.\r\n     */\r\n    @Input()\r\n    get maxGroupLevel(): number {\r\n        return this._getOption('maxGroupLevel');\r\n    }\r\n    set maxGroupLevel(value: number) {\r\n        this._setOption('maxGroupLevel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n     */\r\n    @Input()\r\n    get tabIndex(): number {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value: number) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows you to specify a filter.\r\n     */\r\n    @Input()\r\n    get value(): any {\r\n        return this._getOption('value');\r\n    }\r\n    set value(value: any) {\r\n        this._setOption('value', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget is visible.\r\n     */\r\n    @Input()\r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    @Input()\r\n    get width(): number | Function | string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number | Function | string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed when the widget's content is ready and each time the content is changed.\r\n     */\r\n    @Output() onContentReady: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after an editor is created.\r\n     */\r\n    @Output() onEditorPrepared: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before an editor is created.\r\n     */\r\n    @Output() onEditorPreparing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the widget's value is changed.\r\n     */\r\n    @Output() onValueChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the accessKeyChange event.\r\n     */\r\n    @Output() accessKeyChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * A handler for the activeStateEnabledChange event.\r\n     */\r\n    @Output() activeStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the allowHierarchicalFieldsChange event.\r\n     */\r\n    @Output() allowHierarchicalFieldsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the customOperationsChange event.\r\n     */\r\n    @Output() customOperationsChange: EventEmitter<Array<DevExpress.ui.dxFilterBuilderCustomOperation>>;\r\n\r\n    /**\r\n     * A handler for the disabledChange event.\r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the elementAttrChange event.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the fieldsChange event.\r\n     */\r\n    @Output() fieldsChange: EventEmitter<Array<DevExpress.ui.dxFilterBuilderField>>;\r\n\r\n    /**\r\n     * A handler for the filterOperationDescriptionsChange event.\r\n     */\r\n    @Output() filterOperationDescriptionsChange: EventEmitter<{ between?: string, contains?: string, endsWith?: string, equal?: string, greaterThan?: string, greaterThanOrEqual?: string, isBlank?: string, isNotBlank?: string, lessThan?: string, lessThanOrEqual?: string, notContains?: string, notEqual?: string, startsWith?: string }>;\r\n\r\n    /**\r\n     * A handler for the focusStateEnabledChange event.\r\n     */\r\n    @Output() focusStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the groupOperationDescriptionsChange event.\r\n     */\r\n    @Output() groupOperationDescriptionsChange: EventEmitter<{ and?: string, notAnd?: string, notOr?: string, or?: string }>;\r\n\r\n    /**\r\n     * A handler for the groupOperationsChange event.\r\n     */\r\n    @Output() groupOperationsChange: EventEmitter<Array<string>>;\r\n\r\n    /**\r\n     * A handler for the heightChange event.\r\n     */\r\n    @Output() heightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * A handler for the hintChange event.\r\n     */\r\n    @Output() hintChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * A handler for the hoverStateEnabledChange event.\r\n     */\r\n    @Output() hoverStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the maxGroupLevelChange event.\r\n     */\r\n    @Output() maxGroupLevelChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * A handler for the rtlEnabledChange event.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the tabIndexChange event.\r\n     */\r\n    @Output() tabIndexChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * A handler for the valueChange event.\r\n     */\r\n    @Output() valueChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * A handler for the visibleChange event.\r\n     */\r\n    @Output() visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * A handler for the widthChange event.\r\n     */\r\n    @Output() widthChange: EventEmitter<number | Function | string>;\r\n\r\n    @Output() onBlur: EventEmitter<any>;\r\n\r\n\r\n    @HostListener('valueChange', ['$event']) change(_) { }\r\n    @HostListener('onBlur', ['$event']) touched = (_) => {};\r\n\r\n\r\n    @ContentChildren(DxiCustomOperationComponent)\r\n    get customOperationsChildren(): QueryList<DxiCustomOperationComponent> {\r\n        return this._getOption('customOperations');\r\n    }\r\n    set customOperationsChildren(value) {\r\n        this.setChildren('customOperations', value);\r\n    }\r\n\r\n    @ContentChildren(DxiFieldComponent)\r\n    get fieldsChildren(): QueryList<DxiFieldComponent> {\r\n        return this._getOption('fields');\r\n    }\r\n    set fieldsChildren(value) {\r\n        this.setChildren('fields', value);\r\n    }\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper, optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'editorPrepared', emit: 'onEditorPrepared' },\r\n            { subscribe: 'editorPreparing', emit: 'onEditorPreparing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'valueChanged', emit: 'onValueChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'allowHierarchicalFieldsChange' },\r\n            { emit: 'customOperationsChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'fieldsChange' },\r\n            { emit: 'filterOperationDescriptionsChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'groupOperationDescriptionsChange' },\r\n            { emit: 'groupOperationsChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'maxGroupLevelChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'valueChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'onBlur' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n        return new DxFilterBuilder(element, options);\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        this.eventHelper.lockedValueChangeEvent = true;\r\n        this.value = value;\r\n        this.eventHelper.lockedValueChangeEvent = false;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => void): void { this.change = fn; }\r\n    registerOnTouched(fn: () => void): void { this.touched = fn; }\r\n\r\n    _createWidget(element: any) {\r\n        super._createWidget(element);\r\n        this.instance.on('focusOut', (e) => {\r\n            this.eventHelper.fireNgEvent('onBlur', [e]);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('customOperations', changes);\r\n        this.setupChanges('fields', changes);\r\n        this.setupChanges('groupOperations', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('customOperations');\r\n        this._idh.doCheck('fields');\r\n        this._idh.doCheck('groupOperations');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        if (this.validator) {\r\n            this.validator.createInstanceOnInit = false;\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        super.ngAfterViewInit();\r\n        if (this.validator) {\r\n            this.validator.createInstance(this.element.nativeElement);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxiCustomOperationModule,\r\n    DxiFieldModule,\r\n    DxoFormatModule,\r\n    DxoLookupModule,\r\n    DxoFilterOperationDescriptionsModule,\r\n    DxoGroupOperationDescriptionsModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxFilterBuilderComponent\r\n  ],\r\n  exports: [\r\n    DxFilterBuilderComponent,\r\n    DxiCustomOperationModule,\r\n    DxiFieldModule,\r\n    DxoFormatModule,\r\n    DxoLookupModule,\r\n    DxoFilterOperationDescriptionsModule,\r\n    DxoGroupOperationDescriptionsModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxFilterBuilderModule { }\r\n"]}